-- Copyright (C) 2023  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and any partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details, at
-- https://fpgasoftware.intel.com/eula.
--map_select[0] is map_select[0]
--operation mode is input

map_select[0] = INPUT();


--map_select[1] is map_select[1]
--operation mode is input

map_select[1] = INPUT();


--map_select[2] is map_select[2]
--operation mode is input

map_select[2] = INPUT();


--matriz_colune_data[0] is matriz_colune_data[0]
--operation mode is output

matriz_colune_data[0] = OUTPUT(G1L1);


--matriz_colune_data[1] is matriz_colune_data[1]
--operation mode is output

matriz_colune_data[1] = OUTPUT(G1L1);


--matriz_colune_data[2] is matriz_colune_data[2]
--operation mode is output

matriz_colune_data[2] = OUTPUT(G1L1);


--matriz_colune_data[3] is matriz_colune_data[3]
--operation mode is output

matriz_colune_data[3] = OUTPUT(G1L1);


--matriz_colune_data[4] is matriz_colune_data[4]
--operation mode is output

matriz_colune_data[4] = OUTPUT(G1L1);


--matriz_colune_data[5] is matriz_colune_data[5]
--operation mode is output

matriz_colune_data[5] = OUTPUT(G1L1);


--matriz_colune_data[6] is matriz_colune_data[6]
--operation mode is output

matriz_colune_data[6] = OUTPUT(G1L1);


--display_colune_data[0] is display_colune_data[0]
--operation mode is output

display_colune_data[0] = OUTPUT(J3L1);


--display_colune_data[1] is display_colune_data[1]
--operation mode is output

display_colune_data[1] = OUTPUT(J3L2);


--display_colune_data[2] is display_colune_data[2]
--operation mode is output

display_colune_data[2] = OUTPUT(J3L3);


--display_colune_data[3] is display_colune_data[3]
--operation mode is output

display_colune_data[3] = OUTPUT(!G2_and1[3]);


--display_colune_data[4] is display_colune_data[4]
--operation mode is output

display_colune_data[4] = OUTPUT(GND);


--display_colune_data[5] is display_colune_data[5]
--operation mode is output

display_colune_data[5] = OUTPUT(GND);


--display_colune_data[6] is display_colune_data[6]
--operation mode is output

display_colune_data[6] = OUTPUT(GND);


--matriz_colune_activator[0] is matriz_colune_activator[0]
--operation mode is output

matriz_colune_activator[0] = OUTPUT(K1_out);


--matriz_colune_activator[1] is matriz_colune_activator[1]
--operation mode is output

matriz_colune_activator[1] = OUTPUT(K2_out);


--matriz_colune_activator[2] is matriz_colune_activator[2]
--operation mode is output

matriz_colune_activator[2] = OUTPUT(K3_out);


--matriz_colune_activator[3] is matriz_colune_activator[3]
--operation mode is output

matriz_colune_activator[3] = OUTPUT(K4_out);


--matriz_colune_activator[4] is matriz_colune_activator[4]
--operation mode is output

matriz_colune_activator[4] = OUTPUT(K5_out);


--display_colune_activator[0] is display_colune_activator[0]
--operation mode is output

display_colune_activator[0] = OUTPUT(K9_out);


--display_colune_activator[1] is display_colune_activator[1]
--operation mode is output

display_colune_activator[1] = OUTPUT(K10_out);


--display_colune_activator[2] is display_colune_activator[2]
--operation mode is output

display_colune_activator[2] = OUTPUT(K11_out);


--display_colune_activator[3] is display_colune_activator[3]
--operation mode is output

display_colune_activator[3] = OUTPUT(K12_out);


--counter_teste is counter_teste
--operation mode is output

counter_teste = OUTPUT(GND);


--final_clk_teste is final_clk_teste
--operation mode is output

final_clk_teste = OUTPUT(GND);


--teste[0] is teste[0]
--operation mode is output

teste[0] = OUTPUT(GND);


--teste[1] is teste[1]
--operation mode is output

teste[1] = OUTPUT(GND);


--teste[2] is teste[2]
--operation mode is output

teste[2] = OUTPUT(GND);


--teste[3] is teste[3]
--operation mode is output

teste[3] = OUTPUT(GND);


--teste[4] is teste[4]
--operation mode is output

teste[4] = OUTPUT(GND);


--teste[5] is teste[5]
--operation mode is output

teste[5] = OUTPUT(GND);


--teste[6] is teste[6]
--operation mode is output

teste[6] = OUTPUT(GND);


--teste[7] is teste[7]
--operation mode is output

teste[7] = OUTPUT(GND);


--teste[8] is teste[8]
--operation mode is output

teste[8] = OUTPUT(GND);


--teste[9] is teste[9]
--operation mode is output

teste[9] = OUTPUT(GND);


--teste[10] is teste[10]
--operation mode is output

teste[10] = OUTPUT(GND);


--mapteste[0] is mapteste[0]
--operation mode is output

mapteste[0] = OUTPUT(GND);


--mapteste[1] is mapteste[1]
--operation mode is output

mapteste[1] = OUTPUT(GND);


--mapteste[2] is mapteste[2]
--operation mode is output

mapteste[2] = OUTPUT(GND);


--mapteste[3] is mapteste[3]
--operation mode is output

mapteste[3] = OUTPUT(GND);


--mapteste[4] is mapteste[4]
--operation mode is output

mapteste[4] = OUTPUT(GND);


--mapteste[5] is mapteste[5]
--operation mode is output

mapteste[5] = OUTPUT(GND);


--mapteste[6] is mapteste[6]
--operation mode is output

mapteste[6] = OUTPUT(GND);


--mapteste[7] is mapteste[7]
--operation mode is output

mapteste[7] = OUTPUT(GND);


--mapteste[8] is mapteste[8]
--operation mode is output

mapteste[8] = OUTPUT(GND);


--mapteste[9] is mapteste[9]
--operation mode is output

mapteste[9] = OUTPUT(GND);


--mapteste[10] is mapteste[10]
--operation mode is output

mapteste[10] = OUTPUT(GND);


--mapteste[11] is mapteste[11]
--operation mode is output

mapteste[11] = OUTPUT(GND);


--mapteste[12] is mapteste[12]
--operation mode is output

mapteste[12] = OUTPUT(GND);


--mapteste[13] is mapteste[13]
--operation mode is output

mapteste[13] = OUTPUT(GND);


--mapteste[14] is mapteste[14]
--operation mode is output

mapteste[14] = OUTPUT(GND);


--mapteste[15] is mapteste[15]
--operation mode is output

mapteste[15] = OUTPUT(GND);


--mapteste[16] is mapteste[16]
--operation mode is output

mapteste[16] = OUTPUT(GND);


--mapteste[17] is mapteste[17]
--operation mode is output

mapteste[17] = OUTPUT(GND);


--mapteste[18] is mapteste[18]
--operation mode is output

mapteste[18] = OUTPUT(GND);


--mapteste[19] is mapteste[19]
--operation mode is output

mapteste[19] = OUTPUT(GND);


--mapteste[20] is mapteste[20]
--operation mode is output

mapteste[20] = OUTPUT(GND);


--mapteste[21] is mapteste[21]
--operation mode is output

mapteste[21] = OUTPUT(GND);


--mapteste[22] is mapteste[22]
--operation mode is output

mapteste[22] = OUTPUT(GND);


--mapteste[23] is mapteste[23]
--operation mode is output

mapteste[23] = OUTPUT(GND);


--mapteste[24] is mapteste[24]
--operation mode is output

mapteste[24] = OUTPUT(GND);


--mapteste[25] is mapteste[25]
--operation mode is output

mapteste[25] = OUTPUT(GND);


--mapteste[26] is mapteste[26]
--operation mode is output

mapteste[26] = OUTPUT(GND);


--mapteste[27] is mapteste[27]
--operation mode is output

mapteste[27] = OUTPUT(GND);


--mapteste[28] is mapteste[28]
--operation mode is output

mapteste[28] = OUTPUT(GND);


--mapteste[29] is mapteste[29]
--operation mode is output

mapteste[29] = OUTPUT(GND);


--mapteste[30] is mapteste[30]
--operation mode is output

mapteste[30] = OUTPUT(GND);


--mapteste[31] is mapteste[31]
--operation mode is output

mapteste[31] = OUTPUT(GND);


--mapteste[32] is mapteste[32]
--operation mode is output

mapteste[32] = OUTPUT(GND);


--mapteste[33] is mapteste[33]
--operation mode is output

mapteste[33] = OUTPUT(GND);


--mapteste[34] is mapteste[34]
--operation mode is output

mapteste[34] = OUTPUT(GND);


--E4_out is displayer:matriz_displayer|counter3bit:counter3bit_1|t_flipflop:t_flipflop_0|out
--operation mode is normal

E4_out_lut_out = (!E4_out);
E4_out = DFFEAS(E4_out_lut_out, !E3_out, !F1L1, , , , , , );


--E5_out is displayer:matriz_displayer|counter3bit:counter3bit_1|t_flipflop:t_flipflop_1|out
--operation mode is normal

E5_out_lut_out = (!E5_out);
E5_out = DFFEAS(E5_out_lut_out, !E4_out, !F1L1, , , , , , );


--E6_out is displayer:matriz_displayer|counter3bit:counter3bit_1|t_flipflop:t_flipflop_2|out
--operation mode is normal

E6_out_lut_out = (!E6_out);
E6_out = DFFEAS(E6_out_lut_out, !E5_out, !F1L1, , , , , , );


--G1L1 is displayer:matriz_displayer|mux8x1:mux8x1_1|or1[0]~0
--operation mode is normal

G1L1 = (((!E4_out & !E5_out)) # (!E6_out));


--E7_out is displayer:segment_display|counter3bit:counter3bit_1|t_flipflop:t_flipflop_0|out
--operation mode is normal

E7_out_lut_out = (!E7_out);
E7_out = DFFEAS(E7_out_lut_out, !E3_out, !F2_andMod1, , , , , , );


--E8_out is displayer:segment_display|counter3bit:counter3bit_1|t_flipflop:t_flipflop_1|out
--operation mode is normal

E8_out_lut_out = (!E8_out);
E8_out = DFFEAS(E8_out_lut_out, !E7_out, !F2_andMod1, , , , , , );


--E9_out is displayer:segment_display|counter3bit:counter3bit_1|t_flipflop:t_flipflop_2|out
--operation mode is normal

E9_out_lut_out = (!E9_out);
E9_out = DFFEAS(E9_out_lut_out, !E8_out, !F2_andMod1, , , , , , );


--J3L1 is displayer:segment_display|mux8x1:mux8x1_1|mux4x1:mux4x1_1|and3[1]~0
--operation mode is normal

J3L1 = (E7_out & (E8_out & ((!E9_out))));


--J3L2 is displayer:segment_display|mux8x1:mux8x1_1|mux4x1:mux4x1_1|and3[1]~1
--operation mode is normal

J3L2 = (E8_out & (((!E7_out & !E9_out))));


--J3L3 is displayer:segment_display|mux8x1:mux8x1_1|mux4x1:mux4x1_1|and3[1]~2
--operation mode is normal

J3L3 = (E7_out & (((!E8_out & !E9_out))));


--G2_and1[3] is displayer:segment_display|mux8x1:mux8x1_1|and1[3]
--operation mode is normal

G2_and1[3] = (E7_out) # ((E8_out) # ((E9_out)));


--K1_out is displayer:matriz_displayer|register8bit:register8bit_1|d_flipflop:d_flipflop_0|out
--operation mode is normal

K1_out_lut_out = ((!E6_out & (!E4_out & !E5_out)));
K1_out = DFFEAS(K1_out_lut_out, E3_out, VCC, , , , , , );


--K2_out is displayer:matriz_displayer|register8bit:register8bit_1|d_flipflop:d_flipflop_1|out
--operation mode is normal

K2_out_lut_out = (K1_out);
K2_out = DFFEAS(K2_out_lut_out, E3_out, VCC, , , , , , );


--K3_out is displayer:matriz_displayer|register8bit:register8bit_1|d_flipflop:d_flipflop_2|out
--operation mode is normal

K3_out_lut_out = (K2_out);
K3_out = DFFEAS(K3_out_lut_out, E3_out, VCC, , , , , , );


--K4_out is displayer:matriz_displayer|register8bit:register8bit_1|d_flipflop:d_flipflop_3|out
--operation mode is normal

K4_out_lut_out = (K3_out);
K4_out = DFFEAS(K4_out_lut_out, E3_out, VCC, , , , , , );


--K5_out is displayer:matriz_displayer|register8bit:register8bit_1|d_flipflop:d_flipflop_4|out
--operation mode is normal

K5_out_lut_out = (K4_out);
K5_out = DFFEAS(K5_out_lut_out, E3_out, VCC, , , , , , );


--K9_out is displayer:segment_display|register8bit:register8bit_1|d_flipflop:d_flipflop_0|out
--operation mode is normal

K9_out_lut_out = (!G2_and1[3]);
K9_out = DFFEAS(K9_out_lut_out, E3_out, VCC, , , , , , );


--K10_out is displayer:segment_display|register8bit:register8bit_1|d_flipflop:d_flipflop_1|out
--operation mode is normal

K10_out_lut_out = (K9_out);
K10_out = DFFEAS(K10_out_lut_out, E3_out, VCC, , , , , , );


--K11_out is displayer:segment_display|register8bit:register8bit_1|d_flipflop:d_flipflop_2|out
--operation mode is normal

K11_out_lut_out = (K10_out);
K11_out = DFFEAS(K11_out_lut_out, E3_out, VCC, , , , , , );


--K12_out is displayer:segment_display|register8bit:register8bit_1|d_flipflop:d_flipflop_3|out
--operation mode is normal

K12_out_lut_out = (K11_out);
K12_out = DFFEAS(K12_out_lut_out, E3_out, VCC, , , , , , );


--E3_out is freq_div:freq_div_1|t_flipflop:t_flipflop_2|out
--operation mode is normal

E3_out_lut_out = (!E3_out);
E3_out = DFFEAS(E3_out_lut_out, !E2_out, VCC, , , , , , );


--F1L1 is displayer:matriz_displayer|counter3bit:counter3bit_1|andMod1~0
--operation mode is normal

F1L1 = (E6_out & (E4_out & ((!E5_out))));


--F2_andMod1 is displayer:segment_display|counter3bit:counter3bit_1|andMod1
--operation mode is normal

F2_andMod1 = (E7_out & (E9_out & ((!E8_out))));


--E2_out is freq_div:freq_div_1|t_flipflop:t_flipflop_1|out
--operation mode is normal

E2_out_lut_out = (!E2_out);
E2_out = DFFEAS(E2_out_lut_out, !E1_out, VCC, , , , , , );


--E1_out is freq_div:freq_div_1|t_flipflop:t_flipflop_0|out
--operation mode is normal

E1_out_lut_out = (!E1_out);
E1_out = DFFEAS(E1_out_lut_out, !cpld_clk, VCC, , , , , , );


--cpld_clk is cpld_clk
--operation mode is input

cpld_clk = INPUT();


