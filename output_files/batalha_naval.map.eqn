-- Copyright (C) 2023  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and any partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details, at
-- https://fpgasoftware.intel.com/eula.
--matriz_colune_data[0] is matriz_colune_data[0]
--operation mode is output

matriz_colune_data[0] = OUTPUT(N9L2);


--matriz_colune_data[1] is matriz_colune_data[1]
--operation mode is output

matriz_colune_data[1] = OUTPUT(N10L3);


--matriz_colune_data[2] is matriz_colune_data[2]
--operation mode is output

matriz_colune_data[2] = OUTPUT(N11L2);


--matriz_colune_data[3] is matriz_colune_data[3]
--operation mode is output

matriz_colune_data[3] = OUTPUT(N12L1);


--matriz_colune_data[4] is matriz_colune_data[4]
--operation mode is output

matriz_colune_data[4] = OUTPUT(N13L1);


--matriz_colune_data[5] is matriz_colune_data[5]
--operation mode is output

matriz_colune_data[5] = OUTPUT(N14L1);


--matriz_colune_data[6] is matriz_colune_data[6]
--operation mode is output

matriz_colune_data[6] = OUTPUT(N15L2);


--display_colune_data[0] is display_colune_data[0]
--operation mode is output

display_colune_data[0] = OUTPUT(Q31L5);


--display_colune_data[1] is display_colune_data[1]
--operation mode is output

display_colune_data[1] = OUTPUT(Q33L4);


--display_colune_data[2] is display_colune_data[2]
--operation mode is output

display_colune_data[2] = OUTPUT(Q35L1);


--display_colune_data[3] is display_colune_data[3]
--operation mode is output

display_colune_data[3] = OUTPUT(Q37L4);


--display_colune_data[4] is display_colune_data[4]
--operation mode is output

display_colune_data[4] = OUTPUT(Q39L1);


--display_colune_data[5] is display_colune_data[5]
--operation mode is output

display_colune_data[5] = OUTPUT(Q41L5);


--display_colune_data[6] is display_colune_data[6]
--operation mode is output

display_colune_data[6] = OUTPUT(Q43L6);


--matriz_colune_activator[0] is matriz_colune_activator[0]
--operation mode is output

matriz_colune_activator[0] = OUTPUT(L71_out);


--matriz_colune_activator[1] is matriz_colune_activator[1]
--operation mode is output

matriz_colune_activator[1] = OUTPUT(L72_out);


--matriz_colune_activator[2] is matriz_colune_activator[2]
--operation mode is output

matriz_colune_activator[2] = OUTPUT(L73_out);


--matriz_colune_activator[3] is matriz_colune_activator[3]
--operation mode is output

matriz_colune_activator[3] = OUTPUT(L74_out);


--matriz_colune_activator[4] is matriz_colune_activator[4]
--operation mode is output

matriz_colune_activator[4] = OUTPUT(L75_out);


--display_colune_activator[0] is display_colune_activator[0]
--operation mode is output

display_colune_activator[0] = OUTPUT(L79_out);


--display_colune_activator[1] is display_colune_activator[1]
--operation mode is output

display_colune_activator[1] = OUTPUT(L80_out);


--display_colune_activator[2] is display_colune_activator[2]
--operation mode is output

display_colune_activator[2] = OUTPUT(L81_out);


--display_colune_activator[3] is display_colune_activator[3]
--operation mode is output

display_colune_activator[3] = OUTPUT(L82_out);


--ledRgb[0] is ledRgb[0]
--operation mode is output

ledRgb[0] = OUTPUT(B1L1);


--ledRgb[1] is ledRgb[1]
--operation mode is output

ledRgb[1] = OUTPUT(B1L2);


--R19_out is displayer:matriz_displayer|counter3bit:counter3bit_1|t_flipflop:t_flipflop_2|out
--operation mode is normal

R19_out_lut_out = (!R19_out);
R19_out = DFFEAS(R19_out_lut_out, !R18_out, !K1_andLoopResetEnable, , , , , , );


--R17_out is displayer:matriz_displayer|counter3bit:counter3bit_1|t_flipflop:t_flipflop_0|out
--operation mode is normal

R17_out_lut_out = (!R17_out);
R17_out = DFFEAS(R17_out_lut_out, !R3_out, !K1_andLoopResetEnable, , , , , , );


--R18_out is displayer:matriz_displayer|counter3bit:counter3bit_1|t_flipflop:t_flipflop_1|out
--operation mode is normal

R18_out_lut_out = (!R18_out);
R18_out = DFFEAS(R18_out_lut_out, !R17_out, !K1_andLoopResetEnable, , , , , , );


--C2L1 is displayer:matriz_displayer|counter3bit:counter3bit_1|andLoopStart_1~0
--operation mode is normal

C2L1 = ((!R19_out & (!R17_out & !R18_out)));


--R9_out is counter3bit:counterMapCode|t_flipflop:t_flipflop_0|out
--operation mode is normal

R9_out_lut_out = (!R9_out);
R9_out = DFFEAS(R9_out_lut_out, D1_and0, !G1L2, , , , , , );


--N9L1 is displayer:matriz_displayer|mux8x1:mux8x1_1[0]|or1~0
--operation mode is normal

N9L1 = (R17_out & (((!R19_out)))) # (!R17_out & ((R18_out & ((!R19_out))) # (!R18_out & (R9_out))));


--game_state_code[0] is game_state_code[0]
--operation mode is input

game_state_code[0] = INPUT();


--N9L2 is displayer:matriz_displayer|mux8x1:mux8x1_1[0]|or1~1
--operation mode is normal

N9L2 = (G1_and1 & (C2L1)) # (!G1_and1 & (((N9L1 & game_state_code[0]))));


--N10L1 is displayer:matriz_displayer|mux8x1:mux8x1_1[1]|or1~2
--operation mode is normal

N10L1 = (game_state_code[0] & (((!G1_and1))));


--N10L2 is displayer:matriz_displayer|mux8x1:mux8x1_1[1]|or1~3
--operation mode is normal

N10L2 = (R17_out & (!R9_out & ((!R19_out)))) # (!R17_out & ((R18_out & ((!R19_out))) # (!R18_out & (R9_out))));


--N11L1 is displayer:matriz_displayer|mux8x1:mux8x1_1[2]|or1~2
--operation mode is normal

N11L1 = (R19_out & (!R18_out & ((!R17_out)))) # (!R19_out & ((R9_out & ((!R17_out))) # (!R9_out & (R18_out))));


--C2L2 is displayer:matriz_displayer|counter3bit:counter3bit_1|andLoopStart_1~1
--operation mode is normal

C2L2 = (((!R17_out & !R18_out)));


--N12L1 is displayer:matriz_displayer|mux8x1:mux8x1_1[3]|or1~0
--operation mode is normal

N12L1 = (N10L1 & ((C2L2 & ((R9_out) # (R19_out))) # (!C2L2 & ((!R19_out)))));


--N13L1 is displayer:matriz_displayer|mux8x1:mux8x1_1[4]|or1~0
--operation mode is normal

N13L1 = (N10L1 & ((C2L2 & ((!R9_out))) # (!C2L2 & (!R19_out))));


--N14L1 is displayer:matriz_displayer|mux8x1:mux8x1_1[5]|or1~0
--operation mode is normal

N14L1 = (N10L1 & ((R9_out & (C2L2)) # (!R9_out & ((!R19_out)))));


--N15L1 is displayer:matriz_displayer|mux8x1:mux8x1_1[6]|or1~2
--operation mode is normal

N15L1 = (R9_out & (((!R17_out & !R18_out)) # (!R19_out))) # (!R9_out & (!R19_out & ((!R18_out) # (!R17_out))));


--R22_out is displayer:segment_display|counter3bit:counter3bit_1|t_flipflop:t_flipflop_2|out
--operation mode is normal

R22_out_lut_out = (!R22_out);
R22_out = DFFEAS(R22_out_lut_out, !R21_out, !K2_andLoopResetEnable, , , , , , );


--Q43L1 is displayer:segment_display|mux8x1:mux8x1_1[6]|mux4x1:mux4x1_1|andEnable~0
--operation mode is normal

Q43L1 = ((!R22_out & ((G1_and1) # (game_state_code[0]))));


--R21_out is displayer:segment_display|counter3bit:counter3bit_1|t_flipflop:t_flipflop_1|out
--operation mode is normal

R21_out_lut_out = (!R21_out);
R21_out = DFFEAS(R21_out_lut_out, !R20_out, !K2_andLoopResetEnable, , , , , , );


--game_state_code[1] is game_state_code[1]
--operation mode is input

game_state_code[1] = INPUT();


--Q31L1 is displayer:segment_display|mux8x1:mux8x1_1[0]|mux4x1:mux4x1_1|andEnable~0
--operation mode is normal

Q31L1 = (R21_out & ((game_state_code[0] & ((!game_state_code[1]))) # (!game_state_code[0] & (!G1_and1))));


--R20_out is displayer:segment_display|counter3bit:counter3bit_1|t_flipflop:t_flipflop_0|out
--operation mode is normal

R20_out_lut_out = (!R20_out);
R20_out = DFFEAS(R20_out_lut_out, !R3_out, !K2_andLoopResetEnable, , , , , , );


--x_coord_code[0] is x_coord_code[0]
--operation mode is input

x_coord_code[0] = INPUT();


--x_coord_code[2] is x_coord_code[2]
--operation mode is input

x_coord_code[2] = INPUT();


--x_coord_code[1] is x_coord_code[1]
--operation mode is input

x_coord_code[1] = INPUT();


--Q31L2 is displayer:segment_display|mux8x1:mux8x1_1[0]|mux4x1:mux4x1_1|andEnable~1
--operation mode is normal

Q31L2 = (R20_out & (!x_coord_code[1] & (x_coord_code[0] $ (x_coord_code[2]))));


--Q31L3 is displayer:segment_display|mux8x1:mux8x1_1[0]|mux4x1:mux4x1_1|andEnable~2
--operation mode is normal

Q31L3 = (Q31L1) # ((!R21_out & ((Q31L2) # (!G1_and1))));


--y_coord_code[0] is y_coord_code[0]
--operation mode is input

y_coord_code[0] = INPUT();


--y_coord_code[2] is y_coord_code[2]
--operation mode is input

y_coord_code[2] = INPUT();


--y_coord_code[1] is y_coord_code[1]
--operation mode is input

y_coord_code[1] = INPUT();


--Q31L4 is displayer:segment_display|mux8x1:mux8x1_1[0]|mux4x1:mux4x1_1|andEnable~3
--operation mode is normal

Q31L4 = (R21_out) # ((!y_coord_code[1] & (y_coord_code[0] $ (y_coord_code[2]))));


--Q31L5 is displayer:segment_display|mux8x1:mux8x1_1[0]|mux4x1:mux4x1_1|andEnable~4
--operation mode is normal

Q31L5 = (Q43L1 & ((Q31L3) # ((Q31L4 & !R20_out))));


--Q33L1 is displayer:segment_display|mux8x1:mux8x1_1[1]|mux4x1:mux4x1_1|andEnable~0
--operation mode is normal

Q33L1 = (R20_out & (x_coord_code[2] & (x_coord_code[0] $ (x_coord_code[1]))));


--Q33L2 is displayer:segment_display|mux8x1:mux8x1_1[1]|mux4x1:mux4x1_1|andEnable~1
--operation mode is normal

Q33L2 = ((!R21_out & ((Q33L1) # (!G1_and1))));


--Q33L3 is displayer:segment_display|mux8x1:mux8x1_1[1]|mux4x1:mux4x1_1|andEnable~2
--operation mode is normal

Q33L3 = (R21_out) # ((y_coord_code[2] & (y_coord_code[1] $ (y_coord_code[0]))));


--Q33L4 is displayer:segment_display|mux8x1:mux8x1_1[1]|mux4x1:mux4x1_1|andEnable~3
--operation mode is normal

Q33L4 = (Q43L1 & ((Q33L2) # ((Q33L3 & !R20_out))));


--Q35L2 is displayer:segment_display|mux8x1:mux8x1_1[2]|mux4x1:mux4x1_1|or1~0
--operation mode is normal

Q35L2 = (((R21_out & game_state_code[1])) # (!G1_and1));


--Q35L3 is displayer:segment_display|mux8x1:mux8x1_1[2]|mux4x1:mux4x1_1|or1~1
--operation mode is normal

Q35L3 = (x_coord_code[1] & (((!x_coord_code[2]))));


--Q35L4 is displayer:segment_display|mux8x1:mux8x1_1[2]|mux4x1:mux4x1_1|or1~2
--operation mode is normal

Q35L4 = ((R20_out & (Q35L3 & !x_coord_code[0]))) # (!G1_and1);


--Q35L5 is displayer:segment_display|mux8x1:mux8x1_1[2]|mux4x1:mux4x1_1|or1~3
--operation mode is normal

Q35L5 = (Q35L2 & (((Q35L4 & !R21_out)) # (!game_state_code[0]))) # (!Q35L2 & (Q35L4 & ((!R21_out))));


--Q35L6 is displayer:segment_display|mux8x1:mux8x1_1[2]|mux4x1:mux4x1_1|or1~4
--operation mode is normal

Q35L6 = (R21_out) # ((y_coord_code[1] & (!y_coord_code[0] & !y_coord_code[2])));


--Q35L1 is displayer:segment_display|mux8x1:mux8x1_1[2]|mux4x1:mux4x1_1|andEnable~0
--operation mode is normal

Q35L1 = (Q43L1 & ((Q35L5) # ((Q35L6 & !R20_out))));


--Q37L1 is displayer:segment_display|mux8x1:mux8x1_1[3]|mux4x1:mux4x1_1|andEnable~0
--operation mode is normal

Q37L1 = (R20_out & ((x_coord_code[0] & (x_coord_code[2] $ (!x_coord_code[1]))) # (!x_coord_code[0] & (x_coord_code[2] & !x_coord_code[1]))));


--Q37L2 is displayer:segment_display|mux8x1:mux8x1_1[3]|mux4x1:mux4x1_1|andEnable~1
--operation mode is normal

Q37L2 = (Q31L1) # ((!R21_out & ((Q37L1) # (!G1_and1))));


--Q37L3 is displayer:segment_display|mux8x1:mux8x1_1[3]|mux4x1:mux4x1_1|andEnable~2
--operation mode is normal

Q37L3 = (R21_out) # ((y_coord_code[0] & (y_coord_code[2] $ (!y_coord_code[1]))) # (!y_coord_code[0] & (y_coord_code[2] & !y_coord_code[1])));


--Q37L4 is displayer:segment_display|mux8x1:mux8x1_1[3]|mux4x1:mux4x1_1|andEnable~3
--operation mode is normal

Q37L4 = (Q43L1 & ((Q37L2) # ((Q37L3 & !R20_out))));


--Q39L2 is displayer:segment_display|mux8x1:mux8x1_1[4]|mux4x1:mux4x1_1|or1~0
--operation mode is normal

Q39L2 = (((game_state_code[0] & R21_out)) # (!G1_and1));


--Q39L3 is displayer:segment_display|mux8x1:mux8x1_1[4]|mux4x1:mux4x1_1|or1~1
--operation mode is normal

Q39L3 = (y_coord_code[2] & (((!y_coord_code[1]))));


--Q39L4 is displayer:segment_display|mux8x1:mux8x1_1[4]|mux4x1:mux4x1_1|or1~2
--operation mode is normal

Q39L4 = (!R20_out & ((R21_out) # ((y_coord_code[0]) # (Q39L3))));


--Q37L5 is displayer:segment_display|mux8x1:mux8x1_1[3]|mux4x1:mux4x1_1|andEnable~4
--operation mode is normal

Q37L5 = (x_coord_code[2] & (((!x_coord_code[1]))));


--Q39L5 is displayer:segment_display|mux8x1:mux8x1_1[4]|mux4x1:mux4x1_1|or1~3
--operation mode is normal

Q39L5 = (R20_out & (!R21_out & ((x_coord_code[0]) # (Q37L5))));


--Q39L1 is displayer:segment_display|mux8x1:mux8x1_1[4]|mux4x1:mux4x1_1|andEnable~0
--operation mode is normal

Q39L1 = (Q43L1 & ((Q39L2) # ((Q39L4) # (Q39L5))));


--Q41L1 is displayer:segment_display|mux8x1:mux8x1_1[5]|mux4x1:mux4x1_1|andEnable~0
--operation mode is normal

Q41L1 = (game_state_code[0]) # ((game_state_code[1]));


--Q41L2 is displayer:segment_display|mux8x1:mux8x1_1[5]|mux4x1:mux4x1_1|andEnable~1
--operation mode is normal

Q41L2 = (R20_out & ((x_coord_code[0] & ((x_coord_code[1]) # (!x_coord_code[2]))) # (!x_coord_code[0] & (x_coord_code[1] & !x_coord_code[2]))));


--Q41L3 is displayer:segment_display|mux8x1:mux8x1_1[5]|mux4x1:mux4x1_1|andEnable~2
--operation mode is normal

Q41L3 = (R21_out & (Q41L1)) # (!R21_out & (((Q41L2) # (!G1_and1))));


--Q41L4 is displayer:segment_display|mux8x1:mux8x1_1[5]|mux4x1:mux4x1_1|andEnable~3
--operation mode is normal

Q41L4 = (R21_out) # ((y_coord_code[1] & ((y_coord_code[0]) # (!y_coord_code[2]))) # (!y_coord_code[1] & (y_coord_code[0] & !y_coord_code[2])));


--Q41L5 is displayer:segment_display|mux8x1:mux8x1_1[5]|mux4x1:mux4x1_1|andEnable~4
--operation mode is normal

Q41L5 = (Q43L1 & ((Q41L3) # ((Q41L4 & !R20_out))));


--Q43L2 is displayer:segment_display|mux8x1:mux8x1_1[6]|mux4x1:mux4x1_1|andEnable~1
--operation mode is normal

Q43L2 = (R21_out) # ((y_coord_code[1] & (y_coord_code[0] & y_coord_code[2])) # (!y_coord_code[1] & ((!y_coord_code[2]))));


--Q43L3 is displayer:segment_display|mux8x1:mux8x1_1[6]|mux4x1:mux4x1_1|andEnable~2
--operation mode is normal

Q43L3 = (Q43L2 & (((R21_out & !game_state_code[1])) # (!R20_out))) # (!Q43L2 & (R21_out & ((!game_state_code[1]))));


--Q43L4 is displayer:segment_display|mux8x1:mux8x1_1[6]|mux4x1:mux4x1_1|andEnable~3
--operation mode is normal

Q43L4 = (x_coord_code[2] & (x_coord_code[0] & (x_coord_code[1]))) # (!x_coord_code[2] & (((!x_coord_code[1]))));


--Q43L5 is displayer:segment_display|mux8x1:mux8x1_1[6]|mux4x1:mux4x1_1|andEnable~4
--operation mode is normal

Q43L5 = (((R20_out & Q43L4)) # (!G1_and1));


--Q43L6 is displayer:segment_display|mux8x1:mux8x1_1[6]|mux4x1:mux4x1_1|andEnable~5
--operation mode is normal

Q43L6 = (Q43L1 & ((Q43L3) # ((Q43L5 & !R21_out))));


--L71_out is displayer:matriz_displayer|register8bitSIPO:register8bitSIPO_1|d_flipflop:d_flipflop_0|out
--operation mode is normal

L71_out_lut_out = (C2L1);
L71_out = DFFEAS(L71_out_lut_out, R3_out, !G1L2, , , , , , );


--L72_out is displayer:matriz_displayer|register8bitSIPO:register8bitSIPO_1|d_flipflop:d_flipflop_1|out
--operation mode is normal

L72_out_lut_out = (L71_out);
L72_out = DFFEAS(L72_out_lut_out, R3_out, !G1L2, , , , , , );


--L73_out is displayer:matriz_displayer|register8bitSIPO:register8bitSIPO_1|d_flipflop:d_flipflop_2|out
--operation mode is normal

L73_out_lut_out = (L72_out);
L73_out = DFFEAS(L73_out_lut_out, R3_out, !G1L2, , , , , , );


--L74_out is displayer:matriz_displayer|register8bitSIPO:register8bitSIPO_1|d_flipflop:d_flipflop_3|out
--operation mode is normal

L74_out_lut_out = (L73_out);
L74_out = DFFEAS(L74_out_lut_out, R3_out, !G1L2, , , , , , );


--L75_out is displayer:matriz_displayer|register8bitSIPO:register8bitSIPO_1|d_flipflop:d_flipflop_4|out
--operation mode is normal

L75_out_lut_out = (L74_out);
L75_out = DFFEAS(L75_out_lut_out, R3_out, !G1L2, , , , , , );


--L79_out is displayer:segment_display|register8bitSIPO:register8bitSIPO_1|d_flipflop:d_flipflop_0|out
--operation mode is normal

L79_out_lut_out = ((!R22_out & (!R20_out & !R21_out)));
L79_out = DFFEAS(L79_out_lut_out, R3_out, !G1L2, , , , , , );


--L80_out is displayer:segment_display|register8bitSIPO:register8bitSIPO_1|d_flipflop:d_flipflop_1|out
--operation mode is normal

L80_out_lut_out = (L79_out);
L80_out = DFFEAS(L80_out_lut_out, R3_out, !G1L2, , , , , , );


--L81_out is displayer:segment_display|register8bitSIPO:register8bitSIPO_1|d_flipflop:d_flipflop_2|out
--operation mode is normal

L81_out_lut_out = (L80_out);
L81_out = DFFEAS(L81_out_lut_out, R3_out, !G1L2, , , , , , );


--L82_out is displayer:segment_display|register8bitSIPO:register8bitSIPO_1|d_flipflop:d_flipflop_3|out
--operation mode is normal

L82_out_lut_out = (L81_out);
L82_out = DFFEAS(L82_out_lut_out, R3_out, !G1L2, , , , , , );


--R16_out is debouncer:debouncerConfirmAttack|t_flipflop:t_flipflop_5|out
--operation mode is normal

R16_out_lut_out = (!R16_out);
R16_out = DFFEAS(R16_out_lut_out, !R15_out, !confirmAttack, , , , , , );


--R12_out is debouncer:debouncerConfirmAttack|t_flipflop:t_flipflop_1|out
--operation mode is normal

R12_out_lut_out = (!R12_out);
R12_out = DFFEAS(R12_out_lut_out, D2_or0, !confirmAttack, , , , , , );


--R13_out is debouncer:debouncerConfirmAttack|t_flipflop:t_flipflop_2|out
--operation mode is normal

R13_out_lut_out = (!R13_out);
R13_out = DFFEAS(R13_out_lut_out, !R12_out, !confirmAttack, , , , , , );


--R14_out is debouncer:debouncerConfirmAttack|t_flipflop:t_flipflop_3|out
--operation mode is normal

R14_out_lut_out = (!R14_out);
R14_out = DFFEAS(R14_out_lut_out, !R13_out, !confirmAttack, , , , , , );


--R15_out is debouncer:debouncerConfirmAttack|t_flipflop:t_flipflop_4|out
--operation mode is normal

R15_out_lut_out = (!R15_out);
R15_out = DFFEAS(R15_out_lut_out, !R14_out, !confirmAttack, , , , , , );


--D2L1 is debouncer:debouncerConfirmAttack|and0~0
--operation mode is normal

D2L1 = (R12_out & (R13_out & (R14_out & R15_out)));


--L33_out is attack_round:attack_round_1|d_flipflop:selected_map_register[32]|out
--operation mode is normal

L33_out_lut_out = (!R9_out);
L33_out = DFFEAS(L33_out_lut_out, G1_and1, !G1L2, , , , , , );


--N8L1 is attack_round:attack_round_1|mux8x1:yCoordMuxSelectedMap|or1~0
--operation mode is normal

N8L1 = (y_coord_code[2] & ((y_coord_code[0]) # ((!y_coord_code[1])))) # (!y_coord_code[2] & ((y_coord_code[1] & ((x_coord_code[0]))) # (!y_coord_code[1] & (y_coord_code[0]))));


--L35_out is attack_round:attack_round_1|d_flipflop:selected_map_register[34]|out
--operation mode is normal

L35_out_lut_out = (R9_out);
L35_out = DFFEAS(L35_out_lut_out, G1_and1, !G1L2, , , , , , );


--L32_out is attack_round:attack_round_1|d_flipflop:selected_map_register[31]|out
--operation mode is normal

L32_out_lut_out = VCC;
L32_out = DFFEAS(L32_out_lut_out, G1_and1, !G1L2, , , , , , );


--N8L2 is attack_round:attack_round_1|mux8x1:yCoordMuxSelectedMap|or1~1
--operation mode is normal

N8L2 = (y_coord_code[1] & (((!y_coord_code[0] & y_coord_code[2])) # (!x_coord_code[0])));


--N8L3 is attack_round:attack_round_1|mux8x1:yCoordMuxSelectedMap|or1~2
--operation mode is normal

N8L3 = (N8L1 & ((N8L2 & (L35_out)) # (!N8L2 & ((L32_out))))) # (!N8L1 & (((N8L2))));


--N8L4 is attack_round:attack_round_1|mux8x1:yCoordMuxSelectedMap|or1~3
--operation mode is normal

N8L4 = (Q35L3 & (N8L3 & ((L33_out) # (N8L1))));


--N8L5 is attack_round:attack_round_1|mux8x1:yCoordMuxSelectedMap|or1~4
--operation mode is normal

N8L5 = (x_coord_code[0] & (L35_out & (!x_coord_code[1])));


--N8L6 is attack_round:attack_round_1|mux8x1:yCoordMuxSelectedMap|or1~5
--operation mode is normal

N8L6 = (y_coord_code[0] & (y_coord_code[2] $ (((!y_coord_code[1]) # (!x_coord_code[2]))))) # (!y_coord_code[0] & (y_coord_code[2] & (x_coord_code[2])));


--N8L7 is attack_round:attack_round_1|mux8x1:yCoordMuxSelectedMap|or1~6
--operation mode is normal

N8L7 = (N8L5 & ((y_coord_code[1] & ((L32_out) # (!N8L6))) # (!y_coord_code[1] & ((N8L6)))));


--N8L8 is attack_round:attack_round_1|mux8x1:yCoordMuxSelectedMap|or1~7
--operation mode is normal

N8L8 = (Q37L5 & (L33_out & (!y_coord_code[0] & !x_coord_code[0])));


--N8L9 is attack_round:attack_round_1|mux8x1:yCoordMuxSelectedMap|or1~8
--operation mode is normal

N8L9 = (y_coord_code[0] & (x_coord_code[0] & (!y_coord_code[2] & !x_coord_code[2])));


--N8L10 is attack_round:attack_round_1|mux8x1:yCoordMuxSelectedMap|or1~9
--operation mode is normal

N8L10 = (y_coord_code[1] & ((N8L8) # ((L32_out & N8L9))));


--N8L11 is attack_round:attack_round_1|mux8x1:yCoordMuxSelectedMap|or1~10
--operation mode is normal

N8L11 = (L32_out & (((!y_coord_code[0] & !x_coord_code[2]))));


--N8L12 is attack_round:attack_round_1|mux8x1:yCoordMuxSelectedMap|or1~11
--operation mode is normal

N8L12 = (y_coord_code[0] & (L33_out & ((!x_coord_code[1]))));


--N8L13 is attack_round:attack_round_1|mux8x1:yCoordMuxSelectedMap|or1~12
--operation mode is normal

N8L13 = (x_coord_code[0] & (Q39L3 & ((N8L11) # (N8L12))));


--N8L14 is attack_round:attack_round_1|mux8x1:yCoordMuxSelectedMap|or1~13
--operation mode is normal

N8L14 = (y_coord_code[1] & (y_coord_code[2] & ((y_coord_code[0]) # (x_coord_code[0])))) # (!y_coord_code[1] & (!x_coord_code[0] & ((y_coord_code[2]) # (y_coord_code[0]))));


--N8L15 is attack_round:attack_round_1|mux8x1:yCoordMuxSelectedMap|or1~14
--operation mode is normal

N8L15 = (N8L13) # ((Q37L5 & (L32_out & N8L14)));


--N8L16 is attack_round:attack_round_1|mux8x1:yCoordMuxSelectedMap|or1~15
--operation mode is normal

N8L16 = (N8L4) # ((N8L7) # ((N8L10) # (N8L15)));


--B1L1 is attack_round:attack_round_1|andGreen~0
--operation mode is normal

B1L1 = (R16_out & (D2L1 & ((!N8L16) # (!G1_and1))));


--B1L2 is attack_round:attack_round_1|andRed~0
--operation mode is normal

B1L2 = (G1_and1 & (N8L16 & (R16_out & D2L1)));


--G1L2 is game_state_decoder:game_state_decoder_1|or0~0
--operation mode is normal

G1L2 = (!G1_and1 & (!game_state_code[0]));


--K1_andLoopResetEnable is displayer:matriz_displayer|andLoopResetEnable
--operation mode is normal

K1_andLoopResetEnable = (G1L2) # ((R19_out & (R17_out & !R18_out)));


--R3_out is freq_div:freq_div_1|t_flipflop:t_flipflop_2|out
--operation mode is normal

R3_out_lut_out = (!R3_out);
R3_out = DFFEAS(R3_out_lut_out, !R2_out, VCC, , , , , , );


--G1_and1 is game_state_decoder:game_state_decoder_1|and1
--operation mode is normal

G1_and1 = LCELL((game_state_code[1] & (((!game_state_code[0])))));


--K2_andLoopResetEnable is displayer:segment_display|andLoopResetEnable
--operation mode is normal

K2_andLoopResetEnable = (G1L2) # ((R22_out & (R20_out & !R21_out)));


--confirmAttack is confirmAttack
--operation mode is input

confirmAttack = INPUT();


--R2_out is freq_div:freq_div_1|t_flipflop:t_flipflop_1|out
--operation mode is normal

R2_out_lut_out = (!R2_out);
R2_out = DFFEAS(R2_out_lut_out, !R1_out, VCC, , , , , , );


--R8_out is debouncer:debouncerNextMap|t_flipflop:t_flipflop_5|out
--operation mode is normal

R8_out_lut_out = (!R8_out);
R8_out = DFFEAS(R8_out_lut_out, !R7_out, !nextMap, , , , , , );


--R4_out is debouncer:debouncerNextMap|t_flipflop:t_flipflop_1|out
--operation mode is normal

R4_out_lut_out = (!R4_out);
R4_out = DFFEAS(R4_out_lut_out, D1_or0, !nextMap, , , , , , );


--R5_out is debouncer:debouncerNextMap|t_flipflop:t_flipflop_2|out
--operation mode is normal

R5_out_lut_out = (!R5_out);
R5_out = DFFEAS(R5_out_lut_out, !R4_out, !nextMap, , , , , , );


--D1L2 is debouncer:debouncerNextMap|and0~0
--operation mode is normal

D1L2 = (R4_out & (R5_out));


--R6_out is debouncer:debouncerNextMap|t_flipflop:t_flipflop_3|out
--operation mode is normal

R6_out_lut_out = (!R6_out);
R6_out = DFFEAS(R6_out_lut_out, !R5_out, !nextMap, , , , , , );


--R7_out is debouncer:debouncerNextMap|t_flipflop:t_flipflop_4|out
--operation mode is normal

R7_out_lut_out = (!R7_out);
R7_out = DFFEAS(R7_out_lut_out, !R6_out, !nextMap, , , , , , );


--D1_and0 is debouncer:debouncerNextMap|and0
--operation mode is normal

D1_and0 = LCELL((R8_out & (D1L2 & (R6_out & R7_out))));


--D2_or0 is debouncer:debouncerConfirmAttack|or0
--operation mode is normal

D2_or0 = LCELL((!R3_out & (!confirmAttack & ((!D2L1) # (!R16_out)))));


--R1_out is freq_div:freq_div_1|t_flipflop:t_flipflop_0|out
--operation mode is normal

R1_out_lut_out = (!R1_out);
R1_out = DFFEAS(R1_out_lut_out, !cpld_clk, VCC, , , , , , );


--nextMap is nextMap
--operation mode is input

nextMap = INPUT();


--cpld_clk is cpld_clk
--operation mode is input

cpld_clk = INPUT();


--D1_or0 is debouncer:debouncerNextMap|or0
--operation mode is normal

D1_or0 = LCELL((!R3_out & (!D1_and0 & (!nextMap))));


--N10L3 is displayer:matriz_displayer|mux8x1:mux8x1_1[1]|or1~4
--operation mode is normal

N10L3 = (game_state_code[0] & (!G1_and1 & (N10L2)));


--N11L2 is displayer:matriz_displayer|mux8x1:mux8x1_1[2]|or1~3
--operation mode is normal

N11L2 = (game_state_code[0] & (!G1_and1 & (N11L1)));


--N15L2 is displayer:matriz_displayer|mux8x1:mux8x1_1[6]|or1~3
--operation mode is normal

N15L2 = (game_state_code[0] & (!G1_and1 & (N15L1)));


