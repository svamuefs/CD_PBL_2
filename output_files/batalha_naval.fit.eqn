-- Copyright (C) 2023  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and any partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details, at
-- https://fpgasoftware.intel.com/eula.
--linha_matriz[0] is linha_matriz[0] at PIN_48
--operation mode is output

linha_matriz[0] = OUTPUT(GND);


--linha_matriz[1] is linha_matriz[1] at PIN_21
--operation mode is output

linha_matriz[1] = OUTPUT(GND);


--linha_matriz[2] is linha_matriz[2] at PIN_71
--operation mode is output

linha_matriz[2] = OUTPUT(GND);


--linha_matriz[3] is linha_matriz[3] at PIN_78
--operation mode is output

linha_matriz[3] = OUTPUT(GND);


--linha_matriz[4] is linha_matriz[4] at PIN_91
--operation mode is output

linha_matriz[4] = OUTPUT(GND);


--linha_matriz[5] is linha_matriz[5] at PIN_85
--operation mode is output

linha_matriz[5] = OUTPUT(GND);


--linha_matriz[6] is linha_matriz[6] at PIN_27
--operation mode is output

linha_matriz[6] = OUTPUT(GND);


--coluna_matriz[0] is coluna_matriz[0] at PIN_66
--operation mode is output

coluna_matriz[0] = OUTPUT(F7_out);


--coluna_matriz[1] is coluna_matriz[1] at PIN_67
--operation mode is output

coluna_matriz[1] = OUTPUT(F6_out);


--coluna_matriz[2] is coluna_matriz[2] at PIN_68
--operation mode is output

coluna_matriz[2] = OUTPUT(F5_out);


--coluna_matriz[3] is coluna_matriz[3] at PIN_64
--operation mode is output

coluna_matriz[3] = OUTPUT(F4_out);


--coluna_matriz[4] is coluna_matriz[4] at PIN_72
--operation mode is output

coluna_matriz[4] = OUTPUT(F3_out);


--mod5counter_teste is mod5counter_teste at PIN_69
--operation mode is output

mod5counter_teste = OUTPUT(B1L1);


--final_clk_teste is final_clk_teste at PIN_12
--operation mode is output

final_clk_teste = OUTPUT(E5_out);


--F7_out is register7bit:register7bit_1|d_flipflop:d_flipflop_6|out at LC_X7_Y3_N9
--operation mode is normal
--sload is tied to vcc, which is functionally the same as treating the sdata port as the data input.

F7_out_lut_out = GND;
F7_out = DFFEAS(F7_out_lut_out, !GLOBAL(E5_out), VCC, , , F6_out, , , VCC);


--F6_out is register7bit:register7bit_1|d_flipflop:d_flipflop_5|out at LC_X7_Y3_N5
--operation mode is normal
--sload is tied to vcc, which is functionally the same as treating the sdata port as the data input.

F6_out_lut_out = GND;
F6_out = DFFEAS(F6_out_lut_out, !GLOBAL(E5_out), VCC, , , F5_out, , , VCC);


--F5_out is register7bit:register7bit_1|d_flipflop:d_flipflop_4|out at LC_X7_Y3_N4
--operation mode is normal
--sload is tied to vcc, which is functionally the same as treating the sdata port as the data input.

F5_out_lut_out = GND;
F5_out = DFFEAS(F5_out_lut_out, !GLOBAL(E5_out), VCC, , , F4_out, , , VCC);


--F4_out is register7bit:register7bit_1|d_flipflop:d_flipflop_3|out at LC_X7_Y3_N7
--operation mode is normal
--sload is tied to vcc, which is functionally the same as treating the sdata port as the data input.

F4_out_lut_out = GND;
F4_out = DFFEAS(F4_out_lut_out, !GLOBAL(E5_out), VCC, , , F3_out, , , VCC);


--F3_out is register7bit:register7bit_1|d_flipflop:d_flipflop_2|out at LC_X7_Y3_N6
--operation mode is normal
--sload is tied to vcc, which is functionally the same as treating the sdata port as the data input.

F3_out_lut_out = GND;
F3_out = DFFEAS(F3_out_lut_out, !GLOBAL(E5_out), VCC, , , F2_out, , , VCC);


--E6_out is counter3bit:counter3bit_1|t_flipflop:t_flipflop_0|out at LC_X6_Y3_N4
--operation mode is normal

E6_out_lut_out = (((!E6_out)));
E6_out = DFFEAS(E6_out_lut_out, GLOBAL(E5_out), VCC, , , , , , );


--E7_out is counter3bit:counter3bit_1|t_flipflop:t_flipflop_1|out at LC_X6_Y3_N9
--operation mode is normal

E7_out_lut_out = (((!E7_out)));
E7_out = DFFEAS(E7_out_lut_out, E6_out, VCC, , , , , , );


--E8_out is counter3bit:counter3bit_1|t_flipflop:t_flipflop_2|out at LC_X7_Y3_N8
--operation mode is normal

E8_out_lut_out = (((!E8_out)));
E8_out = DFFEAS(E8_out_lut_out, E7_out, VCC, , , , , , );


--B1L1 is counter3bit:counter3bit_1|and1~0 at LC_X7_Y3_N2
--operation mode is normal

B1L1 = (E7_out & (E6_out & ((E8_out))));

--F1_out is register7bit:register7bit_1|d_flipflop:d_flipflop_0|out at LC_X7_Y3_N2
--operation mode is normal

F1_out = DFFEAS(B1L1, !GLOBAL(E5_out), VCC, , , , , , );


--E5_out is freq_div:freq_div_1|t_flipflop:t_flipflop_4|out at LC_X2_Y3_N2
--operation mode is normal

E5_out_lut_out = (((!E5_out)));
E5_out = DFFEAS(E5_out_lut_out, E4_out, VCC, , , , , , );


--F2_out is register7bit:register7bit_1|d_flipflop:d_flipflop_1|out at LC_X7_Y3_N0
--operation mode is normal

F2_out_lut_out = (((F1_out)));
F2_out = DFFEAS(F2_out_lut_out, !GLOBAL(E5_out), VCC, , , , , , );


--E4_out is freq_div:freq_div_1|t_flipflop:t_flipflop_3|out at LC_X3_Y4_N8
--operation mode is normal

E4_out_lut_out = (((!E4_out)));
E4_out = DFFEAS(E4_out_lut_out, E3_out, VCC, , , , , , );


--E3_out is freq_div:freq_div_1|t_flipflop:t_flipflop_2|out at LC_X3_Y4_N9
--operation mode is normal

E3_out_lut_out = (((!E3_out)));
E3_out = DFFEAS(E3_out_lut_out, E2_out, VCC, , , , , , );


--E2_out is freq_div:freq_div_1|t_flipflop:t_flipflop_1|out at LC_X2_Y4_N2
--operation mode is normal

E2_out_lut_out = (((!E2_out)));
E2_out = DFFEAS(E2_out_lut_out, E1_out, VCC, , , , , , );


--E1_out is freq_div:freq_div_1|t_flipflop:t_flipflop_0|out at LC_X2_Y4_N4
--operation mode is normal

E1_out_lut_out = (((!E1_out)));
E1_out = DFFEAS(E1_out_lut_out, cpld_clk, VCC, , , , , , );


--cpld_clk is cpld_clk at PIN_4
--operation mode is input

cpld_clk = INPUT();


