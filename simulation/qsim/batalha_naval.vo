// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 22.1std.2 Build 922 07/20/2023 SC Lite Edition"

// DATE "12/06/2023 11:16:14"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module batalha_naval (
	x_coord_code,
	y_coord_code,
	game_state_code,
	nextMap,
	confirmAttack,
	cpld_clk,
	matriz_colune_data,
	display_colune_data,
	matriz_colune_activator,
	display_colune_activator,
	ledRgb);
input 	[2:0] x_coord_code;
input 	[2:0] y_coord_code;
input 	[1:0] game_state_code;
input 	nextMap;
input 	confirmAttack;
input 	cpld_clk;
output 	[6:0] matriz_colune_data;
output 	[6:0] display_colune_data;
output 	[4:0] matriz_colune_activator;
output 	[3:0] display_colune_activator;
output 	[1:0] ledRgb;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \game_state_decoder_1|and1~combout ;
wire \game_state_decoder_1|or0~0_combout ;
wire \cpld_clk~combout ;
wire \freq_div_1|t_flipflop_0|out~regout ;
wire \freq_div_1|t_flipflop_1|out~regout ;
wire \freq_div_1|t_flipflop_2|out~regout ;
wire \matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ;
wire \matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ;
wire \matriz_displayer|andLoopResetEnable~combout ;
wire \matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ;
wire \matriz_displayer|counter3bit_1|andLoopStart_1~0_combout ;
wire \nextMap~combout ;
wire \debouncerNextMap|or0~combout ;
wire \debouncerNextMap|t_flipflop_1|out~regout ;
wire \debouncerNextMap|t_flipflop_2|out~regout ;
wire \debouncerNextMap|t_flipflop_3|out~regout ;
wire \debouncerNextMap|t_flipflop_4|out~regout ;
wire \debouncerNextMap|t_flipflop_5|out~regout ;
wire \debouncerNextMap|and0~0_combout ;
wire \debouncerNextMap|and0~combout ;
wire \counterMapCode|t_flipflop_0|out~regout ;
wire \map_decoder_1|orEnable[0]~combout ;
wire \attack_round_1|selected_map_register[0]|out~regout ;
wire \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~0_combout ;
wire \confirmAttack~combout ;
wire \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~combout ;
wire \attack_round_1|hits_map_register[0]|out~regout ;
wire \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and2~combout ;
wire \attack_round_1|hits_map_register[28]|out~regout ;
wire \matriz_displayer|mux8x1_1[0]|or1~0_combout ;
wire \matriz_displayer|mux8x1_1[0]|or1~1_combout ;
wire \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4_combout ;
wire \attack_round_1|andRed~2_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and1~combout ;
wire \attack_round_1|hits_map_register[7]|out~regout ;
wire \segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and3~combout ;
wire \attack_round_1|hits_map_register[21]|out~regout ;
wire \matriz_displayer|mux8x1_1[0]|or1~2_combout ;
wire \matriz_displayer|mux8x1_1[0]|or1~3_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~combout ;
wire \attack_round_1|hits_map_register[14]|out~regout ;
wire \attack_round_1|selected_map_register[14]|out~regout ;
wire \imageSelect_1|muxMaps[31]|or0~0_combout ;
wire \matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0_combout ;
wire \matriz_displayer|mux8x1_1[3]|or1~12_combout ;
wire \matriz_displayer|mux8x1_1[0]|or1~4_combout ;
wire \matriz_displayer|mux8x1_1[0]|or1~5_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~0_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and2~combout ;
wire \attack_round_1|hits_map_register[29]|out~regout ;
wire \matriz_displayer|mux8x1_1[1]|or1~2_combout ;
wire \matriz_displayer|mux8x1_1[1]|or1~3_combout ;
wire \attack_round_1|selected_map_register[12]|out~regout ;
wire \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~combout ;
wire \attack_round_1|hits_map_register[8]|out~regout ;
wire \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and3~combout ;
wire \attack_round_1|hits_map_register[22]|out~regout ;
wire \matriz_displayer|mux8x1_1[1]|or1~4_combout ;
wire \matriz_displayer|mux8x1_1[1]|or1~5_combout ;
wire \segment_display|mux8x1_1[2]|mux4x1_1|or1~4_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and4~combout ;
wire \attack_round_1|hits_map_register[15]|out~regout ;
wire \matriz_displayer|mux8x1_1[1]|or1~6_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~combout ;
wire \attack_round_1|hits_map_register[1]|out~regout ;
wire \matriz_displayer|mux8x1_1[1]|or1~9_combout ;
wire \matriz_displayer|mux8x1_1[1]|or1~7_combout ;
wire \matriz_displayer|mux8x1_1[1]|or1~8_combout ;
wire \matriz_displayer|mux8x1_1[2]|or1~0_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and2~combout ;
wire \attack_round_1|hits_map_register[30]|out~regout ;
wire \matriz_displayer|mux8x1_1[2]|or1~1_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and3~combout ;
wire \attack_round_1|hits_map_register[23]|out~regout ;
wire \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and1~combout ;
wire \attack_round_1|hits_map_register[9]|out~regout ;
wire \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~0_combout ;
wire \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~0_combout ;
wire \matriz_displayer|mux8x1_1[4]|or1~4_combout ;
wire \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~1_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and4~combout ;
wire \attack_round_1|hits_map_register[16]|out~regout ;
wire \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~2_combout ;
wire \matriz_displayer|mux8x1_1[3]|or1~6_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and2~combout ;
wire \attack_round_1|hits_map_register[2]|out~regout ;
wire \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~3_combout ;
wire \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~4_combout ;
wire \matriz_displayer|mux8x1_1[2]|or1~2_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and2~combout ;
wire \attack_round_1|hits_map_register[31]|out~regout ;
wire \matriz_displayer|mux8x1_1[3]|or1~13_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~combout ;
wire \attack_round_1|hits_map_register[10]|out~regout ;
wire \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and3~combout ;
wire \attack_round_1|hits_map_register[24]|out~regout ;
wire \matriz_displayer|mux8x1_1[3]|or1~7_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and2~combout ;
wire \attack_round_1|hits_map_register[3]|out~regout ;
wire \matriz_displayer|mux8x1_1[3]|or1~8_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and4~combout ;
wire \attack_round_1|hits_map_register[17]|out~regout ;
wire \matriz_displayer|mux8x1_1[3]|or1~9_combout ;
wire \matriz_displayer|mux8x1_1[3]|or1~10_combout ;
wire \matriz_displayer|mux8x1_1[3]|or1~11_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~combout ;
wire \attack_round_1|hits_map_register[4]|out~regout ;
wire \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and2~combout ;
wire \attack_round_1|hits_map_register[32]|out~regout ;
wire \matriz_displayer|mux8x1_1[4]|or1~5_combout ;
wire \matriz_displayer|mux8x1_1[4]|or1~6_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and1~combout ;
wire \attack_round_1|hits_map_register[11]|out~regout ;
wire \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and3~combout ;
wire \attack_round_1|hits_map_register[25]|out~regout ;
wire \matriz_displayer|mux8x1_1[4]|or1~7_combout ;
wire \matriz_displayer|mux8x1_1[4]|or1~10_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and4~combout ;
wire \attack_round_1|hits_map_register[18]|out~regout ;
wire \matriz_displayer|mux8x1_1[4]|or1~8_combout ;
wire \matriz_displayer|mux8x1_1[4]|or1~9_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and1~combout ;
wire \attack_round_1|hits_map_register[12]|out~regout ;
wire \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and3~combout ;
wire \attack_round_1|hits_map_register[26]|out~regout ;
wire \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~1_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and2~combout ;
wire \attack_round_1|hits_map_register[5]|out~regout ;
wire \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~2_combout ;
wire \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~3_combout ;
wire \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~4_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and4~combout ;
wire \attack_round_1|hits_map_register[19]|out~regout ;
wire \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~5_combout ;
wire \matriz_displayer|mux8x1_1[5]|or1~0_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and2~combout ;
wire \attack_round_1|hits_map_register[33]|out~regout ;
wire \matriz_displayer|mux8x1_1[5]|or1~1_combout ;
wire \matriz_displayer|mux8x1_1[5]|or1~2_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~0_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and3~combout ;
wire \attack_round_1|hits_map_register[27]|out~regout ;
wire \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~0_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and1~combout ;
wire \attack_round_1|hits_map_register[13]|out~regout ;
wire \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~1_combout ;
wire \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~2_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~combout ;
wire \attack_round_1|hits_map_register[6]|out~regout ;
wire \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and4~combout ;
wire \attack_round_1|hits_map_register[20]|out~regout ;
wire \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~3_combout ;
wire \matriz_displayer|mux8x1_1[6]|or1~0_combout ;
wire \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and2~combout ;
wire \attack_round_1|hits_map_register[34]|out~regout ;
wire \matriz_displayer|mux8x1_1[6]|or1~1_combout ;
wire \matriz_displayer|mux8x1_1[6]|or1~2_combout ;
wire \segment_display|andLoopResetEnable~combout ;
wire \segment_display|counter3bit_1|t_flipflop_0|out~regout ;
wire \segment_display|counter3bit_1|t_flipflop_1|out~regout ;
wire \segment_display|counter3bit_1|t_flipflop_2|out~regout ;
wire \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0_combout ;
wire \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~0_combout ;
wire \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~1_combout ;
wire \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~2_combout ;
wire \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~3_combout ;
wire \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~4_combout ;
wire \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~0_combout ;
wire \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~1_combout ;
wire \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~2_combout ;
wire \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~3_combout ;
wire \segment_display|mux8x1_1[2]|mux4x1_1|or1~0_combout ;
wire \segment_display|mux8x1_1[2]|mux4x1_1|or1~1_combout ;
wire \segment_display|mux8x1_1[2]|mux4x1_1|or1~3_combout ;
wire \segment_display|mux8x1_1[2]|mux4x1_1|andEnable~0_combout ;
wire \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~0_combout ;
wire \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~1_combout ;
wire \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~2_combout ;
wire \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~3_combout ;
wire \segment_display|mux8x1_1[4]|mux4x1_1|or1~0_combout ;
wire \segment_display|mux8x1_1[4]|mux4x1_1|or1~1_combout ;
wire \segment_display|mux8x1_1[4]|mux4x1_1|or1~2_combout ;
wire \segment_display|mux8x1_1[4]|mux4x1_1|or1~3_combout ;
wire \segment_display|mux8x1_1[4]|mux4x1_1|andEnable~0_combout ;
wire \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~0_combout ;
wire \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~1_combout ;
wire \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~2_combout ;
wire \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~3_combout ;
wire \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~4_combout ;
wire \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~1_combout ;
wire \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~2_combout ;
wire \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~3_combout ;
wire \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~4_combout ;
wire \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~5_combout ;
wire \matriz_displayer|register8bitSIPO_1|d_flipflop_0|out~regout ;
wire \matriz_displayer|register8bitSIPO_1|d_flipflop_1|out~regout ;
wire \matriz_displayer|register8bitSIPO_1|d_flipflop_2|out~regout ;
wire \matriz_displayer|register8bitSIPO_1|d_flipflop_3|out~regout ;
wire \matriz_displayer|register8bitSIPO_1|d_flipflop_4|out~regout ;
wire \segment_display|register8bitSIPO_1|d_flipflop_0|out~regout ;
wire \segment_display|register8bitSIPO_1|d_flipflop_1|out~regout ;
wire \segment_display|register8bitSIPO_1|d_flipflop_2|out~regout ;
wire \segment_display|register8bitSIPO_1|d_flipflop_3|out~regout ;
wire \attack_round_1|yCoordMuxSelectedMap|or1~0_combout ;
wire \attack_round_1|yCoordMuxSelectedMap|or1~1_combout ;
wire \attack_round_1|yCoordMuxSelectedMap|or1~2_combout ;
wire \attack_round_1|yCoordMuxSelectedMap|or1~3_combout ;
wire \attack_round_1|yCoordMuxSelectedMap|or1~4_combout ;
wire \attack_round_1|yCoordMuxSelectedMap|or1~5_combout ;
wire \attack_round_1|yCoordMuxSelectedMap|or1~6_combout ;
wire \attack_round_1|yCoordMuxSelectedMap|or1~7_combout ;
wire \attack_round_1|yCoordMuxSelectedMap|or1~8_combout ;
wire \attack_round_1|yCoordMuxSelectedMap|or1~9_combout ;
wire \attack_round_1|yCoordMuxSelectedMap|or1~10_combout ;
wire \attack_round_1|yCoordMuxSelectedMap|or1~11_combout ;
wire \attack_round_1|yCoordMuxSelectedMap|or1~12_combout ;
wire \attack_round_1|yCoordMuxSelectedMap|or1~13_combout ;
wire \attack_round_1|yCoordMuxSelectedMap|or1~14_combout ;
wire \attack_round_1|yCoordMuxSelectedMap|or1~15_combout ;
wire \attack_round_1|andGreen~combout ;
wire \attack_round_1|andRed~3_combout ;
wire [2:0] \y_coord_code~combout ;
wire [1:0] \game_state_code~combout ;
wire [2:0] \x_coord_code~combout ;


maxii_io \game_state_code[0]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\game_state_code~combout [0]),
	.padio(game_state_code[0]));
// synopsys translate_off
defparam \game_state_code[0]~I .operation_mode = "input";
// synopsys translate_on

maxii_io \game_state_code[1]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\game_state_code~combout [1]),
	.padio(game_state_code[1]));
// synopsys translate_off
defparam \game_state_code[1]~I .operation_mode = "input";
// synopsys translate_on

maxii_lcell \game_state_decoder_1|and1 (
// Equation(s):
// \game_state_decoder_1|and1~combout  = LCELL((\game_state_code~combout [1] & (((!\game_state_code~combout [0])))))

	.clk(gnd),
	.dataa(\game_state_code~combout [1]),
	.datab(vcc),
	.datac(vcc),
	.datad(\game_state_code~combout [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\game_state_decoder_1|and1~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \game_state_decoder_1|and1 .lut_mask = "00aa";
defparam \game_state_decoder_1|and1 .operation_mode = "normal";
defparam \game_state_decoder_1|and1 .output_mode = "comb_only";
defparam \game_state_decoder_1|and1 .register_cascade_mode = "off";
defparam \game_state_decoder_1|and1 .sum_lutc_input = "datac";
defparam \game_state_decoder_1|and1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \game_state_decoder_1|or0~0 (
// Equation(s):
// \game_state_decoder_1|or0~0_combout  = (!\game_state_code~combout [0] & (!\game_state_decoder_1|and1~combout ))

	.clk(gnd),
	.dataa(\game_state_code~combout [0]),
	.datab(\game_state_decoder_1|and1~combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\game_state_decoder_1|or0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \game_state_decoder_1|or0~0 .lut_mask = "1111";
defparam \game_state_decoder_1|or0~0 .operation_mode = "normal";
defparam \game_state_decoder_1|or0~0 .output_mode = "comb_only";
defparam \game_state_decoder_1|or0~0 .register_cascade_mode = "off";
defparam \game_state_decoder_1|or0~0 .sum_lutc_input = "datac";
defparam \game_state_decoder_1|or0~0 .synch_mode = "off";
// synopsys translate_on

maxii_io \cpld_clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\cpld_clk~combout ),
	.padio(cpld_clk));
// synopsys translate_off
defparam \cpld_clk~I .operation_mode = "input";
// synopsys translate_on

maxii_lcell \freq_div_1|t_flipflop_0|out (
// Equation(s):
// \freq_div_1|t_flipflop_0|out~regout  = DFFEAS((!\freq_div_1|t_flipflop_0|out~regout ), !\cpld_clk~combout , VCC, , , , , , )

	.clk(!\cpld_clk~combout ),
	.dataa(\freq_div_1|t_flipflop_0|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\freq_div_1|t_flipflop_0|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \freq_div_1|t_flipflop_0|out .lut_mask = "5555";
defparam \freq_div_1|t_flipflop_0|out .operation_mode = "normal";
defparam \freq_div_1|t_flipflop_0|out .output_mode = "reg_only";
defparam \freq_div_1|t_flipflop_0|out .register_cascade_mode = "off";
defparam \freq_div_1|t_flipflop_0|out .sum_lutc_input = "datac";
defparam \freq_div_1|t_flipflop_0|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \freq_div_1|t_flipflop_1|out (
// Equation(s):
// \freq_div_1|t_flipflop_1|out~regout  = DFFEAS((!\freq_div_1|t_flipflop_1|out~regout ), !\freq_div_1|t_flipflop_0|out~regout , VCC, , , , , , )

	.clk(!\freq_div_1|t_flipflop_0|out~regout ),
	.dataa(\freq_div_1|t_flipflop_1|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\freq_div_1|t_flipflop_1|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \freq_div_1|t_flipflop_1|out .lut_mask = "5555";
defparam \freq_div_1|t_flipflop_1|out .operation_mode = "normal";
defparam \freq_div_1|t_flipflop_1|out .output_mode = "reg_only";
defparam \freq_div_1|t_flipflop_1|out .register_cascade_mode = "off";
defparam \freq_div_1|t_flipflop_1|out .sum_lutc_input = "datac";
defparam \freq_div_1|t_flipflop_1|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \freq_div_1|t_flipflop_2|out (
// Equation(s):
// \freq_div_1|t_flipflop_2|out~regout  = DFFEAS((!\freq_div_1|t_flipflop_2|out~regout ), !\freq_div_1|t_flipflop_1|out~regout , VCC, , , , , , )

	.clk(!\freq_div_1|t_flipflop_1|out~regout ),
	.dataa(\freq_div_1|t_flipflop_2|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\freq_div_1|t_flipflop_2|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \freq_div_1|t_flipflop_2|out .lut_mask = "5555";
defparam \freq_div_1|t_flipflop_2|out .operation_mode = "normal";
defparam \freq_div_1|t_flipflop_2|out .output_mode = "reg_only";
defparam \freq_div_1|t_flipflop_2|out .register_cascade_mode = "off";
defparam \freq_div_1|t_flipflop_2|out .sum_lutc_input = "datac";
defparam \freq_div_1|t_flipflop_2|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|counter3bit_1|t_flipflop_1|out (
// Equation(s):
// \matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  = DFFEAS((!\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ), !\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout , !\matriz_displayer|andLoopResetEnable~combout , , , , , , )

	.clk(!\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.dataa(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\matriz_displayer|andLoopResetEnable~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|counter3bit_1|t_flipflop_1|out .lut_mask = "5555";
defparam \matriz_displayer|counter3bit_1|t_flipflop_1|out .operation_mode = "normal";
defparam \matriz_displayer|counter3bit_1|t_flipflop_1|out .output_mode = "reg_only";
defparam \matriz_displayer|counter3bit_1|t_flipflop_1|out .register_cascade_mode = "off";
defparam \matriz_displayer|counter3bit_1|t_flipflop_1|out .sum_lutc_input = "datac";
defparam \matriz_displayer|counter3bit_1|t_flipflop_1|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|counter3bit_1|t_flipflop_2|out (
// Equation(s):
// \matriz_displayer|counter3bit_1|t_flipflop_2|out~regout  = DFFEAS((!\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ), !\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout , !\matriz_displayer|andLoopResetEnable~combout , , , , , , )

	.clk(!\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.dataa(\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\matriz_displayer|andLoopResetEnable~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|counter3bit_1|t_flipflop_2|out .lut_mask = "5555";
defparam \matriz_displayer|counter3bit_1|t_flipflop_2|out .operation_mode = "normal";
defparam \matriz_displayer|counter3bit_1|t_flipflop_2|out .output_mode = "reg_only";
defparam \matriz_displayer|counter3bit_1|t_flipflop_2|out .register_cascade_mode = "off";
defparam \matriz_displayer|counter3bit_1|t_flipflop_2|out .sum_lutc_input = "datac";
defparam \matriz_displayer|counter3bit_1|t_flipflop_2|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|andLoopResetEnable (
// Equation(s):
// \matriz_displayer|andLoopResetEnable~combout  = (\game_state_decoder_1|or0~0_combout ) # ((\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout  & (\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout  & 
// !\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout )))

	.clk(gnd),
	.dataa(\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ),
	.datab(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.datac(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datad(\game_state_decoder_1|or0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|andLoopResetEnable~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|andLoopResetEnable .lut_mask = "ff08";
defparam \matriz_displayer|andLoopResetEnable .operation_mode = "normal";
defparam \matriz_displayer|andLoopResetEnable .output_mode = "comb_only";
defparam \matriz_displayer|andLoopResetEnable .register_cascade_mode = "off";
defparam \matriz_displayer|andLoopResetEnable .sum_lutc_input = "datac";
defparam \matriz_displayer|andLoopResetEnable .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|counter3bit_1|t_flipflop_0|out (
// Equation(s):
// \matriz_displayer|counter3bit_1|t_flipflop_0|out~regout  = DFFEAS((!\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ), !\freq_div_1|t_flipflop_2|out~regout , !\matriz_displayer|andLoopResetEnable~combout , , , , , , )

	.clk(!\freq_div_1|t_flipflop_2|out~regout ),
	.dataa(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\matriz_displayer|andLoopResetEnable~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|counter3bit_1|t_flipflop_0|out .lut_mask = "5555";
defparam \matriz_displayer|counter3bit_1|t_flipflop_0|out .operation_mode = "normal";
defparam \matriz_displayer|counter3bit_1|t_flipflop_0|out .output_mode = "reg_only";
defparam \matriz_displayer|counter3bit_1|t_flipflop_0|out .register_cascade_mode = "off";
defparam \matriz_displayer|counter3bit_1|t_flipflop_0|out .sum_lutc_input = "datac";
defparam \matriz_displayer|counter3bit_1|t_flipflop_0|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|counter3bit_1|andLoopStart_1~0 (
// Equation(s):
// \matriz_displayer|counter3bit_1|andLoopStart_1~0_combout  = (((!\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout  & !\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.datad(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|counter3bit_1|andLoopStart_1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|counter3bit_1|andLoopStart_1~0 .lut_mask = "000f";
defparam \matriz_displayer|counter3bit_1|andLoopStart_1~0 .operation_mode = "normal";
defparam \matriz_displayer|counter3bit_1|andLoopStart_1~0 .output_mode = "comb_only";
defparam \matriz_displayer|counter3bit_1|andLoopStart_1~0 .register_cascade_mode = "off";
defparam \matriz_displayer|counter3bit_1|andLoopStart_1~0 .sum_lutc_input = "datac";
defparam \matriz_displayer|counter3bit_1|andLoopStart_1~0 .synch_mode = "off";
// synopsys translate_on

maxii_io \nextMap~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\nextMap~combout ),
	.padio(nextMap));
// synopsys translate_off
defparam \nextMap~I .operation_mode = "input";
// synopsys translate_on

maxii_lcell \debouncerNextMap|or0 (
// Equation(s):
// \debouncerNextMap|or0~combout  = LCELL((!\debouncerNextMap|and0~combout  & (!\freq_div_1|t_flipflop_2|out~regout  & (!\nextMap~combout ))))

	.clk(gnd),
	.dataa(\debouncerNextMap|and0~combout ),
	.datab(\freq_div_1|t_flipflop_2|out~regout ),
	.datac(\nextMap~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\debouncerNextMap|or0~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \debouncerNextMap|or0 .lut_mask = "0101";
defparam \debouncerNextMap|or0 .operation_mode = "normal";
defparam \debouncerNextMap|or0 .output_mode = "comb_only";
defparam \debouncerNextMap|or0 .register_cascade_mode = "off";
defparam \debouncerNextMap|or0 .sum_lutc_input = "datac";
defparam \debouncerNextMap|or0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \debouncerNextMap|t_flipflop_1|out (
// Equation(s):
// \debouncerNextMap|t_flipflop_1|out~regout  = DFFEAS((!\debouncerNextMap|t_flipflop_1|out~regout ), \debouncerNextMap|or0~combout , !\nextMap~combout , , , , , , )

	.clk(\debouncerNextMap|or0~combout ),
	.dataa(\debouncerNextMap|t_flipflop_1|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\nextMap~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\debouncerNextMap|t_flipflop_1|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \debouncerNextMap|t_flipflop_1|out .lut_mask = "5555";
defparam \debouncerNextMap|t_flipflop_1|out .operation_mode = "normal";
defparam \debouncerNextMap|t_flipflop_1|out .output_mode = "reg_only";
defparam \debouncerNextMap|t_flipflop_1|out .register_cascade_mode = "off";
defparam \debouncerNextMap|t_flipflop_1|out .sum_lutc_input = "datac";
defparam \debouncerNextMap|t_flipflop_1|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \debouncerNextMap|t_flipflop_2|out (
// Equation(s):
// \debouncerNextMap|t_flipflop_2|out~regout  = DFFEAS((!\debouncerNextMap|t_flipflop_2|out~regout ), !\debouncerNextMap|t_flipflop_1|out~regout , !\nextMap~combout , , , , , , )

	.clk(!\debouncerNextMap|t_flipflop_1|out~regout ),
	.dataa(\debouncerNextMap|t_flipflop_2|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\nextMap~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\debouncerNextMap|t_flipflop_2|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \debouncerNextMap|t_flipflop_2|out .lut_mask = "5555";
defparam \debouncerNextMap|t_flipflop_2|out .operation_mode = "normal";
defparam \debouncerNextMap|t_flipflop_2|out .output_mode = "reg_only";
defparam \debouncerNextMap|t_flipflop_2|out .register_cascade_mode = "off";
defparam \debouncerNextMap|t_flipflop_2|out .sum_lutc_input = "datac";
defparam \debouncerNextMap|t_flipflop_2|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \debouncerNextMap|t_flipflop_3|out (
// Equation(s):
// \debouncerNextMap|t_flipflop_3|out~regout  = DFFEAS((!\debouncerNextMap|t_flipflop_3|out~regout ), !\debouncerNextMap|t_flipflop_2|out~regout , !\nextMap~combout , , , , , , )

	.clk(!\debouncerNextMap|t_flipflop_2|out~regout ),
	.dataa(\debouncerNextMap|t_flipflop_3|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\nextMap~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\debouncerNextMap|t_flipflop_3|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \debouncerNextMap|t_flipflop_3|out .lut_mask = "5555";
defparam \debouncerNextMap|t_flipflop_3|out .operation_mode = "normal";
defparam \debouncerNextMap|t_flipflop_3|out .output_mode = "reg_only";
defparam \debouncerNextMap|t_flipflop_3|out .register_cascade_mode = "off";
defparam \debouncerNextMap|t_flipflop_3|out .sum_lutc_input = "datac";
defparam \debouncerNextMap|t_flipflop_3|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \debouncerNextMap|t_flipflop_4|out (
// Equation(s):
// \debouncerNextMap|t_flipflop_4|out~regout  = DFFEAS((!\debouncerNextMap|t_flipflop_4|out~regout ), !\debouncerNextMap|t_flipflop_3|out~regout , !\nextMap~combout , , , , , , )

	.clk(!\debouncerNextMap|t_flipflop_3|out~regout ),
	.dataa(\debouncerNextMap|t_flipflop_4|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\nextMap~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\debouncerNextMap|t_flipflop_4|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \debouncerNextMap|t_flipflop_4|out .lut_mask = "5555";
defparam \debouncerNextMap|t_flipflop_4|out .operation_mode = "normal";
defparam \debouncerNextMap|t_flipflop_4|out .output_mode = "reg_only";
defparam \debouncerNextMap|t_flipflop_4|out .register_cascade_mode = "off";
defparam \debouncerNextMap|t_flipflop_4|out .sum_lutc_input = "datac";
defparam \debouncerNextMap|t_flipflop_4|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \debouncerNextMap|t_flipflop_5|out (
// Equation(s):
// \debouncerNextMap|t_flipflop_5|out~regout  = DFFEAS((!\debouncerNextMap|t_flipflop_5|out~regout ), !\debouncerNextMap|t_flipflop_4|out~regout , !\nextMap~combout , , , , , , )

	.clk(!\debouncerNextMap|t_flipflop_4|out~regout ),
	.dataa(\debouncerNextMap|t_flipflop_5|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\nextMap~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\debouncerNextMap|t_flipflop_5|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \debouncerNextMap|t_flipflop_5|out .lut_mask = "5555";
defparam \debouncerNextMap|t_flipflop_5|out .operation_mode = "normal";
defparam \debouncerNextMap|t_flipflop_5|out .output_mode = "reg_only";
defparam \debouncerNextMap|t_flipflop_5|out .register_cascade_mode = "off";
defparam \debouncerNextMap|t_flipflop_5|out .sum_lutc_input = "datac";
defparam \debouncerNextMap|t_flipflop_5|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \debouncerNextMap|and0~0 (
// Equation(s):
// \debouncerNextMap|and0~0_combout  = (\debouncerNextMap|t_flipflop_1|out~regout  & (\debouncerNextMap|t_flipflop_2|out~regout ))

	.clk(gnd),
	.dataa(\debouncerNextMap|t_flipflop_1|out~regout ),
	.datab(\debouncerNextMap|t_flipflop_2|out~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\debouncerNextMap|and0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \debouncerNextMap|and0~0 .lut_mask = "8888";
defparam \debouncerNextMap|and0~0 .operation_mode = "normal";
defparam \debouncerNextMap|and0~0 .output_mode = "comb_only";
defparam \debouncerNextMap|and0~0 .register_cascade_mode = "off";
defparam \debouncerNextMap|and0~0 .sum_lutc_input = "datac";
defparam \debouncerNextMap|and0~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \debouncerNextMap|and0 (
// Equation(s):
// \debouncerNextMap|and0~combout  = LCELL((\debouncerNextMap|t_flipflop_5|out~regout  & (\debouncerNextMap|and0~0_combout  & (\debouncerNextMap|t_flipflop_3|out~regout  & \debouncerNextMap|t_flipflop_4|out~regout ))))

	.clk(gnd),
	.dataa(\debouncerNextMap|t_flipflop_5|out~regout ),
	.datab(\debouncerNextMap|and0~0_combout ),
	.datac(\debouncerNextMap|t_flipflop_3|out~regout ),
	.datad(\debouncerNextMap|t_flipflop_4|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\debouncerNextMap|and0~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \debouncerNextMap|and0 .lut_mask = "8000";
defparam \debouncerNextMap|and0 .operation_mode = "normal";
defparam \debouncerNextMap|and0 .output_mode = "comb_only";
defparam \debouncerNextMap|and0 .register_cascade_mode = "off";
defparam \debouncerNextMap|and0 .sum_lutc_input = "datac";
defparam \debouncerNextMap|and0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \counterMapCode|t_flipflop_0|out (
// Equation(s):
// \counterMapCode|t_flipflop_0|out~regout  = DFFEAS((!\counterMapCode|t_flipflop_0|out~regout ), \debouncerNextMap|and0~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\debouncerNextMap|and0~combout ),
	.dataa(\counterMapCode|t_flipflop_0|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\counterMapCode|t_flipflop_0|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counterMapCode|t_flipflop_0|out .lut_mask = "5555";
defparam \counterMapCode|t_flipflop_0|out .operation_mode = "normal";
defparam \counterMapCode|t_flipflop_0|out .output_mode = "reg_only";
defparam \counterMapCode|t_flipflop_0|out .register_cascade_mode = "off";
defparam \counterMapCode|t_flipflop_0|out .sum_lutc_input = "datac";
defparam \counterMapCode|t_flipflop_0|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \map_decoder_1|orEnable[0] (
// Equation(s):
// \map_decoder_1|orEnable[0]~combout  = (\counterMapCode|t_flipflop_0|out~regout ) # (((!\game_state_code~combout [0] & !\game_state_decoder_1|and1~combout )))

	.clk(gnd),
	.dataa(\counterMapCode|t_flipflop_0|out~regout ),
	.datab(vcc),
	.datac(\game_state_code~combout [0]),
	.datad(\game_state_decoder_1|and1~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\map_decoder_1|orEnable[0]~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \map_decoder_1|orEnable[0] .lut_mask = "aaaf";
defparam \map_decoder_1|orEnable[0] .operation_mode = "normal";
defparam \map_decoder_1|orEnable[0] .output_mode = "comb_only";
defparam \map_decoder_1|orEnable[0] .register_cascade_mode = "off";
defparam \map_decoder_1|orEnable[0] .sum_lutc_input = "datac";
defparam \map_decoder_1|orEnable[0] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|selected_map_register[0]|out (
// Equation(s):
// \attack_round_1|selected_map_register[0]|out~regout  = DFFEAS((\map_decoder_1|orEnable[0]~combout ), \game_state_decoder_1|and1~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\game_state_decoder_1|and1~combout ),
	.dataa(\map_decoder_1|orEnable[0]~combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|selected_map_register[0]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|selected_map_register[0]|out .lut_mask = "aaaa";
defparam \attack_round_1|selected_map_register[0]|out .operation_mode = "normal";
defparam \attack_round_1|selected_map_register[0]|out .output_mode = "reg_only";
defparam \attack_round_1|selected_map_register[0]|out .register_cascade_mode = "off";
defparam \attack_round_1|selected_map_register[0]|out .sum_lutc_input = "datac";
defparam \attack_round_1|selected_map_register[0]|out .synch_mode = "off";
// synopsys translate_on

maxii_io \y_coord_code[0]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\y_coord_code~combout [0]),
	.padio(y_coord_code[0]));
// synopsys translate_off
defparam \y_coord_code[0]~I .operation_mode = "input";
// synopsys translate_on

maxii_io \x_coord_code[2]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\x_coord_code~combout [2]),
	.padio(x_coord_code[2]));
// synopsys translate_off
defparam \x_coord_code[2]~I .operation_mode = "input";
// synopsys translate_on

maxii_io \y_coord_code[1]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\y_coord_code~combout [1]),
	.padio(y_coord_code[1]));
// synopsys translate_off
defparam \y_coord_code[1]~I .operation_mode = "input";
// synopsys translate_on

maxii_io \y_coord_code[2]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\y_coord_code~combout [2]),
	.padio(y_coord_code[2]));
// synopsys translate_off
defparam \y_coord_code[2]~I .operation_mode = "input";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~0 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~0_combout  = (((!\y_coord_code~combout [1] & !\y_coord_code~combout [2])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\y_coord_code~combout [1]),
	.datad(\y_coord_code~combout [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~0 .lut_mask = "000f";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~0 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~0 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~0 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~0 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~0 .synch_mode = "off";
// synopsys translate_on

maxii_io \x_coord_code[0]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\x_coord_code~combout [0]),
	.padio(x_coord_code[0]));
// synopsys translate_off
defparam \x_coord_code[0]~I .operation_mode = "input";
// synopsys translate_on

maxii_io \x_coord_code[1]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\x_coord_code~combout [1]),
	.padio(x_coord_code[1]));
// synopsys translate_off
defparam \x_coord_code[1]~I .operation_mode = "input";
// synopsys translate_on

maxii_io \confirmAttack~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\confirmAttack~combout ),
	.padio(confirmAttack));
// synopsys translate_off
defparam \confirmAttack~I .operation_mode = "input";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout  = (\game_state_decoder_1|and1~combout  & (\x_coord_code~combout [0] & (!\x_coord_code~combout [1] & !\confirmAttack~combout )))

	.clk(gnd),
	.dataa(\game_state_decoder_1|and1~combout ),
	.datab(\x_coord_code~combout [0]),
	.datac(\x_coord_code~combout [1]),
	.datad(\confirmAttack~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1 .lut_mask = "0008";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~combout  = LCELL((\y_coord_code~combout [0] & (\x_coord_code~combout [2] & (\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~0_combout  & 
// \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [0]),
	.datab(\x_coord_code~combout [2]),
	.datac(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~0_combout ),
	.datad(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2 .lut_mask = "8000";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[0]|out (
// Equation(s):
// \attack_round_1|hits_map_register[0]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[0]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[0]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[0]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[0]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[0]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[0]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[0]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3_combout  = (\game_state_decoder_1|and1~combout  & (\x_coord_code~combout [0] & ((!\confirmAttack~combout ))))

	.clk(gnd),
	.dataa(\game_state_decoder_1|and1~combout ),
	.datab(\x_coord_code~combout [0]),
	.datac(vcc),
	.datad(\confirmAttack~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3 .lut_mask = "0088";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout  = (\y_coord_code~combout [0] & (\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3_combout  & ((!\x_coord_code~combout [2]))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [0]),
	.datab(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3_combout ),
	.datac(vcc),
	.datad(\x_coord_code~combout [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2 .lut_mask = "0088";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and2 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and2~combout  = LCELL((!\y_coord_code~combout [1] & (!\y_coord_code~combout [2] & (\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout  & !\x_coord_code~combout [1]))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [1]),
	.datab(\y_coord_code~combout [2]),
	.datac(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout ),
	.datad(\x_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and2~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and2 .lut_mask = "0010";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and2 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and2 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and2 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and2 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[28]|out (
// Equation(s):
// \attack_round_1|hits_map_register[28]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and2~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and2~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[28]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[28]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[28]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[28]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[28]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[28]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[28]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[0]|or1~0 (
// Equation(s):
// \matriz_displayer|mux8x1_1[0]|or1~0_combout  = (\attack_round_1|selected_map_register[0]|out~regout ) # ((\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout  & ((!\attack_round_1|hits_map_register[28]|out~regout ))) # 
// (!\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout  & (!\attack_round_1|hits_map_register[0]|out~regout )))

	.clk(gnd),
	.dataa(\attack_round_1|selected_map_register[0]|out~regout ),
	.datab(\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ),
	.datac(\attack_round_1|hits_map_register[0]|out~regout ),
	.datad(\attack_round_1|hits_map_register[28]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[0]|or1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[0]|or1~0 .lut_mask = "abef";
defparam \matriz_displayer|mux8x1_1[0]|or1~0 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[0]|or1~0 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[0]|or1~0 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[0]|or1~0 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[0]|or1~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[0]|or1~1 (
// Equation(s):
// \matriz_displayer|mux8x1_1[0]|or1~1_combout  = (\matriz_displayer|counter3bit_1|andLoopStart_1~0_combout  & ((\game_state_decoder_1|and1~combout  & (\matriz_displayer|mux8x1_1[0]|or1~0_combout )) # (!\game_state_decoder_1|and1~combout  & 
// ((\map_decoder_1|orEnable[0]~combout )))))

	.clk(gnd),
	.dataa(\matriz_displayer|counter3bit_1|andLoopStart_1~0_combout ),
	.datab(\matriz_displayer|mux8x1_1[0]|or1~0_combout ),
	.datac(\map_decoder_1|orEnable[0]~combout ),
	.datad(\game_state_decoder_1|and1~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[0]|or1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[0]|or1~1 .lut_mask = "88a0";
defparam \matriz_displayer|mux8x1_1[0]|or1~1 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[0]|or1~1 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[0]|or1~1 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[0]|or1~1 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[0]|or1~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4 (
// Equation(s):
// \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4_combout  = (\x_coord_code~combout [2] & (((!\x_coord_code~combout [0] & !\x_coord_code~combout [1]))))

	.clk(gnd),
	.dataa(\x_coord_code~combout [2]),
	.datab(vcc),
	.datac(\x_coord_code~combout [0]),
	.datad(\x_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4 .lut_mask = "000a";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|andRed~2 (
// Equation(s):
// \attack_round_1|andRed~2_combout  = (\game_state_decoder_1|and1~combout  & (((!\confirmAttack~combout ))))

	.clk(gnd),
	.dataa(\game_state_decoder_1|and1~combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\confirmAttack~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|andRed~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|andRed~2 .lut_mask = "00aa";
defparam \attack_round_1|andRed~2 .operation_mode = "normal";
defparam \attack_round_1|andRed~2 .output_mode = "comb_only";
defparam \attack_round_1|andRed~2 .register_cascade_mode = "off";
defparam \attack_round_1|andRed~2 .sum_lutc_input = "datac";
defparam \attack_round_1|andRed~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and1 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and1~combout  = LCELL((\y_coord_code~combout [0] & (\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4_combout  & (\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~0_combout  & 
// \attack_round_1|andRed~2_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [0]),
	.datab(\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4_combout ),
	.datac(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~0_combout ),
	.datad(\attack_round_1|andRed~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and1~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and1 .lut_mask = "8000";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and1 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and1 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and1 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and1 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[7]|out (
// Equation(s):
// \attack_round_1|hits_map_register[7]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and1~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and1~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[7]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[7]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[7]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[7]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[7]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[7]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[7]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[2]|mux4x1_1|or1~2 (
// Equation(s):
// \segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout  = (\x_coord_code~combout [1] & (((!\x_coord_code~combout [0] & !\x_coord_code~combout [2]))))

	.clk(gnd),
	.dataa(\x_coord_code~combout [1]),
	.datab(vcc),
	.datac(\x_coord_code~combout [0]),
	.datad(\x_coord_code~combout [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~2 .lut_mask = "000a";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~2 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~2 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~2 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~2 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and3 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and3~combout  = LCELL((\y_coord_code~combout [0] & (\segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout  & (\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~0_combout  & 
// \attack_round_1|andRed~2_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [0]),
	.datab(\segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout ),
	.datac(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~0_combout ),
	.datad(\attack_round_1|andRed~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and3~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and3 .lut_mask = "8000";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and3 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and3 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and3 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and3 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[21]|out (
// Equation(s):
// \attack_round_1|hits_map_register[21]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and3~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and3~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[21]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[21]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[21]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[21]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[21]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[21]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[21]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[0]|or1~2 (
// Equation(s):
// \matriz_displayer|mux8x1_1[0]|or1~2_combout  = (\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout  & ((\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & ((!\attack_round_1|hits_map_register[21]|out~regout ))) # 
// (!\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & (!\attack_round_1|hits_map_register[7]|out~regout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.datab(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datac(\attack_round_1|hits_map_register[7]|out~regout ),
	.datad(\attack_round_1|hits_map_register[21]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[0]|or1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[0]|or1~2 .lut_mask = "028a";
defparam \matriz_displayer|mux8x1_1[0]|or1~2 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[0]|or1~2 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[0]|or1~2 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[0]|or1~2 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[0]|or1~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[0]|or1~3 (
// Equation(s):
// \matriz_displayer|mux8x1_1[0]|or1~3_combout  = (\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & (((!\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[0]|or1~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[0]|or1~3 .lut_mask = "00aa";
defparam \matriz_displayer|mux8x1_1[0]|or1~3 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[0]|or1~3 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[0]|or1~3 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[0]|or1~3 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[0]|or1~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~combout  = LCELL((!\y_coord_code~combout [1] & (!\y_coord_code~combout [2] & (\x_coord_code~combout [1] & \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [1]),
	.datab(\y_coord_code~combout [2]),
	.datac(\x_coord_code~combout [1]),
	.datad(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4 .lut_mask = "1000";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[14]|out (
// Equation(s):
// \attack_round_1|hits_map_register[14]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[14]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[14]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[14]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[14]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[14]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[14]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[14]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|selected_map_register[14]|out (
// Equation(s):
// \attack_round_1|selected_map_register[14]|out~regout  = DFFEAS(VCC, \game_state_decoder_1|and1~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\game_state_decoder_1|and1~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|selected_map_register[14]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|selected_map_register[14]|out .lut_mask = "ffff";
defparam \attack_round_1|selected_map_register[14]|out .operation_mode = "normal";
defparam \attack_round_1|selected_map_register[14]|out .output_mode = "reg_only";
defparam \attack_round_1|selected_map_register[14]|out .register_cascade_mode = "off";
defparam \attack_round_1|selected_map_register[14]|out .sum_lutc_input = "datac";
defparam \attack_round_1|selected_map_register[14]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \imageSelect_1|muxMaps[31]|or0~0 (
// Equation(s):
// \imageSelect_1|muxMaps[31]|or0~0_combout  = (\game_state_decoder_1|and1~combout  & (((!\attack_round_1|selected_map_register[14]|out~regout ))))

	.clk(gnd),
	.dataa(\game_state_decoder_1|and1~combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\attack_round_1|selected_map_register[14]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\imageSelect_1|muxMaps[31]|or0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \imageSelect_1|muxMaps[31]|or0~0 .lut_mask = "00aa";
defparam \imageSelect_1|muxMaps[31]|or0~0 .operation_mode = "normal";
defparam \imageSelect_1|muxMaps[31]|or0~0 .output_mode = "comb_only";
defparam \imageSelect_1|muxMaps[31]|or0~0 .register_cascade_mode = "off";
defparam \imageSelect_1|muxMaps[31]|or0~0 .sum_lutc_input = "datac";
defparam \imageSelect_1|muxMaps[31]|or0~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0 (
// Equation(s):
// \matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0_combout  = ((!\game_state_decoder_1|and1~combout  & ((\counterMapCode|t_flipflop_0|out~regout ) # (!\game_state_code~combout [0]))))

	.clk(gnd),
	.dataa(\counterMapCode|t_flipflop_0|out~regout ),
	.datab(vcc),
	.datac(\game_state_code~combout [0]),
	.datad(\game_state_decoder_1|and1~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0 .lut_mask = "00af";
defparam \matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[3]|or1~12 (
// Equation(s):
// \matriz_displayer|mux8x1_1[3]|or1~12_combout  = (!\matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0_combout  & ((\imageSelect_1|muxMaps[31]|or0~0_combout ) # ((!\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout  & 
// !\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.datab(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datac(\imageSelect_1|muxMaps[31]|or0~0_combout ),
	.datad(\matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[3]|or1~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[3]|or1~12 .lut_mask = "00f1";
defparam \matriz_displayer|mux8x1_1[3]|or1~12 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[3]|or1~12 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[3]|or1~12 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[3]|or1~12 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[3]|or1~12 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[0]|or1~4 (
// Equation(s):
// \matriz_displayer|mux8x1_1[0]|or1~4_combout  = (\matriz_displayer|mux8x1_1[0]|or1~2_combout ) # (((\matriz_displayer|mux8x1_1[0]|or1~3_combout  & !\attack_round_1|hits_map_register[14]|out~regout )) # (!\matriz_displayer|mux8x1_1[3]|or1~12_combout ))

	.clk(gnd),
	.dataa(\matriz_displayer|mux8x1_1[0]|or1~2_combout ),
	.datab(\matriz_displayer|mux8x1_1[0]|or1~3_combout ),
	.datac(\attack_round_1|hits_map_register[14]|out~regout ),
	.datad(\matriz_displayer|mux8x1_1[3]|or1~12_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[0]|or1~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[0]|or1~4 .lut_mask = "aeff";
defparam \matriz_displayer|mux8x1_1[0]|or1~4 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[0]|or1~4 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[0]|or1~4 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[0]|or1~4 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[0]|or1~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[0]|or1~5 (
// Equation(s):
// \matriz_displayer|mux8x1_1[0]|or1~5_combout  = (!\game_state_decoder_1|or0~0_combout  & ((\matriz_displayer|mux8x1_1[0]|or1~1_combout ) # ((\matriz_displayer|mux8x1_1[0]|or1~4_combout  & !\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ))))

	.clk(gnd),
	.dataa(\game_state_decoder_1|or0~0_combout ),
	.datab(\matriz_displayer|mux8x1_1[0]|or1~1_combout ),
	.datac(\matriz_displayer|mux8x1_1[0]|or1~4_combout ),
	.datad(\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[0]|or1~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[0]|or1~5 .lut_mask = "4454";
defparam \matriz_displayer|mux8x1_1[0]|or1~5 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[0]|or1~5 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[0]|or1~5 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[0]|or1~5 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[0]|or1~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~0 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~0_combout  = (\y_coord_code~combout [1] & (\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3_combout  & ((!\x_coord_code~combout [1]))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [1]),
	.datab(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3_combout ),
	.datac(vcc),
	.datad(\x_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~0 .lut_mask = "0088";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~0 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~0 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~0 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~0 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and2 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and2~combout  = LCELL((\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~0_combout  & (!\y_coord_code~combout [0] & (!\y_coord_code~combout [2] & !\x_coord_code~combout [2]))))

	.clk(gnd),
	.dataa(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~0_combout ),
	.datab(\y_coord_code~combout [0]),
	.datac(\y_coord_code~combout [2]),
	.datad(\x_coord_code~combout [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and2~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and2 .lut_mask = "0002";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and2 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and2 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and2 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and2 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[29]|out (
// Equation(s):
// \attack_round_1|hits_map_register[29]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and2~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and2~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[29]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[29]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[29]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[29]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[29]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[29]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[29]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[1]|or1~2 (
// Equation(s):
// \matriz_displayer|mux8x1_1[1]|or1~2_combout  = (\game_state_decoder_1|and1~combout  & ((\attack_round_1|selected_map_register[0]|out~regout ) # ((\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout  & !\attack_round_1|hits_map_register[29]|out~regout 
// ))))

	.clk(gnd),
	.dataa(\game_state_decoder_1|and1~combout ),
	.datab(\attack_round_1|selected_map_register[0]|out~regout ),
	.datac(\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ),
	.datad(\attack_round_1|hits_map_register[29]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[1]|or1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[1]|or1~2 .lut_mask = "88a8";
defparam \matriz_displayer|mux8x1_1[1]|or1~2 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[1]|or1~2 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[1]|or1~2 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[1]|or1~2 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[1]|or1~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[1]|or1~3 (
// Equation(s):
// \matriz_displayer|mux8x1_1[1]|or1~3_combout  = (!\game_state_decoder_1|or0~0_combout  & (\matriz_displayer|counter3bit_1|andLoopStart_1~0_combout  & ((\matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0_combout ) # (\matriz_displayer|mux8x1_1[1]|or1~2_combout 
// ))))

	.clk(gnd),
	.dataa(\game_state_decoder_1|or0~0_combout ),
	.datab(\matriz_displayer|counter3bit_1|andLoopStart_1~0_combout ),
	.datac(\matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0_combout ),
	.datad(\matriz_displayer|mux8x1_1[1]|or1~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[1]|or1~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[1]|or1~3 .lut_mask = "4440";
defparam \matriz_displayer|mux8x1_1[1]|or1~3 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[1]|or1~3 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[1]|or1~3 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[1]|or1~3 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[1]|or1~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|selected_map_register[12]|out (
// Equation(s):
// \attack_round_1|selected_map_register[12]|out~regout  = DFFEAS((((!\game_state_code~combout [0] & !\game_state_decoder_1|and1~combout )) # (!\counterMapCode|t_flipflop_0|out~regout )), \game_state_decoder_1|and1~combout , 
// !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\game_state_decoder_1|and1~combout ),
	.dataa(vcc),
	.datab(\game_state_code~combout [0]),
	.datac(\game_state_decoder_1|and1~combout ),
	.datad(\counterMapCode|t_flipflop_0|out~regout ),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|selected_map_register[12]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|selected_map_register[12]|out .lut_mask = "03ff";
defparam \attack_round_1|selected_map_register[12]|out .operation_mode = "normal";
defparam \attack_round_1|selected_map_register[12]|out .output_mode = "reg_only";
defparam \attack_round_1|selected_map_register[12]|out .register_cascade_mode = "off";
defparam \attack_round_1|selected_map_register[12]|out .sum_lutc_input = "datac";
defparam \attack_round_1|selected_map_register[12]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0_combout  = (\y_coord_code~combout [1] & (((!\y_coord_code~combout [2]))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [1]),
	.datab(vcc),
	.datac(vcc),
	.datad(\y_coord_code~combout [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0 .lut_mask = "00aa";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~combout  = LCELL((\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0_combout  & (\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4_combout  & (\attack_round_1|andRed~2_combout  & 
// !\y_coord_code~combout [0]))))

	.clk(gnd),
	.dataa(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0_combout ),
	.datab(\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4_combout ),
	.datac(\attack_round_1|andRed~2_combout ),
	.datad(\y_coord_code~combout [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1 .lut_mask = "0080";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[8]|out (
// Equation(s):
// \attack_round_1|hits_map_register[8]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[8]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[8]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[8]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[8]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[8]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[8]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[8]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and3 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and3~combout  = LCELL((\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0_combout  & (\segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout  & (\attack_round_1|andRed~2_combout  & !\y_coord_code~combout 
// [0]))))

	.clk(gnd),
	.dataa(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0_combout ),
	.datab(\segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout ),
	.datac(\attack_round_1|andRed~2_combout ),
	.datad(\y_coord_code~combout [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and3~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and3 .lut_mask = "0080";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and3 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and3 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and3 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and3 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[22]|out (
// Equation(s):
// \attack_round_1|hits_map_register[22]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and3~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and3~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[22]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[22]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[22]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[22]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[22]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[22]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[22]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[1]|or1~4 (
// Equation(s):
// \matriz_displayer|mux8x1_1[1]|or1~4_combout  = (\attack_round_1|selected_map_register[12]|out~regout ) # ((\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & ((!\attack_round_1|hits_map_register[22]|out~regout ))) # 
// (!\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & (!\attack_round_1|hits_map_register[8]|out~regout )))

	.clk(gnd),
	.dataa(\attack_round_1|selected_map_register[12]|out~regout ),
	.datab(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datac(\attack_round_1|hits_map_register[8]|out~regout ),
	.datad(\attack_round_1|hits_map_register[22]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[1]|or1~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[1]|or1~4 .lut_mask = "abef";
defparam \matriz_displayer|mux8x1_1[1]|or1~4 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[1]|or1~4 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[1]|or1~4 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[1]|or1~4 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[1]|or1~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[1]|or1~5 (
// Equation(s):
// \matriz_displayer|mux8x1_1[1]|or1~5_combout  = (\game_state_decoder_1|and1~combout  & (\matriz_displayer|mux8x1_1[1]|or1~4_combout )) # (!\game_state_decoder_1|and1~combout  & (((!\counterMapCode|t_flipflop_0|out~regout ) # (!\game_state_code~combout 
// [0]))))

	.clk(gnd),
	.dataa(\matriz_displayer|mux8x1_1[1]|or1~4_combout ),
	.datab(\game_state_decoder_1|and1~combout ),
	.datac(\game_state_code~combout [0]),
	.datad(\counterMapCode|t_flipflop_0|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[1]|or1~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[1]|or1~5 .lut_mask = "8bbb";
defparam \matriz_displayer|mux8x1_1[1]|or1~5 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[1]|or1~5 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[1]|or1~5 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[1]|or1~5 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[1]|or1~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[2]|mux4x1_1|or1~4 (
// Equation(s):
// \segment_display|mux8x1_1[2]|mux4x1_1|or1~4_combout  = (\x_coord_code~combout [1] & (((!\x_coord_code~combout [2]))))

	.clk(gnd),
	.dataa(\x_coord_code~combout [1]),
	.datab(vcc),
	.datac(vcc),
	.datad(\x_coord_code~combout [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[2]|mux4x1_1|or1~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~4 .lut_mask = "00aa";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~4 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~4 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~4 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~4 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and4 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and4~combout  = LCELL((\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0_combout  & (\segment_display|mux8x1_1[2]|mux4x1_1|or1~4_combout  & 
// (\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3_combout  & !\y_coord_code~combout [0]))))

	.clk(gnd),
	.dataa(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0_combout ),
	.datab(\segment_display|mux8x1_1[2]|mux4x1_1|or1~4_combout ),
	.datac(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3_combout ),
	.datad(\y_coord_code~combout [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and4~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and4 .lut_mask = "0080";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and4 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and4 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and4 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and4 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[15]|out (
// Equation(s):
// \attack_round_1|hits_map_register[15]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and4~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_1|and4~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[15]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[15]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[15]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[15]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[15]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[15]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[15]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[1]|or1~6 (
// Equation(s):
// \matriz_displayer|mux8x1_1[1]|or1~6_combout  = (\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & ((\attack_round_1|selected_map_register[14]|out~regout ) # ((!\attack_round_1|hits_map_register[15]|out~regout ) # 
// (!\game_state_decoder_1|and1~combout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datab(\attack_round_1|selected_map_register[14]|out~regout ),
	.datac(\game_state_decoder_1|and1~combout ),
	.datad(\attack_round_1|hits_map_register[15]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[1]|or1~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[1]|or1~6 .lut_mask = "8aaa";
defparam \matriz_displayer|mux8x1_1[1]|or1~6 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[1]|or1~6 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[1]|or1~6 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[1]|or1~6 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[1]|or1~6 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~combout  = LCELL((\x_coord_code~combout [2] & (\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~0_combout  & (!\y_coord_code~combout [0] & !\y_coord_code~combout [2]))))

	.clk(gnd),
	.dataa(\x_coord_code~combout [2]),
	.datab(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~0_combout ),
	.datac(\y_coord_code~combout [0]),
	.datad(\y_coord_code~combout [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2 .lut_mask = "0008";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[1]|out (
// Equation(s):
// \attack_round_1|hits_map_register[1]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and2~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[1]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[1]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[1]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[1]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[1]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[1]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[1]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[1]|or1~9 (
// Equation(s):
// \matriz_displayer|mux8x1_1[1]|or1~9_combout  = (\matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0_combout ) # ((\game_state_decoder_1|and1~combout  & (!\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & !\attack_round_1|hits_map_register[1]|out~regout 
// )))

	.clk(gnd),
	.dataa(\game_state_decoder_1|and1~combout ),
	.datab(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datac(\matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0_combout ),
	.datad(\attack_round_1|hits_map_register[1]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[1]|or1~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[1]|or1~9 .lut_mask = "f0f2";
defparam \matriz_displayer|mux8x1_1[1]|or1~9 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[1]|or1~9 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[1]|or1~9 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[1]|or1~9 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[1]|or1~9 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[1]|or1~7 (
// Equation(s):
// \matriz_displayer|mux8x1_1[1]|or1~7_combout  = (\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout  & (\matriz_displayer|mux8x1_1[1]|or1~5_combout )) # (!\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout  & 
// (((\matriz_displayer|mux8x1_1[1]|or1~6_combout ) # (\matriz_displayer|mux8x1_1[1]|or1~9_combout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|mux8x1_1[1]|or1~5_combout ),
	.datab(\matriz_displayer|mux8x1_1[1]|or1~6_combout ),
	.datac(\matriz_displayer|mux8x1_1[1]|or1~9_combout ),
	.datad(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[1]|or1~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[1]|or1~7 .lut_mask = "aafc";
defparam \matriz_displayer|mux8x1_1[1]|or1~7 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[1]|or1~7 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[1]|or1~7 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[1]|or1~7 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[1]|or1~7 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[1]|or1~8 (
// Equation(s):
// \matriz_displayer|mux8x1_1[1]|or1~8_combout  = (\matriz_displayer|mux8x1_1[1]|or1~3_combout ) # ((!\game_state_decoder_1|or0~0_combout  & (\matriz_displayer|mux8x1_1[1]|or1~7_combout  & !\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout )))

	.clk(gnd),
	.dataa(\matriz_displayer|mux8x1_1[1]|or1~3_combout ),
	.datab(\game_state_decoder_1|or0~0_combout ),
	.datac(\matriz_displayer|mux8x1_1[1]|or1~7_combout ),
	.datad(\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[1]|or1~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[1]|or1~8 .lut_mask = "aaba";
defparam \matriz_displayer|mux8x1_1[1]|or1~8 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[1]|or1~8 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[1]|or1~8 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[1]|or1~8 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[1]|or1~8 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[2]|or1~0 (
// Equation(s):
// \matriz_displayer|mux8x1_1[2]|or1~0_combout  = (\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout  & (((!\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout  & !\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ),
	.datab(vcc),
	.datac(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.datad(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[2]|or1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[2]|or1~0 .lut_mask = "000a";
defparam \matriz_displayer|mux8x1_1[2]|or1~0 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[2]|or1~0 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[2]|or1~0 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[2]|or1~0 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[2]|or1~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and2 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and2~combout  = LCELL((\y_coord_code~combout [1] & (!\y_coord_code~combout [2] & (\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout  & !\x_coord_code~combout [1]))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [1]),
	.datab(\y_coord_code~combout [2]),
	.datac(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout ),
	.datad(\x_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and2~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and2 .lut_mask = "0020";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and2 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and2 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and2 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and2 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[30]|out (
// Equation(s):
// \attack_round_1|hits_map_register[30]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and2~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and2~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[30]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[30]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[30]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[30]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[30]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[30]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[30]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[2]|or1~1 (
// Equation(s):
// \matriz_displayer|mux8x1_1[2]|or1~1_combout  = (!\game_state_decoder_1|or0~0_combout  & (\matriz_displayer|mux8x1_1[2]|or1~0_combout  & ((!\attack_round_1|hits_map_register[30]|out~regout ) # (!\imageSelect_1|muxMaps[31]|or0~0_combout ))))

	.clk(gnd),
	.dataa(\game_state_decoder_1|or0~0_combout ),
	.datab(\matriz_displayer|mux8x1_1[2]|or1~0_combout ),
	.datac(\imageSelect_1|muxMaps[31]|or0~0_combout ),
	.datad(\attack_round_1|hits_map_register[30]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[2]|or1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[2]|or1~1 .lut_mask = "0444";
defparam \matriz_displayer|mux8x1_1[2]|or1~1 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[2]|or1~1 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[2]|or1~1 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[2]|or1~1 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[2]|or1~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and3 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and3~combout  = LCELL((\y_coord_code~combout [0] & (\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0_combout  & (\segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout  & 
// \attack_round_1|andRed~2_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [0]),
	.datab(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0_combout ),
	.datac(\segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout ),
	.datad(\attack_round_1|andRed~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and3~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and3 .lut_mask = "8000";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and3 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and3 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and3 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and3 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[23]|out (
// Equation(s):
// \attack_round_1|hits_map_register[23]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and3~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and3~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[23]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[23]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[23]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[23]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[23]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[23]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[23]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and1 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and1~combout  = LCELL((\y_coord_code~combout [0] & (\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0_combout  & (\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4_combout  & 
// \attack_round_1|andRed~2_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [0]),
	.datab(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0_combout ),
	.datac(\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4_combout ),
	.datad(\attack_round_1|andRed~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and1~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and1 .lut_mask = "8000";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and1 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and1 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and1 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and1 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[9]|out (
// Equation(s):
// \attack_round_1|hits_map_register[9]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and1~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and1~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[9]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[9]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[9]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[9]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[9]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[9]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[9]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~0 (
// Equation(s):
// \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~0_combout  = (\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & ((\attack_round_1|selected_map_register[12]|out~regout ) # ((!\attack_round_1|hits_map_register[23]|out~regout )))) # 
// (!\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & (((!\attack_round_1|hits_map_register[9]|out~regout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datab(\attack_round_1|selected_map_register[12]|out~regout ),
	.datac(\attack_round_1|hits_map_register[23]|out~regout ),
	.datad(\attack_round_1|hits_map_register[9]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~0 .lut_mask = "8adf";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~0 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~0 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~0 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~0 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~0 (
// Equation(s):
// \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~0_combout  = (\game_state_decoder_1|and1~combout  & (\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ))

	.clk(gnd),
	.dataa(\game_state_decoder_1|and1~combout ),
	.datab(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~0 .lut_mask = "8888";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~0 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~0 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~0 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~0 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[4]|or1~4 (
// Equation(s):
// \matriz_displayer|mux8x1_1[4]|or1~4_combout  = ((!\game_state_decoder_1|and1~combout  & ((!\counterMapCode|t_flipflop_0|out~regout ) # (!\game_state_code~combout [0]))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\game_state_code~combout [0]),
	.datac(\counterMapCode|t_flipflop_0|out~regout ),
	.datad(\game_state_decoder_1|and1~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[4]|or1~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[4]|or1~4 .lut_mask = "003f";
defparam \matriz_displayer|mux8x1_1[4]|or1~4 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[4]|or1~4 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[4]|or1~4 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[4]|or1~4 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[4]|or1~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~1 (
// Equation(s):
// \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~1_combout  = (\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & ((\matriz_displayer|mux8x1_1[4]|or1~4_combout ) # ((\matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~0_combout  & 
// \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~0_combout )))) # (!\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & (\matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~0_combout  & (\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~0_combout )))

	.clk(gnd),
	.dataa(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datab(\matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~0_combout ),
	.datac(\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~0_combout ),
	.datad(\matriz_displayer|mux8x1_1[4]|or1~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~1 .lut_mask = "eac0";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~1 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~1 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~1 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~1 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and4 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and4~combout  = LCELL((\y_coord_code~combout [1] & (!\y_coord_code~combout [2] & (\x_coord_code~combout [1] & \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [1]),
	.datab(\y_coord_code~combout [2]),
	.datac(\x_coord_code~combout [1]),
	.datad(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and4~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and4 .lut_mask = "2000";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and4 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and4 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and4 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and4 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[16]|out (
// Equation(s):
// \attack_round_1|hits_map_register[16]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and4~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_1|and4~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[16]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[16]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[16]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[16]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[16]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[16]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[16]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~2 (
// Equation(s):
// \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~2_combout  = (\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & ((\attack_round_1|selected_map_register[14]|out~regout ) # ((!\attack_round_1|hits_map_register[16]|out~regout ) # 
// (!\game_state_decoder_1|and1~combout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datab(\attack_round_1|selected_map_register[14]|out~regout ),
	.datac(\game_state_decoder_1|and1~combout ),
	.datad(\attack_round_1|hits_map_register[16]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~2 .lut_mask = "8aaa";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~2 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~2 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~2 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~2 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[3]|or1~6 (
// Equation(s):
// \matriz_displayer|mux8x1_1[3]|or1~6_combout  = (\game_state_decoder_1|and1~combout  & (((!\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ))))

	.clk(gnd),
	.dataa(\game_state_decoder_1|and1~combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[3]|or1~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[3]|or1~6 .lut_mask = "00aa";
defparam \matriz_displayer|mux8x1_1[3]|or1~6 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[3]|or1~6 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[3]|or1~6 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[3]|or1~6 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[3]|or1~6 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and2 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and2~combout  = LCELL((\y_coord_code~combout [0] & (\x_coord_code~combout [2] & (\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0_combout  & 
// \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [0]),
	.datab(\x_coord_code~combout [2]),
	.datac(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0_combout ),
	.datad(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and2~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and2 .lut_mask = "8000";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and2 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and2 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and2 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and2 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[2]|out (
// Equation(s):
// \attack_round_1|hits_map_register[2]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and2~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[2]|demux1x4_2|and2~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[2]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[2]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[2]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[2]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[2]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[2]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[2]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~3 (
// Equation(s):
// \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~3_combout  = (\matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0_combout ) # ((\matriz_displayer|mux8x1_1[3]|or1~6_combout  & ((\attack_round_1|selected_map_register[0]|out~regout ) # 
// (!\attack_round_1|hits_map_register[2]|out~regout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0_combout ),
	.datab(\matriz_displayer|mux8x1_1[3]|or1~6_combout ),
	.datac(\attack_round_1|selected_map_register[0]|out~regout ),
	.datad(\attack_round_1|hits_map_register[2]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~3 .lut_mask = "eaee";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~3 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~3 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~3 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~3 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~4 (
// Equation(s):
// \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~4_combout  = (\matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~1_combout ) # ((!\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout  & ((\matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~2_combout ) # 
// (\matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~3_combout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~1_combout ),
	.datab(\matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~2_combout ),
	.datac(\matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~3_combout ),
	.datad(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~4 .lut_mask = "aafe";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~4 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~4 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~4 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~4 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[2]|or1~2 (
// Equation(s):
// \matriz_displayer|mux8x1_1[2]|or1~2_combout  = (\matriz_displayer|mux8x1_1[2]|or1~1_combout ) # ((!\game_state_decoder_1|or0~0_combout  & (\matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~4_combout  & !\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout )))

	.clk(gnd),
	.dataa(\matriz_displayer|mux8x1_1[2]|or1~1_combout ),
	.datab(\game_state_decoder_1|or0~0_combout ),
	.datac(\matriz_displayer|mux8x1_1[2]|mux4x1_1|or1~4_combout ),
	.datad(\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[2]|or1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[2]|or1~2 .lut_mask = "aaba";
defparam \matriz_displayer|mux8x1_1[2]|or1~2 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[2]|or1~2 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[2]|or1~2 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[2]|or1~2 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[2]|or1~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0_combout  = (\y_coord_code~combout [2] & (((!\y_coord_code~combout [1]))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(\y_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0 .lut_mask = "00aa";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and2 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and2~combout  = LCELL((\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0_combout  & (\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout  & (!\y_coord_code~combout [0] & 
// !\x_coord_code~combout [2]))))

	.clk(gnd),
	.dataa(\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0_combout ),
	.datab(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout ),
	.datac(\y_coord_code~combout [0]),
	.datad(\x_coord_code~combout [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and2~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and2 .lut_mask = "0008";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and2 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and2 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and2 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and2 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[31]|out (
// Equation(s):
// \attack_round_1|hits_map_register[31]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and2~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and2~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[31]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[31]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[31]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[31]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[31]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[31]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[31]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[3]|or1~13 (
// Equation(s):
// \matriz_displayer|mux8x1_1[3]|or1~13_combout  = (\matriz_displayer|mux8x1_1[2]|or1~0_combout  & (((\attack_round_1|selected_map_register[14]|out~regout ) # (!\attack_round_1|hits_map_register[31]|out~regout )) # (!\game_state_decoder_1|and1~combout )))

	.clk(gnd),
	.dataa(\game_state_decoder_1|and1~combout ),
	.datab(\attack_round_1|selected_map_register[14]|out~regout ),
	.datac(\matriz_displayer|mux8x1_1[2]|or1~0_combout ),
	.datad(\attack_round_1|hits_map_register[31]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[3]|or1~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[3]|or1~13 .lut_mask = "d0f0";
defparam \matriz_displayer|mux8x1_1[3]|or1~13 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[3]|or1~13 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[3]|or1~13 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[3]|or1~13 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[3]|or1~13 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout  = (\y_coord_code~combout [2] & (((!\y_coord_code~combout [0]))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(\y_coord_code~combout [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0 .lut_mask = "00aa";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~combout  = LCELL((\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout  & (\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4_combout  & (\attack_round_1|andRed~2_combout  & 
// !\y_coord_code~combout [1]))))

	.clk(gnd),
	.dataa(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout ),
	.datab(\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4_combout ),
	.datac(\attack_round_1|andRed~2_combout ),
	.datad(\y_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1 .lut_mask = "0080";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[10]|out (
// Equation(s):
// \attack_round_1|hits_map_register[10]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[10]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[10]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[10]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[10]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[10]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[10]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[10]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and3 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and3~combout  = LCELL((\segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout  & (\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout  & (\attack_round_1|andRed~2_combout  & !\y_coord_code~combout 
// [1]))))

	.clk(gnd),
	.dataa(\segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout ),
	.datab(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout ),
	.datac(\attack_round_1|andRed~2_combout ),
	.datad(\y_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and3~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and3 .lut_mask = "0080";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and3 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and3 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and3 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and3 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[24]|out (
// Equation(s):
// \attack_round_1|hits_map_register[24]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and3~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and3~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[24]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[24]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[24]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[24]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[24]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[24]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[24]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[3]|or1~7 (
// Equation(s):
// \matriz_displayer|mux8x1_1[3]|or1~7_combout  = (\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout  & ((\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & ((!\attack_round_1|hits_map_register[24]|out~regout ))) # 
// (!\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & (!\attack_round_1|hits_map_register[10]|out~regout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.datab(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datac(\attack_round_1|hits_map_register[10]|out~regout ),
	.datad(\attack_round_1|hits_map_register[24]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[3]|or1~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[3]|or1~7 .lut_mask = "028a";
defparam \matriz_displayer|mux8x1_1[3]|or1~7 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[3]|or1~7 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[3]|or1~7 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[3]|or1~7 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[3]|or1~7 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and2 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and2~combout  = LCELL((\x_coord_code~combout [2] & (\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0_combout  & (\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout  & 
// !\y_coord_code~combout [0]))))

	.clk(gnd),
	.dataa(\x_coord_code~combout [2]),
	.datab(\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0_combout ),
	.datac(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout ),
	.datad(\y_coord_code~combout [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and2~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and2 .lut_mask = "0080";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and2 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and2 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and2 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and2 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[3]|out (
// Equation(s):
// \attack_round_1|hits_map_register[3]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and2~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and2~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[3]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[3]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[3]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[3]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[3]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[3]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[3]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[3]|or1~8 (
// Equation(s):
// \matriz_displayer|mux8x1_1[3]|or1~8_combout  = (\attack_round_1|selected_map_register[0]|out~regout ) # (((!\attack_round_1|hits_map_register[3]|out~regout )))

	.clk(gnd),
	.dataa(\attack_round_1|selected_map_register[0]|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\attack_round_1|hits_map_register[3]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[3]|or1~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[3]|or1~8 .lut_mask = "aaff";
defparam \matriz_displayer|mux8x1_1[3]|or1~8 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[3]|or1~8 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[3]|or1~8 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[3]|or1~8 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[3]|or1~8 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and4 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and4~combout  = LCELL((\segment_display|mux8x1_1[2]|mux4x1_1|or1~4_combout  & (\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout  & 
// (\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3_combout  & !\y_coord_code~combout [1]))))

	.clk(gnd),
	.dataa(\segment_display|mux8x1_1[2]|mux4x1_1|or1~4_combout ),
	.datab(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout ),
	.datac(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3_combout ),
	.datad(\y_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and4~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and4 .lut_mask = "0080";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and4 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and4 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and4 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and4 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[17]|out (
// Equation(s):
// \attack_round_1|hits_map_register[17]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and4~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_1|and4~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[17]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[17]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[17]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[17]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[17]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[17]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[17]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[3]|or1~9 (
// Equation(s):
// \matriz_displayer|mux8x1_1[3]|or1~9_combout  = (\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & (((!\attack_round_1|hits_map_register[17]|out~regout )))) # (!\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & 
// (\game_state_decoder_1|and1~combout  & (\matriz_displayer|mux8x1_1[3]|or1~8_combout )))

	.clk(gnd),
	.dataa(\game_state_decoder_1|and1~combout ),
	.datab(\matriz_displayer|mux8x1_1[3]|or1~8_combout ),
	.datac(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datad(\attack_round_1|hits_map_register[17]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[3]|or1~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[3]|or1~9 .lut_mask = "08f8";
defparam \matriz_displayer|mux8x1_1[3]|or1~9 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[3]|or1~9 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[3]|or1~9 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[3]|or1~9 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[3]|or1~9 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[3]|or1~10 (
// Equation(s):
// \matriz_displayer|mux8x1_1[3]|or1~10_combout  = (\matriz_displayer|mux8x1_1[3]|or1~7_combout ) # (((\matriz_displayer|mux8x1_1[3]|or1~9_combout  & !\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout )) # (!\matriz_displayer|mux8x1_1[3]|or1~12_combout 
// ))

	.clk(gnd),
	.dataa(\matriz_displayer|mux8x1_1[3]|or1~7_combout ),
	.datab(\matriz_displayer|mux8x1_1[3]|or1~9_combout ),
	.datac(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.datad(\matriz_displayer|mux8x1_1[3]|or1~12_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[3]|or1~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[3]|or1~10 .lut_mask = "aeff";
defparam \matriz_displayer|mux8x1_1[3]|or1~10 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[3]|or1~10 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[3]|or1~10 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[3]|or1~10 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[3]|or1~10 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[3]|or1~11 (
// Equation(s):
// \matriz_displayer|mux8x1_1[3]|or1~11_combout  = (!\game_state_decoder_1|or0~0_combout  & ((\matriz_displayer|mux8x1_1[3]|or1~13_combout ) # ((\matriz_displayer|mux8x1_1[3]|or1~10_combout  & !\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ))))

	.clk(gnd),
	.dataa(\game_state_decoder_1|or0~0_combout ),
	.datab(\matriz_displayer|mux8x1_1[3]|or1~13_combout ),
	.datac(\matriz_displayer|mux8x1_1[3]|or1~10_combout ),
	.datad(\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[3]|or1~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[3]|or1~11 .lut_mask = "4454";
defparam \matriz_displayer|mux8x1_1[3]|or1~11 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[3]|or1~11 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[3]|or1~11 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[3]|or1~11 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[3]|or1~11 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~combout  = LCELL((\y_coord_code~combout [0] & (\x_coord_code~combout [2] & (\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0_combout  & 
// \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [0]),
	.datab(\x_coord_code~combout [2]),
	.datac(\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0_combout ),
	.datad(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2 .lut_mask = "8000";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[4]|out (
// Equation(s):
// \attack_round_1|hits_map_register[4]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[4]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[4]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[4]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[4]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[4]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[4]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[4]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and2 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and2~combout  = LCELL((\y_coord_code~combout [2] & (!\y_coord_code~combout [1] & (\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout  & !\x_coord_code~combout [1]))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [2]),
	.datab(\y_coord_code~combout [1]),
	.datac(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout ),
	.datad(\x_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and2~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and2 .lut_mask = "0020";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and2 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and2 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and2 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and2 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[32]|out (
// Equation(s):
// \attack_round_1|hits_map_register[32]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and2~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and2~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[32]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[32]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[32]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[32]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[32]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[32]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[32]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[4]|or1~5 (
// Equation(s):
// \matriz_displayer|mux8x1_1[4]|or1~5_combout  = (\attack_round_1|selected_map_register[12]|out~regout ) # ((\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout  & ((!\attack_round_1|hits_map_register[32]|out~regout ))) # 
// (!\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout  & (!\attack_round_1|hits_map_register[4]|out~regout )))

	.clk(gnd),
	.dataa(\attack_round_1|selected_map_register[12]|out~regout ),
	.datab(\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ),
	.datac(\attack_round_1|hits_map_register[4]|out~regout ),
	.datad(\attack_round_1|hits_map_register[32]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[4]|or1~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[4]|or1~5 .lut_mask = "abef";
defparam \matriz_displayer|mux8x1_1[4]|or1~5 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[4]|or1~5 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[4]|or1~5 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[4]|or1~5 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[4]|or1~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[4]|or1~6 (
// Equation(s):
// \matriz_displayer|mux8x1_1[4]|or1~6_combout  = (\matriz_displayer|counter3bit_1|andLoopStart_1~0_combout  & ((\matriz_displayer|mux8x1_1[4]|or1~4_combout ) # ((\game_state_decoder_1|and1~combout  & \matriz_displayer|mux8x1_1[4]|or1~5_combout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|counter3bit_1|andLoopStart_1~0_combout ),
	.datab(\matriz_displayer|mux8x1_1[4]|or1~4_combout ),
	.datac(\game_state_decoder_1|and1~combout ),
	.datad(\matriz_displayer|mux8x1_1[4]|or1~5_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[4]|or1~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[4]|or1~6 .lut_mask = "a888";
defparam \matriz_displayer|mux8x1_1[4]|or1~6 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[4]|or1~6 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[4]|or1~6 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[4]|or1~6 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[4]|or1~6 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and1 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and1~combout  = LCELL((\y_coord_code~combout [0] & (\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4_combout  & (\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0_combout  & 
// \attack_round_1|andRed~2_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [0]),
	.datab(\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4_combout ),
	.datac(\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0_combout ),
	.datad(\attack_round_1|andRed~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and1~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and1 .lut_mask = "8000";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and1 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and1 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and1 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and1 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[11]|out (
// Equation(s):
// \attack_round_1|hits_map_register[11]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and1~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and1~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[11]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[11]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[11]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[11]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[11]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[11]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[11]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and3 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and3~combout  = LCELL((\y_coord_code~combout [0] & (\segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout  & (\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0_combout  & 
// \attack_round_1|andRed~2_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [0]),
	.datab(\segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout ),
	.datac(\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0_combout ),
	.datad(\attack_round_1|andRed~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and3~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and3 .lut_mask = "8000";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and3 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and3 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and3 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and3 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[25]|out (
// Equation(s):
// \attack_round_1|hits_map_register[25]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and3~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and3~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[25]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[25]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[25]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[25]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[25]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[25]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[25]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[4]|or1~7 (
// Equation(s):
// \matriz_displayer|mux8x1_1[4]|or1~7_combout  = (\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout  & ((\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & ((!\attack_round_1|hits_map_register[25]|out~regout ))) # 
// (!\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & (!\attack_round_1|hits_map_register[11]|out~regout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.datab(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datac(\attack_round_1|hits_map_register[11]|out~regout ),
	.datad(\attack_round_1|hits_map_register[25]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[4]|or1~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[4]|or1~7 .lut_mask = "028a";
defparam \matriz_displayer|mux8x1_1[4]|or1~7 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[4]|or1~7 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[4]|or1~7 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[4]|or1~7 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[4]|or1~7 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[4]|or1~10 (
// Equation(s):
// \matriz_displayer|mux8x1_1[4]|or1~10_combout  = (\matriz_displayer|mux8x1_1[4]|or1~7_combout ) # ((!\imageSelect_1|muxMaps[31]|or0~0_combout  & ((\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ) # 
// (\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.datab(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datac(\matriz_displayer|mux8x1_1[4]|or1~7_combout ),
	.datad(\imageSelect_1|muxMaps[31]|or0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[4]|or1~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[4]|or1~10 .lut_mask = "f0fe";
defparam \matriz_displayer|mux8x1_1[4]|or1~10 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[4]|or1~10 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[4]|or1~10 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[4]|or1~10 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[4]|or1~10 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and4 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and4~combout  = LCELL((\y_coord_code~combout [2] & (!\y_coord_code~combout [1] & (\x_coord_code~combout [1] & \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [2]),
	.datab(\y_coord_code~combout [1]),
	.datac(\x_coord_code~combout [1]),
	.datad(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and4~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and4 .lut_mask = "2000";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and4 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and4 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and4 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and4 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[18]|out (
// Equation(s):
// \attack_round_1|hits_map_register[18]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and4~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_1|and4~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[18]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[18]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[18]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[18]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[18]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[18]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[18]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[4]|or1~8 (
// Equation(s):
// \matriz_displayer|mux8x1_1[4]|or1~8_combout  = (\matriz_displayer|mux8x1_1[4]|or1~4_combout ) # ((\matriz_displayer|mux8x1_1[4]|or1~10_combout ) # ((\matriz_displayer|mux8x1_1[0]|or1~3_combout  & !\attack_round_1|hits_map_register[18]|out~regout )))

	.clk(gnd),
	.dataa(\matriz_displayer|mux8x1_1[4]|or1~4_combout ),
	.datab(\matriz_displayer|mux8x1_1[4]|or1~10_combout ),
	.datac(\matriz_displayer|mux8x1_1[0]|or1~3_combout ),
	.datad(\attack_round_1|hits_map_register[18]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[4]|or1~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[4]|or1~8 .lut_mask = "eefe";
defparam \matriz_displayer|mux8x1_1[4]|or1~8 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[4]|or1~8 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[4]|or1~8 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[4]|or1~8 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[4]|or1~8 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[4]|or1~9 (
// Equation(s):
// \matriz_displayer|mux8x1_1[4]|or1~9_combout  = (!\game_state_decoder_1|or0~0_combout  & ((\matriz_displayer|mux8x1_1[4]|or1~6_combout ) # ((\matriz_displayer|mux8x1_1[4]|or1~8_combout  & !\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ))))

	.clk(gnd),
	.dataa(\game_state_decoder_1|or0~0_combout ),
	.datab(\matriz_displayer|mux8x1_1[4]|or1~6_combout ),
	.datac(\matriz_displayer|mux8x1_1[4]|or1~8_combout ),
	.datad(\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[4]|or1~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[4]|or1~9 .lut_mask = "4454";
defparam \matriz_displayer|mux8x1_1[4]|or1~9 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[4]|or1~9 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[4]|or1~9 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[4]|or1~9 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[4]|or1~9 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and1 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and1~combout  = LCELL((\y_coord_code~combout [1] & (\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout  & (\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4_combout  & 
// \attack_round_1|andRed~2_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [1]),
	.datab(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout ),
	.datac(\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4_combout ),
	.datad(\attack_round_1|andRed~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and1~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and1 .lut_mask = "8000";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and1 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and1 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and1 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and1 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[12]|out (
// Equation(s):
// \attack_round_1|hits_map_register[12]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and1~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and1~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[12]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[12]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[12]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[12]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[12]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[12]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[12]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and3 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and3~combout  = LCELL((\y_coord_code~combout [1] & (\segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout  & (\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout  & 
// \attack_round_1|andRed~2_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [1]),
	.datab(\segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout ),
	.datac(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout ),
	.datad(\attack_round_1|andRed~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and3~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and3 .lut_mask = "8000";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and3 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and3 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and3 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and3 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[26]|out (
// Equation(s):
// \attack_round_1|hits_map_register[26]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and3~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and3~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[26]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[26]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[26]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[26]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[26]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[26]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[26]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~1 (
// Equation(s):
// \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~1_combout  = (\attack_round_1|selected_map_register[12]|out~regout ) # ((\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & ((!\attack_round_1|hits_map_register[26]|out~regout ))) # 
// (!\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & (!\attack_round_1|hits_map_register[12]|out~regout )))

	.clk(gnd),
	.dataa(\attack_round_1|selected_map_register[12]|out~regout ),
	.datab(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datac(\attack_round_1|hits_map_register[12]|out~regout ),
	.datad(\attack_round_1|hits_map_register[26]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~1 .lut_mask = "abef";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~1 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~1 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~1 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~1 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and2 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and2~combout  = LCELL((\y_coord_code~combout [1] & (\x_coord_code~combout [2] & (\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout  & 
// \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [1]),
	.datab(\x_coord_code~combout [2]),
	.datac(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout ),
	.datad(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and2~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and2 .lut_mask = "8000";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and2 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and2 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and2 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and2 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[5]|out (
// Equation(s):
// \attack_round_1|hits_map_register[5]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and2~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_2|and2~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[5]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[5]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[5]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[5]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[5]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[5]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[5]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~2 (
// Equation(s):
// \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~2_combout  = (\attack_round_1|selected_map_register[14]|out~regout ) # (((!\attack_round_1|hits_map_register[5]|out~regout ) # (!\game_state_decoder_1|and1~combout )))

	.clk(gnd),
	.dataa(\attack_round_1|selected_map_register[14]|out~regout ),
	.datab(vcc),
	.datac(\game_state_decoder_1|and1~combout ),
	.datad(\attack_round_1|hits_map_register[5]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~2 .lut_mask = "afff";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~2 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~2 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~2 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~2 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~3 (
// Equation(s):
// \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~3_combout  = (\matriz_displayer|counter3bit_1|andLoopStart_1~0_combout  & ((\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~2_combout ) # ((\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~0_combout  & 
// \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~1_combout )))) # (!\matriz_displayer|counter3bit_1|andLoopStart_1~0_combout  & (\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~0_combout  & (\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~1_combout )))

	.clk(gnd),
	.dataa(\matriz_displayer|counter3bit_1|andLoopStart_1~0_combout ),
	.datab(\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~0_combout ),
	.datac(\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~1_combout ),
	.datad(\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~3 .lut_mask = "eac0";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~3 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~3 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~3 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~3 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~4 (
// Equation(s):
// \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~4_combout  = (\game_state_decoder_1|and1~combout  & (\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ))

	.clk(gnd),
	.dataa(\game_state_decoder_1|and1~combout ),
	.datab(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~4 .lut_mask = "8888";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~4 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~4 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~4 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~4 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and4 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and4~combout  = LCELL((\y_coord_code~combout [1] & (\segment_display|mux8x1_1[2]|mux4x1_1|or1~4_combout  & (\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout  & 
// \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [1]),
	.datab(\segment_display|mux8x1_1[2]|mux4x1_1|or1~4_combout ),
	.datac(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout ),
	.datad(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and4~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and4 .lut_mask = "8000";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and4 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and4 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and4 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and4 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[19]|out (
// Equation(s):
// \attack_round_1|hits_map_register[19]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and4~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and4~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[19]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[19]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[19]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[19]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[19]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[19]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[19]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~5 (
// Equation(s):
// \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~5_combout  = (\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~4_combout  & ((\attack_round_1|selected_map_register[12]|out~regout ) # ((!\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout  & 
// !\attack_round_1|hits_map_register[19]|out~regout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~4_combout ),
	.datab(\attack_round_1|selected_map_register[12]|out~regout ),
	.datac(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.datad(\attack_round_1|hits_map_register[19]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~5 .lut_mask = "888a";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~5 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~5 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~5 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~5 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[5]|or1~0 (
// Equation(s):
// \matriz_displayer|mux8x1_1[5]|or1~0_combout  = (!\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout  & ((\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~3_combout ) # ((\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~5_combout ) # 
// (\matriz_displayer|mux8x1_1[4]|or1~4_combout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~3_combout ),
	.datab(\matriz_displayer|mux8x1_1[5]|mux4x1_1|or1~5_combout ),
	.datac(\matriz_displayer|mux8x1_1[4]|or1~4_combout ),
	.datad(\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[5]|or1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[5]|or1~0 .lut_mask = "00fe";
defparam \matriz_displayer|mux8x1_1[5]|or1~0 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[5]|or1~0 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[5]|or1~0 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[5]|or1~0 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[5]|or1~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and2 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and2~combout  = LCELL((\y_coord_code~combout [1] & (\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout  & (\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout  & 
// !\x_coord_code~combout [2]))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [1]),
	.datab(\attack_round_1|xCoordDemuxHitsMap[3]|demux1x4_2|and1~0_combout ),
	.datac(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout ),
	.datad(\x_coord_code~combout [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and2~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and2 .lut_mask = "0080";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and2 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and2 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and2 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and2 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[33]|out (
// Equation(s):
// \attack_round_1|hits_map_register[33]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and2~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[5]|demux1x4_1|and2~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[33]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[33]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[33]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[33]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[33]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[33]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[33]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[5]|or1~1 (
// Equation(s):
// \matriz_displayer|mux8x1_1[5]|or1~1_combout  = (\game_state_decoder_1|and1~combout  & ((\attack_round_1|selected_map_register[0]|out~regout ) # ((!\attack_round_1|hits_map_register[33]|out~regout )))) # (!\game_state_decoder_1|and1~combout  & 
// (((\map_decoder_1|orEnable[0]~combout ))))

	.clk(gnd),
	.dataa(\attack_round_1|selected_map_register[0]|out~regout ),
	.datab(\map_decoder_1|orEnable[0]~combout ),
	.datac(\game_state_decoder_1|and1~combout ),
	.datad(\attack_round_1|hits_map_register[33]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[5]|or1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[5]|or1~1 .lut_mask = "acfc";
defparam \matriz_displayer|mux8x1_1[5]|or1~1 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[5]|or1~1 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[5]|or1~1 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[5]|or1~1 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[5]|or1~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[5]|or1~2 (
// Equation(s):
// \matriz_displayer|mux8x1_1[5]|or1~2_combout  = (!\game_state_decoder_1|or0~0_combout  & ((\matriz_displayer|mux8x1_1[5]|or1~0_combout ) # ((\matriz_displayer|mux8x1_1[2]|or1~0_combout  & \matriz_displayer|mux8x1_1[5]|or1~1_combout ))))

	.clk(gnd),
	.dataa(\game_state_decoder_1|or0~0_combout ),
	.datab(\matriz_displayer|mux8x1_1[5]|or1~0_combout ),
	.datac(\matriz_displayer|mux8x1_1[2]|or1~0_combout ),
	.datad(\matriz_displayer|mux8x1_1[5]|or1~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[5]|or1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[5]|or1~2 .lut_mask = "5444";
defparam \matriz_displayer|mux8x1_1[5]|or1~2 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[5]|or1~2 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[5]|or1~2 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[5]|or1~2 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[5]|or1~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~0 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~0_combout  = (\y_coord_code~combout [1] & (\y_coord_code~combout [2]))

	.clk(gnd),
	.dataa(\y_coord_code~combout [1]),
	.datab(\y_coord_code~combout [2]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~0 .lut_mask = "8888";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~0 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~0 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~0 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~0 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and3 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and3~combout  = LCELL((\y_coord_code~combout [0] & (\segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout  & (\attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~0_combout  & 
// \attack_round_1|andRed~2_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [0]),
	.datab(\segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout ),
	.datac(\attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~0_combout ),
	.datad(\attack_round_1|andRed~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and3~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and3 .lut_mask = "8000";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and3 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and3 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and3 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and3 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[27]|out (
// Equation(s):
// \attack_round_1|hits_map_register[27]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and3~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and3~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[27]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[27]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[27]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[27]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[27]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[27]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[27]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~0 (
// Equation(s):
// \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~0_combout  = (\attack_round_1|selected_map_register[0]|out~regout ) # (((!\attack_round_1|hits_map_register[27]|out~regout )))

	.clk(gnd),
	.dataa(\attack_round_1|selected_map_register[0]|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\attack_round_1|hits_map_register[27]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~0 .lut_mask = "aaff";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~0 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~0 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~0 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~0 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and1 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and1~combout  = LCELL((\y_coord_code~combout [0] & (\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4_combout  & (\attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~0_combout  & 
// \attack_round_1|andRed~2_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [0]),
	.datab(\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~4_combout ),
	.datac(\attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~0_combout ),
	.datad(\attack_round_1|andRed~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and1~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and1 .lut_mask = "8000";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and1 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and1 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and1 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and1 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[13]|out (
// Equation(s):
// \attack_round_1|hits_map_register[13]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and1~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and1~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[13]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[13]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[13]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[13]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[13]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[13]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[13]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~1 (
// Equation(s):
// \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~1_combout  = (\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & (\game_state_decoder_1|and1~combout  & (\matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~0_combout ))) # 
// (!\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & (((!\attack_round_1|hits_map_register[13]|out~regout ))))

	.clk(gnd),
	.dataa(\game_state_decoder_1|and1~combout ),
	.datab(\matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~0_combout ),
	.datac(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datad(\attack_round_1|hits_map_register[13]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~1 .lut_mask = "808f";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~1 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~1 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~1 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~1 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~2 (
// Equation(s):
// \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~2_combout  = (\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout  & ((\matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~1_combout ) # ((!\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & 
// !\imageSelect_1|muxMaps[31]|or0~0_combout )))) # (!\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout  & (((!\imageSelect_1|muxMaps[31]|or0~0_combout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~1_combout ),
	.datab(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.datac(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datad(\imageSelect_1|muxMaps[31]|or0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~2 .lut_mask = "88bf";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~2 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~2 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~2 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~2 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~combout  = LCELL((\y_coord_code~combout [0] & (\x_coord_code~combout [2] & (\attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~0_combout  & 
// \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [0]),
	.datab(\x_coord_code~combout [2]),
	.datac(\attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~0_combout ),
	.datad(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_2|and2~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2 .lut_mask = "8000";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[6]|out (
// Equation(s):
// \attack_round_1|hits_map_register[6]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_2|and2~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[6]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[6]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[6]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[6]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[6]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[6]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[6]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and4 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and4~combout  = LCELL((\y_coord_code~combout [1] & (\y_coord_code~combout [2] & (\x_coord_code~combout [1] & \attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [1]),
	.datab(\y_coord_code~combout [2]),
	.datac(\x_coord_code~combout [1]),
	.datad(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and4~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and4 .lut_mask = "8000";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and4 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and4 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and4 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and4 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[20]|out (
// Equation(s):
// \attack_round_1|hits_map_register[20]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and4~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and4~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[20]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[20]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[20]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[20]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[20]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[20]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[20]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~3 (
// Equation(s):
// \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~3_combout  = (!\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout  & ((\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & ((!\attack_round_1|hits_map_register[20]|out~regout ))) # 
// (!\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout  & (!\attack_round_1|hits_map_register[6]|out~regout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.datab(\attack_round_1|hits_map_register[6]|out~regout ),
	.datac(\attack_round_1|hits_map_register[20]|out~regout ),
	.datad(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~3 .lut_mask = "001b";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~3 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~3 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~3 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~3 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[6]|or1~0 (
// Equation(s):
// \matriz_displayer|mux8x1_1[6]|or1~0_combout  = (!\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout  & ((\matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0_combout ) # ((\matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~2_combout ) # 
// (\matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~3_combout ))))

	.clk(gnd),
	.dataa(\matriz_displayer|mux8x1_1[0]|mux4x1_1|or1~0_combout ),
	.datab(\matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~2_combout ),
	.datac(\matriz_displayer|mux8x1_1[6]|mux4x1_1|or1~3_combout ),
	.datad(\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[6]|or1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[6]|or1~0 .lut_mask = "00fe";
defparam \matriz_displayer|mux8x1_1[6]|or1~0 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[6]|or1~0 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[6]|or1~0 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[6]|or1~0 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[6]|or1~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and2 (
// Equation(s):
// \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and2~combout  = LCELL((\y_coord_code~combout [1] & (\y_coord_code~combout [2] & (\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout  & !\x_coord_code~combout [1]))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [1]),
	.datab(\y_coord_code~combout [2]),
	.datac(\attack_round_1|xCoordDemuxHitsMap[0]|demux1x4_1|and4~2_combout ),
	.datad(\x_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and2~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and2 .lut_mask = "0080";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and2 .operation_mode = "normal";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and2 .output_mode = "comb_only";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and2 .register_cascade_mode = "off";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and2 .sum_lutc_input = "datac";
defparam \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|hits_map_register[34]|out (
// Equation(s):
// \attack_round_1|hits_map_register[34]|out~regout  = DFFEAS(VCC, \attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and2~combout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\attack_round_1|xCoordDemuxHitsMap[6]|demux1x4_1|and2~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\attack_round_1|hits_map_register[34]|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|hits_map_register[34]|out .lut_mask = "ffff";
defparam \attack_round_1|hits_map_register[34]|out .operation_mode = "normal";
defparam \attack_round_1|hits_map_register[34]|out .output_mode = "reg_only";
defparam \attack_round_1|hits_map_register[34]|out .register_cascade_mode = "off";
defparam \attack_round_1|hits_map_register[34]|out .sum_lutc_input = "datac";
defparam \attack_round_1|hits_map_register[34]|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[6]|or1~1 (
// Equation(s):
// \matriz_displayer|mux8x1_1[6]|or1~1_combout  = (\game_state_decoder_1|and1~combout  & ((\attack_round_1|selected_map_register[0]|out~regout ) # ((!\attack_round_1|hits_map_register[34]|out~regout )))) # (!\game_state_decoder_1|and1~combout  & 
// (((\map_decoder_1|orEnable[0]~combout ))))

	.clk(gnd),
	.dataa(\attack_round_1|selected_map_register[0]|out~regout ),
	.datab(\map_decoder_1|orEnable[0]~combout ),
	.datac(\game_state_decoder_1|and1~combout ),
	.datad(\attack_round_1|hits_map_register[34]|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[6]|or1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[6]|or1~1 .lut_mask = "acfc";
defparam \matriz_displayer|mux8x1_1[6]|or1~1 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[6]|or1~1 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[6]|or1~1 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[6]|or1~1 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[6]|or1~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|mux8x1_1[6]|or1~2 (
// Equation(s):
// \matriz_displayer|mux8x1_1[6]|or1~2_combout  = (!\game_state_decoder_1|or0~0_combout  & ((\matriz_displayer|mux8x1_1[6]|or1~0_combout ) # ((\matriz_displayer|mux8x1_1[2]|or1~0_combout  & \matriz_displayer|mux8x1_1[6]|or1~1_combout ))))

	.clk(gnd),
	.dataa(\game_state_decoder_1|or0~0_combout ),
	.datab(\matriz_displayer|mux8x1_1[6]|or1~0_combout ),
	.datac(\matriz_displayer|mux8x1_1[2]|or1~0_combout ),
	.datad(\matriz_displayer|mux8x1_1[6]|or1~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\matriz_displayer|mux8x1_1[6]|or1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|mux8x1_1[6]|or1~2 .lut_mask = "5444";
defparam \matriz_displayer|mux8x1_1[6]|or1~2 .operation_mode = "normal";
defparam \matriz_displayer|mux8x1_1[6]|or1~2 .output_mode = "comb_only";
defparam \matriz_displayer|mux8x1_1[6]|or1~2 .register_cascade_mode = "off";
defparam \matriz_displayer|mux8x1_1[6]|or1~2 .sum_lutc_input = "datac";
defparam \matriz_displayer|mux8x1_1[6]|or1~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|andLoopResetEnable (
// Equation(s):
// \segment_display|andLoopResetEnable~combout  = (\game_state_decoder_1|or0~0_combout ) # ((\segment_display|counter3bit_1|t_flipflop_2|out~regout  & (\segment_display|counter3bit_1|t_flipflop_0|out~regout  & 
// !\segment_display|counter3bit_1|t_flipflop_1|out~regout )))

	.clk(gnd),
	.dataa(\segment_display|counter3bit_1|t_flipflop_2|out~regout ),
	.datab(\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.datac(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.datad(\game_state_decoder_1|or0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|andLoopResetEnable~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|andLoopResetEnable .lut_mask = "ff08";
defparam \segment_display|andLoopResetEnable .operation_mode = "normal";
defparam \segment_display|andLoopResetEnable .output_mode = "comb_only";
defparam \segment_display|andLoopResetEnable .register_cascade_mode = "off";
defparam \segment_display|andLoopResetEnable .sum_lutc_input = "datac";
defparam \segment_display|andLoopResetEnable .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|counter3bit_1|t_flipflop_0|out (
// Equation(s):
// \segment_display|counter3bit_1|t_flipflop_0|out~regout  = DFFEAS((!\segment_display|counter3bit_1|t_flipflop_0|out~regout ), !\freq_div_1|t_flipflop_2|out~regout , !\segment_display|andLoopResetEnable~combout , , , , , , )

	.clk(!\freq_div_1|t_flipflop_2|out~regout ),
	.dataa(\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\segment_display|andLoopResetEnable~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|counter3bit_1|t_flipflop_0|out .lut_mask = "5555";
defparam \segment_display|counter3bit_1|t_flipflop_0|out .operation_mode = "normal";
defparam \segment_display|counter3bit_1|t_flipflop_0|out .output_mode = "reg_only";
defparam \segment_display|counter3bit_1|t_flipflop_0|out .register_cascade_mode = "off";
defparam \segment_display|counter3bit_1|t_flipflop_0|out .sum_lutc_input = "datac";
defparam \segment_display|counter3bit_1|t_flipflop_0|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|counter3bit_1|t_flipflop_1|out (
// Equation(s):
// \segment_display|counter3bit_1|t_flipflop_1|out~regout  = DFFEAS((!\segment_display|counter3bit_1|t_flipflop_1|out~regout ), !\segment_display|counter3bit_1|t_flipflop_0|out~regout , !\segment_display|andLoopResetEnable~combout , , , , , , )

	.clk(!\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.dataa(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\segment_display|andLoopResetEnable~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|counter3bit_1|t_flipflop_1|out .lut_mask = "5555";
defparam \segment_display|counter3bit_1|t_flipflop_1|out .operation_mode = "normal";
defparam \segment_display|counter3bit_1|t_flipflop_1|out .output_mode = "reg_only";
defparam \segment_display|counter3bit_1|t_flipflop_1|out .register_cascade_mode = "off";
defparam \segment_display|counter3bit_1|t_flipflop_1|out .sum_lutc_input = "datac";
defparam \segment_display|counter3bit_1|t_flipflop_1|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|counter3bit_1|t_flipflop_2|out (
// Equation(s):
// \segment_display|counter3bit_1|t_flipflop_2|out~regout  = DFFEAS((!\segment_display|counter3bit_1|t_flipflop_2|out~regout ), !\segment_display|counter3bit_1|t_flipflop_1|out~regout , !\segment_display|andLoopResetEnable~combout , , , , , , )

	.clk(!\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.dataa(\segment_display|counter3bit_1|t_flipflop_2|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\segment_display|andLoopResetEnable~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\segment_display|counter3bit_1|t_flipflop_2|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|counter3bit_1|t_flipflop_2|out .lut_mask = "5555";
defparam \segment_display|counter3bit_1|t_flipflop_2|out .operation_mode = "normal";
defparam \segment_display|counter3bit_1|t_flipflop_2|out .output_mode = "reg_only";
defparam \segment_display|counter3bit_1|t_flipflop_2|out .register_cascade_mode = "off";
defparam \segment_display|counter3bit_1|t_flipflop_2|out .sum_lutc_input = "datac";
defparam \segment_display|counter3bit_1|t_flipflop_2|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0 (
// Equation(s):
// \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0_combout  = ((!\segment_display|counter3bit_1|t_flipflop_2|out~regout  & ((\game_state_code~combout [0]) # (\game_state_decoder_1|and1~combout ))))

	.clk(gnd),
	.dataa(\game_state_code~combout [0]),
	.datab(\game_state_decoder_1|and1~combout ),
	.datac(vcc),
	.datad(\segment_display|counter3bit_1|t_flipflop_2|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0 .lut_mask = "00ee";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~0 (
// Equation(s):
// \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~0_combout  = (\game_state_code~combout [0] & (\segment_display|counter3bit_1|t_flipflop_1|out~regout  & ((!\game_state_code~combout [1]))))

	.clk(gnd),
	.dataa(\game_state_code~combout [0]),
	.datab(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.datac(vcc),
	.datad(\game_state_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[0]|mux4x1_1|andEnable~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~0 .lut_mask = "0088";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~0 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~0 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~0 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~0 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~1 (
// Equation(s):
// \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~1_combout  = (\segment_display|counter3bit_1|t_flipflop_0|out~regout  & (!\x_coord_code~combout [1] & (\x_coord_code~combout [0] $ (\x_coord_code~combout [2]))))

	.clk(gnd),
	.dataa(\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.datab(\x_coord_code~combout [0]),
	.datac(\x_coord_code~combout [2]),
	.datad(\x_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[0]|mux4x1_1|andEnable~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~1 .lut_mask = "0028";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~1 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~1 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~1 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~1 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~2 (
// Equation(s):
// \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~2_combout  = (\segment_display|mux8x1_1[0]|mux4x1_1|andEnable~0_combout ) # ((!\segment_display|counter3bit_1|t_flipflop_1|out~regout  & ((\segment_display|mux8x1_1[0]|mux4x1_1|andEnable~1_combout ) # 
// (!\game_state_decoder_1|and1~combout ))))

	.clk(gnd),
	.dataa(\segment_display|mux8x1_1[0]|mux4x1_1|andEnable~0_combout ),
	.datab(\segment_display|mux8x1_1[0]|mux4x1_1|andEnable~1_combout ),
	.datac(\game_state_decoder_1|and1~combout ),
	.datad(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[0]|mux4x1_1|andEnable~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~2 .lut_mask = "aaef";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~2 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~2 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~2 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~2 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~3 (
// Equation(s):
// \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~3_combout  = (\segment_display|counter3bit_1|t_flipflop_1|out~regout ) # ((!\y_coord_code~combout [1] & (\y_coord_code~combout [0] $ (\y_coord_code~combout [2]))))

	.clk(gnd),
	.dataa(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.datab(\y_coord_code~combout [0]),
	.datac(\y_coord_code~combout [2]),
	.datad(\y_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[0]|mux4x1_1|andEnable~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~3 .lut_mask = "aabe";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~3 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~3 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~3 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~3 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~4 (
// Equation(s):
// \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~4_combout  = (\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0_combout  & ((\segment_display|mux8x1_1[0]|mux4x1_1|andEnable~2_combout ) # ((\segment_display|mux8x1_1[0]|mux4x1_1|andEnable~3_combout  & 
// !\segment_display|counter3bit_1|t_flipflop_0|out~regout ))))

	.clk(gnd),
	.dataa(\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0_combout ),
	.datab(\segment_display|mux8x1_1[0]|mux4x1_1|andEnable~2_combout ),
	.datac(\segment_display|mux8x1_1[0]|mux4x1_1|andEnable~3_combout ),
	.datad(\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[0]|mux4x1_1|andEnable~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~4 .lut_mask = "88a8";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~4 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~4 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~4 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~4 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[0]|mux4x1_1|andEnable~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~0 (
// Equation(s):
// \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~0_combout  = (\segment_display|counter3bit_1|t_flipflop_0|out~regout  & (\x_coord_code~combout [2] & (\x_coord_code~combout [0] $ (\x_coord_code~combout [1]))))

	.clk(gnd),
	.dataa(\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.datab(\x_coord_code~combout [2]),
	.datac(\x_coord_code~combout [0]),
	.datad(\x_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[1]|mux4x1_1|andEnable~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~0 .lut_mask = "0880";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~0 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~0 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~0 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~0 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~1 (
// Equation(s):
// \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~1_combout  = ((!\segment_display|counter3bit_1|t_flipflop_1|out~regout  & ((\segment_display|mux8x1_1[1]|mux4x1_1|andEnable~0_combout ) # (!\game_state_decoder_1|and1~combout ))))

	.clk(gnd),
	.dataa(\segment_display|mux8x1_1[1]|mux4x1_1|andEnable~0_combout ),
	.datab(vcc),
	.datac(\game_state_decoder_1|and1~combout ),
	.datad(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[1]|mux4x1_1|andEnable~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~1 .lut_mask = "00af";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~1 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~1 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~1 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~1 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~2 (
// Equation(s):
// \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~2_combout  = (\segment_display|counter3bit_1|t_flipflop_1|out~regout ) # ((\y_coord_code~combout [2] & (\y_coord_code~combout [1] $ (\y_coord_code~combout [0]))))

	.clk(gnd),
	.dataa(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.datab(\y_coord_code~combout [2]),
	.datac(\y_coord_code~combout [1]),
	.datad(\y_coord_code~combout [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[1]|mux4x1_1|andEnable~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~2 .lut_mask = "aeea";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~2 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~2 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~2 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~2 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~3 (
// Equation(s):
// \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~3_combout  = (\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0_combout  & ((\segment_display|mux8x1_1[1]|mux4x1_1|andEnable~1_combout ) # ((\segment_display|mux8x1_1[1]|mux4x1_1|andEnable~2_combout  & 
// !\segment_display|counter3bit_1|t_flipflop_0|out~regout ))))

	.clk(gnd),
	.dataa(\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0_combout ),
	.datab(\segment_display|mux8x1_1[1]|mux4x1_1|andEnable~1_combout ),
	.datac(\segment_display|mux8x1_1[1]|mux4x1_1|andEnable~2_combout ),
	.datad(\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[1]|mux4x1_1|andEnable~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~3 .lut_mask = "88a8";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~3 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~3 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~3 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~3 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[1]|mux4x1_1|andEnable~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[2]|mux4x1_1|or1~0 (
// Equation(s):
// \segment_display|mux8x1_1[2]|mux4x1_1|or1~0_combout  = (!\segment_display|counter3bit_1|t_flipflop_0|out~regout  & ((\segment_display|counter3bit_1|t_flipflop_1|out~regout ) # ((\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0_combout  & 
// !\y_coord_code~combout [0]))))

	.clk(gnd),
	.dataa(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.datab(\attack_round_1|xCoordDemuxHitsMap[1]|demux1x4_2|and1~0_combout ),
	.datac(\y_coord_code~combout [0]),
	.datad(\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[2]|mux4x1_1|or1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~0 .lut_mask = "00ae";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~0 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~0 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~0 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~0 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[2]|mux4x1_1|or1~1 (
// Equation(s):
// \segment_display|mux8x1_1[2]|mux4x1_1|or1~1_combout  = (!\game_state_code~combout [0] & (((\segment_display|counter3bit_1|t_flipflop_1|out~regout  & \game_state_code~combout [1])) # (!\game_state_decoder_1|and1~combout )))

	.clk(gnd),
	.dataa(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.datab(\game_state_code~combout [1]),
	.datac(\game_state_decoder_1|and1~combout ),
	.datad(\game_state_code~combout [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[2]|mux4x1_1|or1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~1 .lut_mask = "008f";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~1 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~1 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~1 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~1 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[2]|mux4x1_1|or1~3 (
// Equation(s):
// \segment_display|mux8x1_1[2]|mux4x1_1|or1~3_combout  = (!\segment_display|counter3bit_1|t_flipflop_1|out~regout  & (((\segment_display|counter3bit_1|t_flipflop_0|out~regout  & \segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout )) # 
// (!\game_state_decoder_1|and1~combout )))

	.clk(gnd),
	.dataa(\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.datab(\segment_display|mux8x1_1[2]|mux4x1_1|or1~2_combout ),
	.datac(\game_state_decoder_1|and1~combout ),
	.datad(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[2]|mux4x1_1|or1~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~3 .lut_mask = "008f";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~3 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~3 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~3 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~3 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|or1~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[2]|mux4x1_1|andEnable~0 (
// Equation(s):
// \segment_display|mux8x1_1[2]|mux4x1_1|andEnable~0_combout  = (\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0_combout  & ((\segment_display|mux8x1_1[2]|mux4x1_1|or1~0_combout ) # ((\segment_display|mux8x1_1[2]|mux4x1_1|or1~1_combout ) # 
// (\segment_display|mux8x1_1[2]|mux4x1_1|or1~3_combout ))))

	.clk(gnd),
	.dataa(\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0_combout ),
	.datab(\segment_display|mux8x1_1[2]|mux4x1_1|or1~0_combout ),
	.datac(\segment_display|mux8x1_1[2]|mux4x1_1|or1~1_combout ),
	.datad(\segment_display|mux8x1_1[2]|mux4x1_1|or1~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[2]|mux4x1_1|andEnable~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[2]|mux4x1_1|andEnable~0 .lut_mask = "aaa8";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|andEnable~0 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|andEnable~0 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|andEnable~0 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|andEnable~0 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[2]|mux4x1_1|andEnable~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~0 (
// Equation(s):
// \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~0_combout  = (\segment_display|counter3bit_1|t_flipflop_0|out~regout  & ((\x_coord_code~combout [0] & (\x_coord_code~combout [2] $ (!\x_coord_code~combout [1]))) # (!\x_coord_code~combout [0] & 
// (\x_coord_code~combout [2] & !\x_coord_code~combout [1]))))

	.clk(gnd),
	.dataa(\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.datab(\x_coord_code~combout [0]),
	.datac(\x_coord_code~combout [2]),
	.datad(\x_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~0 .lut_mask = "8028";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~0 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~0 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~0 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~0 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~1 (
// Equation(s):
// \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~1_combout  = (\segment_display|mux8x1_1[0]|mux4x1_1|andEnable~0_combout ) # ((!\segment_display|counter3bit_1|t_flipflop_1|out~regout  & ((\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~0_combout ) # 
// (!\game_state_decoder_1|and1~combout ))))

	.clk(gnd),
	.dataa(\segment_display|mux8x1_1[0]|mux4x1_1|andEnable~0_combout ),
	.datab(\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~0_combout ),
	.datac(\game_state_decoder_1|and1~combout ),
	.datad(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~1 .lut_mask = "aaef";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~1 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~1 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~1 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~1 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~2 (
// Equation(s):
// \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~2_combout  = (\segment_display|counter3bit_1|t_flipflop_1|out~regout ) # ((\y_coord_code~combout [0] & (\y_coord_code~combout [2] $ (!\y_coord_code~combout [1]))) # (!\y_coord_code~combout [0] & 
// (\y_coord_code~combout [2] & !\y_coord_code~combout [1])))

	.clk(gnd),
	.dataa(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.datab(\y_coord_code~combout [0]),
	.datac(\y_coord_code~combout [2]),
	.datad(\y_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~2 .lut_mask = "eabe";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~2 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~2 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~2 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~2 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~3 (
// Equation(s):
// \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~3_combout  = (\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0_combout  & ((\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~1_combout ) # ((\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~2_combout  & 
// !\segment_display|counter3bit_1|t_flipflop_0|out~regout ))))

	.clk(gnd),
	.dataa(\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0_combout ),
	.datab(\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~1_combout ),
	.datac(\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~2_combout ),
	.datad(\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~3 .lut_mask = "88a8";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~3 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~3 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~3 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~3 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[3]|mux4x1_1|andEnable~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[4]|mux4x1_1|or1~0 (
// Equation(s):
// \segment_display|mux8x1_1[4]|mux4x1_1|or1~0_combout  = (((\game_state_code~combout [0] & \segment_display|counter3bit_1|t_flipflop_1|out~regout )) # (!\game_state_decoder_1|and1~combout ))

	.clk(gnd),
	.dataa(\game_state_code~combout [0]),
	.datab(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.datac(vcc),
	.datad(\game_state_decoder_1|and1~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[4]|mux4x1_1|or1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~0 .lut_mask = "88ff";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~0 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~0 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~0 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~0 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[4]|mux4x1_1|or1~1 (
// Equation(s):
// \segment_display|mux8x1_1[4]|mux4x1_1|or1~1_combout  = (!\segment_display|counter3bit_1|t_flipflop_0|out~regout  & ((\segment_display|counter3bit_1|t_flipflop_1|out~regout ) # ((\y_coord_code~combout [0]) # 
// (\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0_combout ))))

	.clk(gnd),
	.dataa(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.datab(\y_coord_code~combout [0]),
	.datac(\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0_combout ),
	.datad(\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[4]|mux4x1_1|or1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~1 .lut_mask = "00fe";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~1 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~1 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~1 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~1 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[4]|mux4x1_1|or1~2 (
// Equation(s):
// \segment_display|mux8x1_1[4]|mux4x1_1|or1~2_combout  = (\x_coord_code~combout [2] & (((!\x_coord_code~combout [1]))))

	.clk(gnd),
	.dataa(\x_coord_code~combout [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(\x_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[4]|mux4x1_1|or1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~2 .lut_mask = "00aa";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~2 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~2 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~2 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~2 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[4]|mux4x1_1|or1~3 (
// Equation(s):
// \segment_display|mux8x1_1[4]|mux4x1_1|or1~3_combout  = (\segment_display|counter3bit_1|t_flipflop_0|out~regout  & (!\segment_display|counter3bit_1|t_flipflop_1|out~regout  & ((\x_coord_code~combout [0]) # 
// (\segment_display|mux8x1_1[4]|mux4x1_1|or1~2_combout ))))

	.clk(gnd),
	.dataa(\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.datab(\x_coord_code~combout [0]),
	.datac(\segment_display|mux8x1_1[4]|mux4x1_1|or1~2_combout ),
	.datad(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[4]|mux4x1_1|or1~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~3 .lut_mask = "00a8";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~3 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~3 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~3 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~3 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|or1~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[4]|mux4x1_1|andEnable~0 (
// Equation(s):
// \segment_display|mux8x1_1[4]|mux4x1_1|andEnable~0_combout  = (\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0_combout  & ((\segment_display|mux8x1_1[4]|mux4x1_1|or1~0_combout ) # ((\segment_display|mux8x1_1[4]|mux4x1_1|or1~1_combout ) # 
// (\segment_display|mux8x1_1[4]|mux4x1_1|or1~3_combout ))))

	.clk(gnd),
	.dataa(\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0_combout ),
	.datab(\segment_display|mux8x1_1[4]|mux4x1_1|or1~0_combout ),
	.datac(\segment_display|mux8x1_1[4]|mux4x1_1|or1~1_combout ),
	.datad(\segment_display|mux8x1_1[4]|mux4x1_1|or1~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[4]|mux4x1_1|andEnable~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[4]|mux4x1_1|andEnable~0 .lut_mask = "aaa8";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|andEnable~0 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|andEnable~0 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|andEnable~0 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|andEnable~0 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[4]|mux4x1_1|andEnable~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~0 (
// Equation(s):
// \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~0_combout  = (\game_state_code~combout [0]) # ((\game_state_code~combout [1]))

	.clk(gnd),
	.dataa(\game_state_code~combout [0]),
	.datab(\game_state_code~combout [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[5]|mux4x1_1|andEnable~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~0 .lut_mask = "eeee";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~0 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~0 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~0 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~0 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~1 (
// Equation(s):
// \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~1_combout  = (\segment_display|counter3bit_1|t_flipflop_0|out~regout  & ((\x_coord_code~combout [0] & ((\x_coord_code~combout [1]) # (!\x_coord_code~combout [2]))) # (!\x_coord_code~combout [0] & 
// (\x_coord_code~combout [1] & !\x_coord_code~combout [2]))))

	.clk(gnd),
	.dataa(\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.datab(\x_coord_code~combout [0]),
	.datac(\x_coord_code~combout [1]),
	.datad(\x_coord_code~combout [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[5]|mux4x1_1|andEnable~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~1 .lut_mask = "80a8";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~1 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~1 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~1 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~1 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~2 (
// Equation(s):
// \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~2_combout  = (\segment_display|counter3bit_1|t_flipflop_1|out~regout  & (\segment_display|mux8x1_1[5]|mux4x1_1|andEnable~0_combout )) # (!\segment_display|counter3bit_1|t_flipflop_1|out~regout  & 
// (((\segment_display|mux8x1_1[5]|mux4x1_1|andEnable~1_combout ) # (!\game_state_decoder_1|and1~combout ))))

	.clk(gnd),
	.dataa(\segment_display|mux8x1_1[5]|mux4x1_1|andEnable~0_combout ),
	.datab(\segment_display|mux8x1_1[5]|mux4x1_1|andEnable~1_combout ),
	.datac(\game_state_decoder_1|and1~combout ),
	.datad(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[5]|mux4x1_1|andEnable~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~2 .lut_mask = "aacf";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~2 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~2 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~2 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~2 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~3 (
// Equation(s):
// \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~3_combout  = (\segment_display|counter3bit_1|t_flipflop_1|out~regout ) # ((\y_coord_code~combout [1] & ((\y_coord_code~combout [0]) # (!\y_coord_code~combout [2]))) # (!\y_coord_code~combout [1] & 
// (\y_coord_code~combout [0] & !\y_coord_code~combout [2])))

	.clk(gnd),
	.dataa(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.datab(\y_coord_code~combout [1]),
	.datac(\y_coord_code~combout [0]),
	.datad(\y_coord_code~combout [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[5]|mux4x1_1|andEnable~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~3 .lut_mask = "eafe";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~3 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~3 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~3 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~3 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~4 (
// Equation(s):
// \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~4_combout  = (\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0_combout  & ((\segment_display|mux8x1_1[5]|mux4x1_1|andEnable~2_combout ) # ((\segment_display|mux8x1_1[5]|mux4x1_1|andEnable~3_combout  & 
// !\segment_display|counter3bit_1|t_flipflop_0|out~regout ))))

	.clk(gnd),
	.dataa(\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0_combout ),
	.datab(\segment_display|mux8x1_1[5]|mux4x1_1|andEnable~2_combout ),
	.datac(\segment_display|mux8x1_1[5]|mux4x1_1|andEnable~3_combout ),
	.datad(\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[5]|mux4x1_1|andEnable~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~4 .lut_mask = "88a8";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~4 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~4 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~4 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~4 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[5]|mux4x1_1|andEnable~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~1 (
// Equation(s):
// \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~1_combout  = (\segment_display|counter3bit_1|t_flipflop_1|out~regout ) # ((\y_coord_code~combout [1] & (\y_coord_code~combout [0] & \y_coord_code~combout [2])) # (!\y_coord_code~combout [1] & 
// ((!\y_coord_code~combout [2]))))

	.clk(gnd),
	.dataa(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.datab(\y_coord_code~combout [0]),
	.datac(\y_coord_code~combout [1]),
	.datad(\y_coord_code~combout [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~1 .lut_mask = "eaaf";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~1 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~1 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~1 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~1 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~2 (
// Equation(s):
// \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~2_combout  = (\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~1_combout  & (((\segment_display|counter3bit_1|t_flipflop_1|out~regout  & !\game_state_code~combout [1])) # 
// (!\segment_display|counter3bit_1|t_flipflop_0|out~regout ))) # (!\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~1_combout  & (\segment_display|counter3bit_1|t_flipflop_1|out~regout  & ((!\game_state_code~combout [1]))))

	.clk(gnd),
	.dataa(\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~1_combout ),
	.datab(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.datac(\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.datad(\game_state_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~2 .lut_mask = "0ace";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~2 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~2 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~2 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~2 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~3 (
// Equation(s):
// \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~3_combout  = (\x_coord_code~combout [2] & (\x_coord_code~combout [0] & (\x_coord_code~combout [1]))) # (!\x_coord_code~combout [2] & (((!\x_coord_code~combout [1]))))

	.clk(gnd),
	.dataa(\x_coord_code~combout [0]),
	.datab(\x_coord_code~combout [2]),
	.datac(\x_coord_code~combout [1]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~3 .lut_mask = "8383";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~3 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~3 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~3 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~3 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~4 (
// Equation(s):
// \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~4_combout  = (((\segment_display|counter3bit_1|t_flipflop_0|out~regout  & \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~3_combout )) # (!\game_state_decoder_1|and1~combout ))

	.clk(gnd),
	.dataa(\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.datab(\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~3_combout ),
	.datac(vcc),
	.datad(\game_state_decoder_1|and1~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~4 .lut_mask = "88ff";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~4 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~4 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~4 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~4 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~5 (
// Equation(s):
// \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~5_combout  = (\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0_combout  & ((\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~2_combout ) # ((\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~4_combout  & 
// !\segment_display|counter3bit_1|t_flipflop_1|out~regout ))))

	.clk(gnd),
	.dataa(\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~0_combout ),
	.datab(\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~2_combout ),
	.datac(\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~4_combout ),
	.datad(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~5 .lut_mask = "88a8";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~5 .operation_mode = "normal";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~5 .output_mode = "comb_only";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~5 .register_cascade_mode = "off";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~5 .sum_lutc_input = "datac";
defparam \segment_display|mux8x1_1[6]|mux4x1_1|andEnable~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|register8bitSIPO_1|d_flipflop_0|out (
// Equation(s):
// \matriz_displayer|register8bitSIPO_1|d_flipflop_0|out~regout  = DFFEAS(((!\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout  & (!\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout  & !\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ))), 
// \freq_div_1|t_flipflop_2|out~regout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\freq_div_1|t_flipflop_2|out~regout ),
	.dataa(vcc),
	.datab(\matriz_displayer|counter3bit_1|t_flipflop_2|out~regout ),
	.datac(\matriz_displayer|counter3bit_1|t_flipflop_0|out~regout ),
	.datad(\matriz_displayer|counter3bit_1|t_flipflop_1|out~regout ),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\matriz_displayer|register8bitSIPO_1|d_flipflop_0|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_0|out .lut_mask = "0003";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_0|out .operation_mode = "normal";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_0|out .output_mode = "reg_only";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_0|out .register_cascade_mode = "off";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_0|out .sum_lutc_input = "datac";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_0|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|register8bitSIPO_1|d_flipflop_1|out (
// Equation(s):
// \matriz_displayer|register8bitSIPO_1|d_flipflop_1|out~regout  = DFFEAS((\matriz_displayer|register8bitSIPO_1|d_flipflop_0|out~regout ), \freq_div_1|t_flipflop_2|out~regout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\freq_div_1|t_flipflop_2|out~regout ),
	.dataa(\matriz_displayer|register8bitSIPO_1|d_flipflop_0|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\matriz_displayer|register8bitSIPO_1|d_flipflop_1|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_1|out .lut_mask = "aaaa";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_1|out .operation_mode = "normal";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_1|out .output_mode = "reg_only";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_1|out .register_cascade_mode = "off";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_1|out .sum_lutc_input = "datac";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_1|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|register8bitSIPO_1|d_flipflop_2|out (
// Equation(s):
// \matriz_displayer|register8bitSIPO_1|d_flipflop_2|out~regout  = DFFEAS((\matriz_displayer|register8bitSIPO_1|d_flipflop_1|out~regout ), \freq_div_1|t_flipflop_2|out~regout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\freq_div_1|t_flipflop_2|out~regout ),
	.dataa(\matriz_displayer|register8bitSIPO_1|d_flipflop_1|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\matriz_displayer|register8bitSIPO_1|d_flipflop_2|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_2|out .lut_mask = "aaaa";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_2|out .operation_mode = "normal";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_2|out .output_mode = "reg_only";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_2|out .register_cascade_mode = "off";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_2|out .sum_lutc_input = "datac";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_2|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|register8bitSIPO_1|d_flipflop_3|out (
// Equation(s):
// \matriz_displayer|register8bitSIPO_1|d_flipflop_3|out~regout  = DFFEAS((\matriz_displayer|register8bitSIPO_1|d_flipflop_2|out~regout ), \freq_div_1|t_flipflop_2|out~regout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\freq_div_1|t_flipflop_2|out~regout ),
	.dataa(\matriz_displayer|register8bitSIPO_1|d_flipflop_2|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\matriz_displayer|register8bitSIPO_1|d_flipflop_3|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_3|out .lut_mask = "aaaa";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_3|out .operation_mode = "normal";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_3|out .output_mode = "reg_only";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_3|out .register_cascade_mode = "off";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_3|out .sum_lutc_input = "datac";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_3|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \matriz_displayer|register8bitSIPO_1|d_flipflop_4|out (
// Equation(s):
// \matriz_displayer|register8bitSIPO_1|d_flipflop_4|out~regout  = DFFEAS((\matriz_displayer|register8bitSIPO_1|d_flipflop_3|out~regout ), \freq_div_1|t_flipflop_2|out~regout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\freq_div_1|t_flipflop_2|out~regout ),
	.dataa(\matriz_displayer|register8bitSIPO_1|d_flipflop_3|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\matriz_displayer|register8bitSIPO_1|d_flipflop_4|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_4|out .lut_mask = "aaaa";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_4|out .operation_mode = "normal";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_4|out .output_mode = "reg_only";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_4|out .register_cascade_mode = "off";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_4|out .sum_lutc_input = "datac";
defparam \matriz_displayer|register8bitSIPO_1|d_flipflop_4|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|register8bitSIPO_1|d_flipflop_0|out (
// Equation(s):
// \segment_display|register8bitSIPO_1|d_flipflop_0|out~regout  = DFFEAS(((!\segment_display|counter3bit_1|t_flipflop_2|out~regout  & (!\segment_display|counter3bit_1|t_flipflop_0|out~regout  & !\segment_display|counter3bit_1|t_flipflop_1|out~regout ))), 
// \freq_div_1|t_flipflop_2|out~regout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\freq_div_1|t_flipflop_2|out~regout ),
	.dataa(vcc),
	.datab(\segment_display|counter3bit_1|t_flipflop_2|out~regout ),
	.datac(\segment_display|counter3bit_1|t_flipflop_0|out~regout ),
	.datad(\segment_display|counter3bit_1|t_flipflop_1|out~regout ),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\segment_display|register8bitSIPO_1|d_flipflop_0|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|register8bitSIPO_1|d_flipflop_0|out .lut_mask = "0003";
defparam \segment_display|register8bitSIPO_1|d_flipflop_0|out .operation_mode = "normal";
defparam \segment_display|register8bitSIPO_1|d_flipflop_0|out .output_mode = "reg_only";
defparam \segment_display|register8bitSIPO_1|d_flipflop_0|out .register_cascade_mode = "off";
defparam \segment_display|register8bitSIPO_1|d_flipflop_0|out .sum_lutc_input = "datac";
defparam \segment_display|register8bitSIPO_1|d_flipflop_0|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|register8bitSIPO_1|d_flipflop_1|out (
// Equation(s):
// \segment_display|register8bitSIPO_1|d_flipflop_1|out~regout  = DFFEAS((\segment_display|register8bitSIPO_1|d_flipflop_0|out~regout ), \freq_div_1|t_flipflop_2|out~regout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\freq_div_1|t_flipflop_2|out~regout ),
	.dataa(\segment_display|register8bitSIPO_1|d_flipflop_0|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\segment_display|register8bitSIPO_1|d_flipflop_1|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|register8bitSIPO_1|d_flipflop_1|out .lut_mask = "aaaa";
defparam \segment_display|register8bitSIPO_1|d_flipflop_1|out .operation_mode = "normal";
defparam \segment_display|register8bitSIPO_1|d_flipflop_1|out .output_mode = "reg_only";
defparam \segment_display|register8bitSIPO_1|d_flipflop_1|out .register_cascade_mode = "off";
defparam \segment_display|register8bitSIPO_1|d_flipflop_1|out .sum_lutc_input = "datac";
defparam \segment_display|register8bitSIPO_1|d_flipflop_1|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|register8bitSIPO_1|d_flipflop_2|out (
// Equation(s):
// \segment_display|register8bitSIPO_1|d_flipflop_2|out~regout  = DFFEAS((\segment_display|register8bitSIPO_1|d_flipflop_1|out~regout ), \freq_div_1|t_flipflop_2|out~regout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\freq_div_1|t_flipflop_2|out~regout ),
	.dataa(\segment_display|register8bitSIPO_1|d_flipflop_1|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\segment_display|register8bitSIPO_1|d_flipflop_2|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|register8bitSIPO_1|d_flipflop_2|out .lut_mask = "aaaa";
defparam \segment_display|register8bitSIPO_1|d_flipflop_2|out .operation_mode = "normal";
defparam \segment_display|register8bitSIPO_1|d_flipflop_2|out .output_mode = "reg_only";
defparam \segment_display|register8bitSIPO_1|d_flipflop_2|out .register_cascade_mode = "off";
defparam \segment_display|register8bitSIPO_1|d_flipflop_2|out .sum_lutc_input = "datac";
defparam \segment_display|register8bitSIPO_1|d_flipflop_2|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \segment_display|register8bitSIPO_1|d_flipflop_3|out (
// Equation(s):
// \segment_display|register8bitSIPO_1|d_flipflop_3|out~regout  = DFFEAS((\segment_display|register8bitSIPO_1|d_flipflop_2|out~regout ), \freq_div_1|t_flipflop_2|out~regout , !\game_state_decoder_1|or0~0_combout , , , , , , )

	.clk(\freq_div_1|t_flipflop_2|out~regout ),
	.dataa(\segment_display|register8bitSIPO_1|d_flipflop_2|out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\game_state_decoder_1|or0~0_combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\segment_display|register8bitSIPO_1|d_flipflop_3|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \segment_display|register8bitSIPO_1|d_flipflop_3|out .lut_mask = "aaaa";
defparam \segment_display|register8bitSIPO_1|d_flipflop_3|out .operation_mode = "normal";
defparam \segment_display|register8bitSIPO_1|d_flipflop_3|out .output_mode = "reg_only";
defparam \segment_display|register8bitSIPO_1|d_flipflop_3|out .register_cascade_mode = "off";
defparam \segment_display|register8bitSIPO_1|d_flipflop_3|out .sum_lutc_input = "datac";
defparam \segment_display|register8bitSIPO_1|d_flipflop_3|out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|yCoordMuxSelectedMap|or1~0 (
// Equation(s):
// \attack_round_1|yCoordMuxSelectedMap|or1~0_combout  = (\y_coord_code~combout [2] & ((\y_coord_code~combout [0]) # ((!\y_coord_code~combout [1])))) # (!\y_coord_code~combout [2] & ((\y_coord_code~combout [1] & ((\x_coord_code~combout [0]))) # 
// (!\y_coord_code~combout [1] & (\y_coord_code~combout [0]))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [0]),
	.datab(\y_coord_code~combout [2]),
	.datac(\x_coord_code~combout [0]),
	.datad(\y_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|yCoordMuxSelectedMap|or1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|yCoordMuxSelectedMap|or1~0 .lut_mask = "b8ee";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~0 .operation_mode = "normal";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~0 .output_mode = "comb_only";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~0 .register_cascade_mode = "off";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~0 .sum_lutc_input = "datac";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|yCoordMuxSelectedMap|or1~1 (
// Equation(s):
// \attack_round_1|yCoordMuxSelectedMap|or1~1_combout  = (\y_coord_code~combout [1] & (((!\y_coord_code~combout [0] & \y_coord_code~combout [2])) # (!\x_coord_code~combout [0])))

	.clk(gnd),
	.dataa(\y_coord_code~combout [0]),
	.datab(\y_coord_code~combout [2]),
	.datac(\x_coord_code~combout [0]),
	.datad(\y_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|yCoordMuxSelectedMap|or1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|yCoordMuxSelectedMap|or1~1 .lut_mask = "4f00";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~1 .operation_mode = "normal";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~1 .output_mode = "comb_only";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~1 .register_cascade_mode = "off";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~1 .sum_lutc_input = "datac";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|yCoordMuxSelectedMap|or1~2 (
// Equation(s):
// \attack_round_1|yCoordMuxSelectedMap|or1~2_combout  = (\attack_round_1|yCoordMuxSelectedMap|or1~0_combout  & ((\attack_round_1|yCoordMuxSelectedMap|or1~1_combout  & (\attack_round_1|selected_map_register[0]|out~regout )) # 
// (!\attack_round_1|yCoordMuxSelectedMap|or1~1_combout  & ((\attack_round_1|selected_map_register[14]|out~regout ))))) # (!\attack_round_1|yCoordMuxSelectedMap|or1~0_combout  & (((\attack_round_1|yCoordMuxSelectedMap|or1~1_combout ))))

	.clk(gnd),
	.dataa(\attack_round_1|selected_map_register[0]|out~regout ),
	.datab(\attack_round_1|selected_map_register[14]|out~regout ),
	.datac(\attack_round_1|yCoordMuxSelectedMap|or1~0_combout ),
	.datad(\attack_round_1|yCoordMuxSelectedMap|or1~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|yCoordMuxSelectedMap|or1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|yCoordMuxSelectedMap|or1~2 .lut_mask = "afc0";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~2 .operation_mode = "normal";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~2 .output_mode = "comb_only";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~2 .register_cascade_mode = "off";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~2 .sum_lutc_input = "datac";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|yCoordMuxSelectedMap|or1~3 (
// Equation(s):
// \attack_round_1|yCoordMuxSelectedMap|or1~3_combout  = (\segment_display|mux8x1_1[2]|mux4x1_1|or1~4_combout  & (\attack_round_1|yCoordMuxSelectedMap|or1~2_combout  & ((\attack_round_1|selected_map_register[12]|out~regout ) # 
// (\attack_round_1|yCoordMuxSelectedMap|or1~0_combout ))))

	.clk(gnd),
	.dataa(\attack_round_1|selected_map_register[12]|out~regout ),
	.datab(\segment_display|mux8x1_1[2]|mux4x1_1|or1~4_combout ),
	.datac(\attack_round_1|yCoordMuxSelectedMap|or1~0_combout ),
	.datad(\attack_round_1|yCoordMuxSelectedMap|or1~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|yCoordMuxSelectedMap|or1~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|yCoordMuxSelectedMap|or1~3 .lut_mask = "c800";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~3 .operation_mode = "normal";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~3 .output_mode = "comb_only";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~3 .register_cascade_mode = "off";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~3 .sum_lutc_input = "datac";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|yCoordMuxSelectedMap|or1~4 (
// Equation(s):
// \attack_round_1|yCoordMuxSelectedMap|or1~4_combout  = (\y_coord_code~combout [0] & (\y_coord_code~combout [2] $ (((!\y_coord_code~combout [1]) # (!\x_coord_code~combout [2]))))) # (!\y_coord_code~combout [0] & (\y_coord_code~combout [2] & 
// (\x_coord_code~combout [2])))

	.clk(gnd),
	.dataa(\y_coord_code~combout [0]),
	.datab(\y_coord_code~combout [2]),
	.datac(\x_coord_code~combout [2]),
	.datad(\y_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|yCoordMuxSelectedMap|or1~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|yCoordMuxSelectedMap|or1~4 .lut_mask = "c262";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~4 .operation_mode = "normal";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~4 .output_mode = "comb_only";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~4 .register_cascade_mode = "off";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~4 .sum_lutc_input = "datac";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|yCoordMuxSelectedMap|or1~5 (
// Equation(s):
// \attack_round_1|yCoordMuxSelectedMap|or1~5_combout  = (\y_coord_code~combout [1] & ((\attack_round_1|selected_map_register[14]|out~regout ) # ((!\attack_round_1|yCoordMuxSelectedMap|or1~4_combout )))) # (!\y_coord_code~combout [1] & 
// (((\attack_round_1|yCoordMuxSelectedMap|or1~4_combout ))))

	.clk(gnd),
	.dataa(\attack_round_1|selected_map_register[14]|out~regout ),
	.datab(\y_coord_code~combout [1]),
	.datac(\attack_round_1|yCoordMuxSelectedMap|or1~4_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|yCoordMuxSelectedMap|or1~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|yCoordMuxSelectedMap|or1~5 .lut_mask = "bcbc";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~5 .operation_mode = "normal";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~5 .output_mode = "comb_only";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~5 .register_cascade_mode = "off";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~5 .sum_lutc_input = "datac";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|yCoordMuxSelectedMap|or1~6 (
// Equation(s):
// \attack_round_1|yCoordMuxSelectedMap|or1~6_combout  = (\attack_round_1|selected_map_register[0]|out~regout  & (\x_coord_code~combout [0] & (\attack_round_1|yCoordMuxSelectedMap|or1~5_combout  & !\x_coord_code~combout [1])))

	.clk(gnd),
	.dataa(\attack_round_1|selected_map_register[0]|out~regout ),
	.datab(\x_coord_code~combout [0]),
	.datac(\attack_round_1|yCoordMuxSelectedMap|or1~5_combout ),
	.datad(\x_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|yCoordMuxSelectedMap|or1~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|yCoordMuxSelectedMap|or1~6 .lut_mask = "0080";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~6 .operation_mode = "normal";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~6 .output_mode = "comb_only";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~6 .register_cascade_mode = "off";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~6 .sum_lutc_input = "datac";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~6 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|yCoordMuxSelectedMap|or1~7 (
// Equation(s):
// \attack_round_1|yCoordMuxSelectedMap|or1~7_combout  = (\attack_round_1|selected_map_register[12]|out~regout  & (\segment_display|mux8x1_1[4]|mux4x1_1|or1~2_combout  & (!\y_coord_code~combout [0] & !\x_coord_code~combout [0])))

	.clk(gnd),
	.dataa(\attack_round_1|selected_map_register[12]|out~regout ),
	.datab(\segment_display|mux8x1_1[4]|mux4x1_1|or1~2_combout ),
	.datac(\y_coord_code~combout [0]),
	.datad(\x_coord_code~combout [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|yCoordMuxSelectedMap|or1~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|yCoordMuxSelectedMap|or1~7 .lut_mask = "0008";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~7 .operation_mode = "normal";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~7 .output_mode = "comb_only";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~7 .register_cascade_mode = "off";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~7 .sum_lutc_input = "datac";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~7 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|yCoordMuxSelectedMap|or1~8 (
// Equation(s):
// \attack_round_1|yCoordMuxSelectedMap|or1~8_combout  = (\y_coord_code~combout [0] & (\x_coord_code~combout [0] & (!\y_coord_code~combout [2] & !\x_coord_code~combout [2])))

	.clk(gnd),
	.dataa(\y_coord_code~combout [0]),
	.datab(\x_coord_code~combout [0]),
	.datac(\y_coord_code~combout [2]),
	.datad(\x_coord_code~combout [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|yCoordMuxSelectedMap|or1~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|yCoordMuxSelectedMap|or1~8 .lut_mask = "0008";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~8 .operation_mode = "normal";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~8 .output_mode = "comb_only";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~8 .register_cascade_mode = "off";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~8 .sum_lutc_input = "datac";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~8 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|yCoordMuxSelectedMap|or1~9 (
// Equation(s):
// \attack_round_1|yCoordMuxSelectedMap|or1~9_combout  = (\y_coord_code~combout [1] & ((\attack_round_1|yCoordMuxSelectedMap|or1~7_combout ) # ((\attack_round_1|selected_map_register[14]|out~regout  & \attack_round_1|yCoordMuxSelectedMap|or1~8_combout ))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [1]),
	.datab(\attack_round_1|yCoordMuxSelectedMap|or1~7_combout ),
	.datac(\attack_round_1|selected_map_register[14]|out~regout ),
	.datad(\attack_round_1|yCoordMuxSelectedMap|or1~8_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|yCoordMuxSelectedMap|or1~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|yCoordMuxSelectedMap|or1~9 .lut_mask = "a888";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~9 .operation_mode = "normal";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~9 .output_mode = "comb_only";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~9 .register_cascade_mode = "off";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~9 .sum_lutc_input = "datac";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~9 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|yCoordMuxSelectedMap|or1~10 (
// Equation(s):
// \attack_round_1|yCoordMuxSelectedMap|or1~10_combout  = (\attack_round_1|selected_map_register[14]|out~regout  & (((!\y_coord_code~combout [0] & !\x_coord_code~combout [2]))))

	.clk(gnd),
	.dataa(\attack_round_1|selected_map_register[14]|out~regout ),
	.datab(vcc),
	.datac(\y_coord_code~combout [0]),
	.datad(\x_coord_code~combout [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|yCoordMuxSelectedMap|or1~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|yCoordMuxSelectedMap|or1~10 .lut_mask = "000a";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~10 .operation_mode = "normal";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~10 .output_mode = "comb_only";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~10 .register_cascade_mode = "off";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~10 .sum_lutc_input = "datac";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~10 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|yCoordMuxSelectedMap|or1~11 (
// Equation(s):
// \attack_round_1|yCoordMuxSelectedMap|or1~11_combout  = (\attack_round_1|selected_map_register[12]|out~regout  & (\y_coord_code~combout [0] & ((!\x_coord_code~combout [1]))))

	.clk(gnd),
	.dataa(\attack_round_1|selected_map_register[12]|out~regout ),
	.datab(\y_coord_code~combout [0]),
	.datac(vcc),
	.datad(\x_coord_code~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|yCoordMuxSelectedMap|or1~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|yCoordMuxSelectedMap|or1~11 .lut_mask = "0088";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~11 .operation_mode = "normal";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~11 .output_mode = "comb_only";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~11 .register_cascade_mode = "off";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~11 .sum_lutc_input = "datac";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~11 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|yCoordMuxSelectedMap|or1~12 (
// Equation(s):
// \attack_round_1|yCoordMuxSelectedMap|or1~12_combout  = (\x_coord_code~combout [0] & (\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0_combout  & ((\attack_round_1|yCoordMuxSelectedMap|or1~10_combout ) # 
// (\attack_round_1|yCoordMuxSelectedMap|or1~11_combout ))))

	.clk(gnd),
	.dataa(\x_coord_code~combout [0]),
	.datab(\attack_round_1|xCoordDemuxHitsMap[4]|demux1x4_2|and2~0_combout ),
	.datac(\attack_round_1|yCoordMuxSelectedMap|or1~10_combout ),
	.datad(\attack_round_1|yCoordMuxSelectedMap|or1~11_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|yCoordMuxSelectedMap|or1~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|yCoordMuxSelectedMap|or1~12 .lut_mask = "8880";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~12 .operation_mode = "normal";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~12 .output_mode = "comb_only";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~12 .register_cascade_mode = "off";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~12 .sum_lutc_input = "datac";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~12 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|yCoordMuxSelectedMap|or1~13 (
// Equation(s):
// \attack_round_1|yCoordMuxSelectedMap|or1~13_combout  = (\y_coord_code~combout [1] & (\y_coord_code~combout [2] & ((\y_coord_code~combout [0]) # (\x_coord_code~combout [0])))) # (!\y_coord_code~combout [1] & (!\x_coord_code~combout [0] & 
// ((\y_coord_code~combout [2]) # (\y_coord_code~combout [0]))))

	.clk(gnd),
	.dataa(\y_coord_code~combout [2]),
	.datab(\y_coord_code~combout [1]),
	.datac(\y_coord_code~combout [0]),
	.datad(\x_coord_code~combout [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|yCoordMuxSelectedMap|or1~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|yCoordMuxSelectedMap|or1~13 .lut_mask = "88b2";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~13 .operation_mode = "normal";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~13 .output_mode = "comb_only";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~13 .register_cascade_mode = "off";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~13 .sum_lutc_input = "datac";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~13 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|yCoordMuxSelectedMap|or1~14 (
// Equation(s):
// \attack_round_1|yCoordMuxSelectedMap|or1~14_combout  = (\attack_round_1|yCoordMuxSelectedMap|or1~12_combout ) # ((\attack_round_1|selected_map_register[14]|out~regout  & (\segment_display|mux8x1_1[4]|mux4x1_1|or1~2_combout  & 
// \attack_round_1|yCoordMuxSelectedMap|or1~13_combout )))

	.clk(gnd),
	.dataa(\attack_round_1|yCoordMuxSelectedMap|or1~12_combout ),
	.datab(\attack_round_1|selected_map_register[14]|out~regout ),
	.datac(\segment_display|mux8x1_1[4]|mux4x1_1|or1~2_combout ),
	.datad(\attack_round_1|yCoordMuxSelectedMap|or1~13_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|yCoordMuxSelectedMap|or1~14_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|yCoordMuxSelectedMap|or1~14 .lut_mask = "eaaa";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~14 .operation_mode = "normal";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~14 .output_mode = "comb_only";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~14 .register_cascade_mode = "off";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~14 .sum_lutc_input = "datac";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~14 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|yCoordMuxSelectedMap|or1~15 (
// Equation(s):
// \attack_round_1|yCoordMuxSelectedMap|or1~15_combout  = (\attack_round_1|yCoordMuxSelectedMap|or1~3_combout ) # ((\attack_round_1|yCoordMuxSelectedMap|or1~6_combout ) # ((\attack_round_1|yCoordMuxSelectedMap|or1~9_combout ) # 
// (\attack_round_1|yCoordMuxSelectedMap|or1~14_combout )))

	.clk(gnd),
	.dataa(\attack_round_1|yCoordMuxSelectedMap|or1~3_combout ),
	.datab(\attack_round_1|yCoordMuxSelectedMap|or1~6_combout ),
	.datac(\attack_round_1|yCoordMuxSelectedMap|or1~9_combout ),
	.datad(\attack_round_1|yCoordMuxSelectedMap|or1~14_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|yCoordMuxSelectedMap|or1~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|yCoordMuxSelectedMap|or1~15 .lut_mask = "fffe";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~15 .operation_mode = "normal";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~15 .output_mode = "comb_only";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~15 .register_cascade_mode = "off";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~15 .sum_lutc_input = "datac";
defparam \attack_round_1|yCoordMuxSelectedMap|or1~15 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|andGreen (
// Equation(s):
// \attack_round_1|andGreen~combout  = (\confirmAttack~combout ) # ((\game_state_decoder_1|and1~combout  & (\attack_round_1|yCoordMuxSelectedMap|or1~15_combout )))

	.clk(gnd),
	.dataa(\confirmAttack~combout ),
	.datab(\game_state_decoder_1|and1~combout ),
	.datac(\attack_round_1|yCoordMuxSelectedMap|or1~15_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|andGreen~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|andGreen .lut_mask = "eaea";
defparam \attack_round_1|andGreen .operation_mode = "normal";
defparam \attack_round_1|andGreen .output_mode = "comb_only";
defparam \attack_round_1|andGreen .register_cascade_mode = "off";
defparam \attack_round_1|andGreen .sum_lutc_input = "datac";
defparam \attack_round_1|andGreen .synch_mode = "off";
// synopsys translate_on

maxii_lcell \attack_round_1|andRed~3 (
// Equation(s):
// \attack_round_1|andRed~3_combout  = (\game_state_decoder_1|and1~combout  & (!\confirmAttack~combout  & (\attack_round_1|yCoordMuxSelectedMap|or1~15_combout )))

	.clk(gnd),
	.dataa(\game_state_decoder_1|and1~combout ),
	.datab(\confirmAttack~combout ),
	.datac(\attack_round_1|yCoordMuxSelectedMap|or1~15_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\attack_round_1|andRed~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \attack_round_1|andRed~3 .lut_mask = "2020";
defparam \attack_round_1|andRed~3 .operation_mode = "normal";
defparam \attack_round_1|andRed~3 .output_mode = "comb_only";
defparam \attack_round_1|andRed~3 .register_cascade_mode = "off";
defparam \attack_round_1|andRed~3 .sum_lutc_input = "datac";
defparam \attack_round_1|andRed~3 .synch_mode = "off";
// synopsys translate_on

maxii_io \matriz_colune_data[0]~I (
	.datain(\matriz_displayer|mux8x1_1[0]|or1~5_combout ),
	.oe(vcc),
	.combout(),
	.padio(matriz_colune_data[0]));
// synopsys translate_off
defparam \matriz_colune_data[0]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \matriz_colune_data[1]~I (
	.datain(\matriz_displayer|mux8x1_1[1]|or1~8_combout ),
	.oe(vcc),
	.combout(),
	.padio(matriz_colune_data[1]));
// synopsys translate_off
defparam \matriz_colune_data[1]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \matriz_colune_data[2]~I (
	.datain(\matriz_displayer|mux8x1_1[2]|or1~2_combout ),
	.oe(vcc),
	.combout(),
	.padio(matriz_colune_data[2]));
// synopsys translate_off
defparam \matriz_colune_data[2]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \matriz_colune_data[3]~I (
	.datain(\matriz_displayer|mux8x1_1[3]|or1~11_combout ),
	.oe(vcc),
	.combout(),
	.padio(matriz_colune_data[3]));
// synopsys translate_off
defparam \matriz_colune_data[3]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \matriz_colune_data[4]~I (
	.datain(\matriz_displayer|mux8x1_1[4]|or1~9_combout ),
	.oe(vcc),
	.combout(),
	.padio(matriz_colune_data[4]));
// synopsys translate_off
defparam \matriz_colune_data[4]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \matriz_colune_data[5]~I (
	.datain(\matriz_displayer|mux8x1_1[5]|or1~2_combout ),
	.oe(vcc),
	.combout(),
	.padio(matriz_colune_data[5]));
// synopsys translate_off
defparam \matriz_colune_data[5]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \matriz_colune_data[6]~I (
	.datain(\matriz_displayer|mux8x1_1[6]|or1~2_combout ),
	.oe(vcc),
	.combout(),
	.padio(matriz_colune_data[6]));
// synopsys translate_off
defparam \matriz_colune_data[6]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \display_colune_data[0]~I (
	.datain(\segment_display|mux8x1_1[0]|mux4x1_1|andEnable~4_combout ),
	.oe(vcc),
	.combout(),
	.padio(display_colune_data[0]));
// synopsys translate_off
defparam \display_colune_data[0]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \display_colune_data[1]~I (
	.datain(\segment_display|mux8x1_1[1]|mux4x1_1|andEnable~3_combout ),
	.oe(vcc),
	.combout(),
	.padio(display_colune_data[1]));
// synopsys translate_off
defparam \display_colune_data[1]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \display_colune_data[2]~I (
	.datain(\segment_display|mux8x1_1[2]|mux4x1_1|andEnable~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(display_colune_data[2]));
// synopsys translate_off
defparam \display_colune_data[2]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \display_colune_data[3]~I (
	.datain(\segment_display|mux8x1_1[3]|mux4x1_1|andEnable~3_combout ),
	.oe(vcc),
	.combout(),
	.padio(display_colune_data[3]));
// synopsys translate_off
defparam \display_colune_data[3]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \display_colune_data[4]~I (
	.datain(\segment_display|mux8x1_1[4]|mux4x1_1|andEnable~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(display_colune_data[4]));
// synopsys translate_off
defparam \display_colune_data[4]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \display_colune_data[5]~I (
	.datain(\segment_display|mux8x1_1[5]|mux4x1_1|andEnable~4_combout ),
	.oe(vcc),
	.combout(),
	.padio(display_colune_data[5]));
// synopsys translate_off
defparam \display_colune_data[5]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \display_colune_data[6]~I (
	.datain(\segment_display|mux8x1_1[6]|mux4x1_1|andEnable~5_combout ),
	.oe(vcc),
	.combout(),
	.padio(display_colune_data[6]));
// synopsys translate_off
defparam \display_colune_data[6]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \matriz_colune_activator[0]~I (
	.datain(\matriz_displayer|register8bitSIPO_1|d_flipflop_0|out~regout ),
	.oe(vcc),
	.combout(),
	.padio(matriz_colune_activator[0]));
// synopsys translate_off
defparam \matriz_colune_activator[0]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \matriz_colune_activator[1]~I (
	.datain(\matriz_displayer|register8bitSIPO_1|d_flipflop_1|out~regout ),
	.oe(vcc),
	.combout(),
	.padio(matriz_colune_activator[1]));
// synopsys translate_off
defparam \matriz_colune_activator[1]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \matriz_colune_activator[2]~I (
	.datain(\matriz_displayer|register8bitSIPO_1|d_flipflop_2|out~regout ),
	.oe(vcc),
	.combout(),
	.padio(matriz_colune_activator[2]));
// synopsys translate_off
defparam \matriz_colune_activator[2]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \matriz_colune_activator[3]~I (
	.datain(\matriz_displayer|register8bitSIPO_1|d_flipflop_3|out~regout ),
	.oe(vcc),
	.combout(),
	.padio(matriz_colune_activator[3]));
// synopsys translate_off
defparam \matriz_colune_activator[3]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \matriz_colune_activator[4]~I (
	.datain(\matriz_displayer|register8bitSIPO_1|d_flipflop_4|out~regout ),
	.oe(vcc),
	.combout(),
	.padio(matriz_colune_activator[4]));
// synopsys translate_off
defparam \matriz_colune_activator[4]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \display_colune_activator[0]~I (
	.datain(\segment_display|register8bitSIPO_1|d_flipflop_0|out~regout ),
	.oe(vcc),
	.combout(),
	.padio(display_colune_activator[0]));
// synopsys translate_off
defparam \display_colune_activator[0]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \display_colune_activator[1]~I (
	.datain(\segment_display|register8bitSIPO_1|d_flipflop_1|out~regout ),
	.oe(vcc),
	.combout(),
	.padio(display_colune_activator[1]));
// synopsys translate_off
defparam \display_colune_activator[1]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \display_colune_activator[2]~I (
	.datain(\segment_display|register8bitSIPO_1|d_flipflop_2|out~regout ),
	.oe(vcc),
	.combout(),
	.padio(display_colune_activator[2]));
// synopsys translate_off
defparam \display_colune_activator[2]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \display_colune_activator[3]~I (
	.datain(\segment_display|register8bitSIPO_1|d_flipflop_3|out~regout ),
	.oe(vcc),
	.combout(),
	.padio(display_colune_activator[3]));
// synopsys translate_off
defparam \display_colune_activator[3]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \ledRgb[0]~I (
	.datain(!\attack_round_1|andGreen~combout ),
	.oe(vcc),
	.combout(),
	.padio(ledRgb[0]));
// synopsys translate_off
defparam \ledRgb[0]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \ledRgb[1]~I (
	.datain(\attack_round_1|andRed~3_combout ),
	.oe(vcc),
	.combout(),
	.padio(ledRgb[1]));
// synopsys translate_off
defparam \ledRgb[1]~I .operation_mode = "output";
// synopsys translate_on

endmodule
