// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 22.1std.2 Build 922 07/20/2023 SC Lite Edition"

// DATE "11/28/2023 22:26:55"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim (Verilog) only
// 

`timescale 1 ps/ 1 ps

module batalha_naval (
	cpld_clk,
	linha_matriz,
	coluna_matriz,
	mod5counter_teste,
	final_clk_teste);
input 	cpld_clk;
output 	[6:0] linha_matriz;
output 	[4:0] coluna_matriz;
output 	mod5counter_teste;
output 	final_clk_teste;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \cpld_clk~combout ;
wire \freq_div_1|t_flipflop_0|out~regout ;
wire \freq_div_1|t_flipflop_1|out~regout ;
wire \freq_div_1|t_flipflop_2|out~regout ;
wire \freq_div_1|t_flipflop_3|out~regout ;
wire \freq_div_1|t_flipflop_4|out~regout ;
wire \counter3bit_1|t_flipflop_0|out~regout ;
wire \counter3bit_1|t_flipflop_1|out~regout ;
wire \counter3bit_1|t_flipflop_2|out~regout ;
wire \register7bit_1|d_flipflop_0|out~regout ;
wire \register7bit_1|d_flipflop_1|out~regout ;
wire \register7bit_1|d_flipflop_2|out~regout ;
wire \register7bit_1|d_flipflop_3|out~regout ;
wire \register7bit_1|d_flipflop_4|out~regout ;
wire \register7bit_1|d_flipflop_5|out~regout ;
wire \register7bit_1|d_flipflop_6|out~regout ;
wire \counter3bit_1|and1~0 ;


// Location: PIN_4,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \cpld_clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\cpld_clk~combout ),
	.padio(cpld_clk));
// synopsys translate_off
defparam \cpld_clk~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y4_N4
maxii_lcell \freq_div_1|t_flipflop_0|out (
// Equation(s):
// \freq_div_1|t_flipflop_0|out~regout  = DFFEAS((((!\freq_div_1|t_flipflop_0|out~regout ))), \cpld_clk~combout , VCC, , , , , , )

	.clk(\cpld_clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\freq_div_1|t_flipflop_0|out~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\freq_div_1|t_flipflop_0|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \freq_div_1|t_flipflop_0|out .lut_mask = "0f0f";
defparam \freq_div_1|t_flipflop_0|out .operation_mode = "normal";
defparam \freq_div_1|t_flipflop_0|out .output_mode = "reg_only";
defparam \freq_div_1|t_flipflop_0|out .register_cascade_mode = "off";
defparam \freq_div_1|t_flipflop_0|out .sum_lutc_input = "datac";
defparam \freq_div_1|t_flipflop_0|out .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y4_N2
maxii_lcell \freq_div_1|t_flipflop_1|out (
// Equation(s):
// \freq_div_1|t_flipflop_1|out~regout  = DFFEAS((((!\freq_div_1|t_flipflop_1|out~regout ))), \freq_div_1|t_flipflop_0|out~regout , VCC, , , , , , )

	.clk(\freq_div_1|t_flipflop_0|out~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\freq_div_1|t_flipflop_1|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\freq_div_1|t_flipflop_1|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \freq_div_1|t_flipflop_1|out .lut_mask = "00ff";
defparam \freq_div_1|t_flipflop_1|out .operation_mode = "normal";
defparam \freq_div_1|t_flipflop_1|out .output_mode = "reg_only";
defparam \freq_div_1|t_flipflop_1|out .register_cascade_mode = "off";
defparam \freq_div_1|t_flipflop_1|out .sum_lutc_input = "datac";
defparam \freq_div_1|t_flipflop_1|out .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N9
maxii_lcell \freq_div_1|t_flipflop_2|out (
// Equation(s):
// \freq_div_1|t_flipflop_2|out~regout  = DFFEAS((((!\freq_div_1|t_flipflop_2|out~regout ))), \freq_div_1|t_flipflop_1|out~regout , VCC, , , , , , )

	.clk(\freq_div_1|t_flipflop_1|out~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\freq_div_1|t_flipflop_2|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\freq_div_1|t_flipflop_2|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \freq_div_1|t_flipflop_2|out .lut_mask = "00ff";
defparam \freq_div_1|t_flipflop_2|out .operation_mode = "normal";
defparam \freq_div_1|t_flipflop_2|out .output_mode = "reg_only";
defparam \freq_div_1|t_flipflop_2|out .register_cascade_mode = "off";
defparam \freq_div_1|t_flipflop_2|out .sum_lutc_input = "datac";
defparam \freq_div_1|t_flipflop_2|out .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N8
maxii_lcell \freq_div_1|t_flipflop_3|out (
// Equation(s):
// \freq_div_1|t_flipflop_3|out~regout  = DFFEAS((((!\freq_div_1|t_flipflop_3|out~regout ))), \freq_div_1|t_flipflop_2|out~regout , VCC, , , , , , )

	.clk(\freq_div_1|t_flipflop_2|out~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\freq_div_1|t_flipflop_3|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\freq_div_1|t_flipflop_3|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \freq_div_1|t_flipflop_3|out .lut_mask = "00ff";
defparam \freq_div_1|t_flipflop_3|out .operation_mode = "normal";
defparam \freq_div_1|t_flipflop_3|out .output_mode = "reg_only";
defparam \freq_div_1|t_flipflop_3|out .register_cascade_mode = "off";
defparam \freq_div_1|t_flipflop_3|out .sum_lutc_input = "datac";
defparam \freq_div_1|t_flipflop_3|out .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N2
maxii_lcell \freq_div_1|t_flipflop_4|out (
// Equation(s):
// \freq_div_1|t_flipflop_4|out~regout  = DFFEAS((((!\freq_div_1|t_flipflop_4|out~regout ))), \freq_div_1|t_flipflop_3|out~regout , VCC, , , , , , )

	.clk(\freq_div_1|t_flipflop_3|out~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\freq_div_1|t_flipflop_4|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\freq_div_1|t_flipflop_4|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \freq_div_1|t_flipflop_4|out .lut_mask = "00ff";
defparam \freq_div_1|t_flipflop_4|out .operation_mode = "normal";
defparam \freq_div_1|t_flipflop_4|out .output_mode = "reg_only";
defparam \freq_div_1|t_flipflop_4|out .register_cascade_mode = "off";
defparam \freq_div_1|t_flipflop_4|out .sum_lutc_input = "datac";
defparam \freq_div_1|t_flipflop_4|out .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N4
maxii_lcell \counter3bit_1|t_flipflop_0|out (
// Equation(s):
// \counter3bit_1|t_flipflop_0|out~regout  = DFFEAS((((!\counter3bit_1|t_flipflop_0|out~regout ))), GLOBAL(\freq_div_1|t_flipflop_4|out~regout ), VCC, , , , , , )

	.clk(\freq_div_1|t_flipflop_4|out~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\counter3bit_1|t_flipflop_0|out~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\counter3bit_1|t_flipflop_0|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter3bit_1|t_flipflop_0|out .lut_mask = "0f0f";
defparam \counter3bit_1|t_flipflop_0|out .operation_mode = "normal";
defparam \counter3bit_1|t_flipflop_0|out .output_mode = "reg_only";
defparam \counter3bit_1|t_flipflop_0|out .register_cascade_mode = "off";
defparam \counter3bit_1|t_flipflop_0|out .sum_lutc_input = "datac";
defparam \counter3bit_1|t_flipflop_0|out .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N9
maxii_lcell \counter3bit_1|t_flipflop_1|out (
// Equation(s):
// \counter3bit_1|t_flipflop_1|out~regout  = DFFEAS((((!\counter3bit_1|t_flipflop_1|out~regout ))), \counter3bit_1|t_flipflop_0|out~regout , VCC, , , , , , )

	.clk(\counter3bit_1|t_flipflop_0|out~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\counter3bit_1|t_flipflop_1|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\counter3bit_1|t_flipflop_1|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter3bit_1|t_flipflop_1|out .lut_mask = "00ff";
defparam \counter3bit_1|t_flipflop_1|out .operation_mode = "normal";
defparam \counter3bit_1|t_flipflop_1|out .output_mode = "reg_only";
defparam \counter3bit_1|t_flipflop_1|out .register_cascade_mode = "off";
defparam \counter3bit_1|t_flipflop_1|out .sum_lutc_input = "datac";
defparam \counter3bit_1|t_flipflop_1|out .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N8
maxii_lcell \counter3bit_1|t_flipflop_2|out (
// Equation(s):
// \counter3bit_1|t_flipflop_2|out~regout  = DFFEAS((((!\counter3bit_1|t_flipflop_2|out~regout ))), \counter3bit_1|t_flipflop_1|out~regout , VCC, , , , , , )

	.clk(\counter3bit_1|t_flipflop_1|out~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\counter3bit_1|t_flipflop_2|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\counter3bit_1|t_flipflop_2|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter3bit_1|t_flipflop_2|out .lut_mask = "00ff";
defparam \counter3bit_1|t_flipflop_2|out .operation_mode = "normal";
defparam \counter3bit_1|t_flipflop_2|out .output_mode = "reg_only";
defparam \counter3bit_1|t_flipflop_2|out .register_cascade_mode = "off";
defparam \counter3bit_1|t_flipflop_2|out .sum_lutc_input = "datac";
defparam \counter3bit_1|t_flipflop_2|out .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N2
maxii_lcell \register7bit_1|d_flipflop_0|out (
// Equation(s):
// \counter3bit_1|and1~0  = (\counter3bit_1|t_flipflop_1|out~regout  & (\counter3bit_1|t_flipflop_0|out~regout  & ((\counter3bit_1|t_flipflop_2|out~regout ))))
// \register7bit_1|d_flipflop_0|out~regout  = DFFEAS(\counter3bit_1|and1~0 , !GLOBAL(\freq_div_1|t_flipflop_4|out~regout ), VCC, , , , , , )

	.clk(!\freq_div_1|t_flipflop_4|out~regout ),
	.dataa(\counter3bit_1|t_flipflop_1|out~regout ),
	.datab(\counter3bit_1|t_flipflop_0|out~regout ),
	.datac(vcc),
	.datad(\counter3bit_1|t_flipflop_2|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counter3bit_1|and1~0 ),
	.regout(\register7bit_1|d_flipflop_0|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \register7bit_1|d_flipflop_0|out .lut_mask = "8800";
defparam \register7bit_1|d_flipflop_0|out .operation_mode = "normal";
defparam \register7bit_1|d_flipflop_0|out .output_mode = "reg_and_comb";
defparam \register7bit_1|d_flipflop_0|out .register_cascade_mode = "off";
defparam \register7bit_1|d_flipflop_0|out .sum_lutc_input = "datac";
defparam \register7bit_1|d_flipflop_0|out .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N0
maxii_lcell \register7bit_1|d_flipflop_1|out (
// Equation(s):
// \register7bit_1|d_flipflop_1|out~regout  = DFFEAS((((\register7bit_1|d_flipflop_0|out~regout ))), !GLOBAL(\freq_div_1|t_flipflop_4|out~regout ), VCC, , , , , , )

	.clk(!\freq_div_1|t_flipflop_4|out~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\register7bit_1|d_flipflop_0|out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\register7bit_1|d_flipflop_1|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \register7bit_1|d_flipflop_1|out .lut_mask = "ff00";
defparam \register7bit_1|d_flipflop_1|out .operation_mode = "normal";
defparam \register7bit_1|d_flipflop_1|out .output_mode = "reg_only";
defparam \register7bit_1|d_flipflop_1|out .register_cascade_mode = "off";
defparam \register7bit_1|d_flipflop_1|out .sum_lutc_input = "datac";
defparam \register7bit_1|d_flipflop_1|out .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N6
maxii_lcell \register7bit_1|d_flipflop_2|out (
// Equation(s):
// \register7bit_1|d_flipflop_2|out~regout  = DFFEAS(GND, !GLOBAL(\freq_div_1|t_flipflop_4|out~regout ), VCC, , , \register7bit_1|d_flipflop_1|out~regout , , , VCC)

	.clk(!\freq_div_1|t_flipflop_4|out~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\register7bit_1|d_flipflop_1|out~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\register7bit_1|d_flipflop_2|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \register7bit_1|d_flipflop_2|out .lut_mask = "0000";
defparam \register7bit_1|d_flipflop_2|out .operation_mode = "normal";
defparam \register7bit_1|d_flipflop_2|out .output_mode = "reg_only";
defparam \register7bit_1|d_flipflop_2|out .register_cascade_mode = "off";
defparam \register7bit_1|d_flipflop_2|out .sum_lutc_input = "datac";
defparam \register7bit_1|d_flipflop_2|out .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y3_N7
maxii_lcell \register7bit_1|d_flipflop_3|out (
// Equation(s):
// \register7bit_1|d_flipflop_3|out~regout  = DFFEAS(GND, !GLOBAL(\freq_div_1|t_flipflop_4|out~regout ), VCC, , , \register7bit_1|d_flipflop_2|out~regout , , , VCC)

	.clk(!\freq_div_1|t_flipflop_4|out~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\register7bit_1|d_flipflop_2|out~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\register7bit_1|d_flipflop_3|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \register7bit_1|d_flipflop_3|out .lut_mask = "0000";
defparam \register7bit_1|d_flipflop_3|out .operation_mode = "normal";
defparam \register7bit_1|d_flipflop_3|out .output_mode = "reg_only";
defparam \register7bit_1|d_flipflop_3|out .register_cascade_mode = "off";
defparam \register7bit_1|d_flipflop_3|out .sum_lutc_input = "datac";
defparam \register7bit_1|d_flipflop_3|out .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y3_N4
maxii_lcell \register7bit_1|d_flipflop_4|out (
// Equation(s):
// \register7bit_1|d_flipflop_4|out~regout  = DFFEAS(GND, !GLOBAL(\freq_div_1|t_flipflop_4|out~regout ), VCC, , , \register7bit_1|d_flipflop_3|out~regout , , , VCC)

	.clk(!\freq_div_1|t_flipflop_4|out~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\register7bit_1|d_flipflop_3|out~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\register7bit_1|d_flipflop_4|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \register7bit_1|d_flipflop_4|out .lut_mask = "0000";
defparam \register7bit_1|d_flipflop_4|out .operation_mode = "normal";
defparam \register7bit_1|d_flipflop_4|out .output_mode = "reg_only";
defparam \register7bit_1|d_flipflop_4|out .register_cascade_mode = "off";
defparam \register7bit_1|d_flipflop_4|out .sum_lutc_input = "datac";
defparam \register7bit_1|d_flipflop_4|out .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y3_N5
maxii_lcell \register7bit_1|d_flipflop_5|out (
// Equation(s):
// \register7bit_1|d_flipflop_5|out~regout  = DFFEAS(GND, !GLOBAL(\freq_div_1|t_flipflop_4|out~regout ), VCC, , , \register7bit_1|d_flipflop_4|out~regout , , , VCC)

	.clk(!\freq_div_1|t_flipflop_4|out~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\register7bit_1|d_flipflop_4|out~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\register7bit_1|d_flipflop_5|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \register7bit_1|d_flipflop_5|out .lut_mask = "0000";
defparam \register7bit_1|d_flipflop_5|out .operation_mode = "normal";
defparam \register7bit_1|d_flipflop_5|out .output_mode = "reg_only";
defparam \register7bit_1|d_flipflop_5|out .register_cascade_mode = "off";
defparam \register7bit_1|d_flipflop_5|out .sum_lutc_input = "datac";
defparam \register7bit_1|d_flipflop_5|out .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y3_N9
maxii_lcell \register7bit_1|d_flipflop_6|out (
// Equation(s):
// \register7bit_1|d_flipflop_6|out~regout  = DFFEAS(GND, !GLOBAL(\freq_div_1|t_flipflop_4|out~regout ), VCC, , , \register7bit_1|d_flipflop_5|out~regout , , , VCC)

	.clk(!\freq_div_1|t_flipflop_4|out~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\register7bit_1|d_flipflop_5|out~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\register7bit_1|d_flipflop_6|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \register7bit_1|d_flipflop_6|out .lut_mask = "0000";
defparam \register7bit_1|d_flipflop_6|out .operation_mode = "normal";
defparam \register7bit_1|d_flipflop_6|out .output_mode = "reg_only";
defparam \register7bit_1|d_flipflop_6|out .register_cascade_mode = "off";
defparam \register7bit_1|d_flipflop_6|out .sum_lutc_input = "datac";
defparam \register7bit_1|d_flipflop_6|out .synch_mode = "on";
// synopsys translate_on

// Location: PIN_48,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \linha_matriz[0]~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(linha_matriz[0]));
// synopsys translate_off
defparam \linha_matriz[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_21,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \linha_matriz[1]~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(linha_matriz[1]));
// synopsys translate_off
defparam \linha_matriz[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_71,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \linha_matriz[2]~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(linha_matriz[2]));
// synopsys translate_off
defparam \linha_matriz[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_78,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \linha_matriz[3]~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(linha_matriz[3]));
// synopsys translate_off
defparam \linha_matriz[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_91,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \linha_matriz[4]~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(linha_matriz[4]));
// synopsys translate_off
defparam \linha_matriz[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_85,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \linha_matriz[5]~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(linha_matriz[5]));
// synopsys translate_off
defparam \linha_matriz[5]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_27,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \linha_matriz[6]~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(linha_matriz[6]));
// synopsys translate_off
defparam \linha_matriz[6]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_66,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \coluna_matriz[0]~I (
	.datain(\register7bit_1|d_flipflop_6|out~regout ),
	.oe(vcc),
	.combout(),
	.padio(coluna_matriz[0]));
// synopsys translate_off
defparam \coluna_matriz[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_67,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \coluna_matriz[1]~I (
	.datain(\register7bit_1|d_flipflop_5|out~regout ),
	.oe(vcc),
	.combout(),
	.padio(coluna_matriz[1]));
// synopsys translate_off
defparam \coluna_matriz[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_68,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \coluna_matriz[2]~I (
	.datain(\register7bit_1|d_flipflop_4|out~regout ),
	.oe(vcc),
	.combout(),
	.padio(coluna_matriz[2]));
// synopsys translate_off
defparam \coluna_matriz[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_64,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \coluna_matriz[3]~I (
	.datain(\register7bit_1|d_flipflop_3|out~regout ),
	.oe(vcc),
	.combout(),
	.padio(coluna_matriz[3]));
// synopsys translate_off
defparam \coluna_matriz[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_72,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \coluna_matriz[4]~I (
	.datain(\register7bit_1|d_flipflop_2|out~regout ),
	.oe(vcc),
	.combout(),
	.padio(coluna_matriz[4]));
// synopsys translate_off
defparam \coluna_matriz[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_69,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \mod5counter_teste~I (
	.datain(\counter3bit_1|and1~0 ),
	.oe(vcc),
	.combout(),
	.padio(mod5counter_teste));
// synopsys translate_off
defparam \mod5counter_teste~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \final_clk_teste~I (
	.datain(\freq_div_1|t_flipflop_4|out~regout ),
	.oe(vcc),
	.combout(),
	.padio(final_clk_teste));
// synopsys translate_off
defparam \final_clk_teste~I .operation_mode = "output";
// synopsys translate_on

endmodule
