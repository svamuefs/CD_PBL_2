|batalha_naval
cpld_clk => cpld_clk.IN1
matriz_colune_data[0] <= displayer:matriz_displayer.colune_data
matriz_colune_data[1] <= displayer:matriz_displayer.colune_data
matriz_colune_data[2] <= displayer:matriz_displayer.colune_data
matriz_colune_data[3] <= displayer:matriz_displayer.colune_data
matriz_colune_data[4] <= displayer:matriz_displayer.colune_data
matriz_colune_data[5] <= displayer:matriz_displayer.colune_data
matriz_colune_data[6] <= displayer:matriz_displayer.colune_data
display_colune_data[0] <= displayer:segment_display.colune_data
display_colune_data[1] <= displayer:segment_display.colune_data
display_colune_data[2] <= displayer:segment_display.colune_data
display_colune_data[3] <= displayer:segment_display.colune_data
display_colune_data[4] <= displayer:segment_display.colune_data
display_colune_data[5] <= displayer:segment_display.colune_data
display_colune_data[6] <= displayer:segment_display.colune_data
matriz_colune_activator[0] <= displayer:matriz_displayer.colune_activator
matriz_colune_activator[1] <= displayer:matriz_displayer.colune_activator
matriz_colune_activator[2] <= displayer:matriz_displayer.colune_activator
matriz_colune_activator[3] <= displayer:matriz_displayer.colune_activator
matriz_colune_activator[4] <= displayer:matriz_displayer.colune_activator
display_colune_activator[0] <= displayer:segment_display.colune_activator
display_colune_activator[1] <= displayer:segment_display.colune_activator
display_colune_activator[2] <= displayer:segment_display.colune_activator
display_colune_activator[3] <= displayer:segment_display.colune_activator
counter_teste <= <GND>
final_clk_teste <= <GND>
teste[0] <= <GND>
teste[1] <= <GND>
teste[2] <= <GND>
teste[3] <= <GND>
teste[4] <= <GND>
teste[5] <= <GND>
teste[6] <= <GND>
teste[7] <= <GND>
teste[8] <= <GND>
teste[9] <= <GND>
teste[10] <= <GND>
mapteste[0] <= <GND>
mapteste[1] <= <GND>
mapteste[2] <= <GND>
mapteste[3] <= <GND>
mapteste[4] <= <GND>
mapteste[5] <= <GND>
mapteste[6] <= <GND>
mapteste[7] <= <GND>
mapteste[8] <= <GND>
mapteste[9] <= <GND>
mapteste[10] <= <GND>
mapteste[11] <= <GND>
mapteste[12] <= <GND>
mapteste[13] <= <GND>
mapteste[14] <= <GND>
mapteste[15] <= <GND>
mapteste[16] <= <GND>
mapteste[17] <= <GND>
mapteste[18] <= <GND>
mapteste[19] <= <GND>
mapteste[20] <= <GND>
mapteste[21] <= <GND>
mapteste[22] <= <GND>
mapteste[23] <= <GND>
mapteste[24] <= <GND>
mapteste[25] <= <GND>
mapteste[26] <= <GND>
mapteste[27] <= <GND>
mapteste[28] <= <GND>
mapteste[29] <= <GND>
mapteste[30] <= <GND>
mapteste[31] <= <GND>
mapteste[32] <= <GND>
mapteste[33] <= <GND>
mapteste[34] <= <GND>


|batalha_naval|freq_div:freq_div_1
clk => clk.IN1
final_clk <= t_flipflop:t_flipflop_2.out


|batalha_naval|freq_div:freq_div_1|t_flipflop:t_flipflop_0
t => out~reg0.ENA
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|freq_div:freq_div_1|t_flipflop:t_flipflop_1
t => out~reg0.ENA
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|freq_div:freq_div_1|t_flipflop:t_flipflop_2
t => out~reg0.ENA
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:matriz_displayer
clk => clk.IN2
image[0] => image[0].IN1
image[1] => image[1].IN1
image[2] => image[2].IN1
image[3] => image[3].IN1
image[4] => image[4].IN1
image[5] => image[5].IN1
image[6] => image[6].IN1
image[7] => image[7].IN1
image[8] => image[8].IN1
image[9] => image[9].IN1
image[10] => image[10].IN1
image[11] => image[11].IN1
image[12] => image[12].IN1
image[13] => image[13].IN1
image[14] => image[14].IN1
image[15] => image[15].IN1
image[16] => image[16].IN1
image[17] => image[17].IN1
image[18] => image[18].IN1
image[19] => image[19].IN1
image[20] => image[20].IN1
image[21] => image[21].IN1
image[22] => image[22].IN1
image[23] => image[23].IN1
image[24] => image[24].IN1
image[25] => image[25].IN1
image[26] => image[26].IN1
image[27] => image[27].IN1
image[28] => image[28].IN1
image[29] => image[29].IN1
image[30] => image[30].IN1
image[31] => image[31].IN1
image[32] => image[32].IN1
image[33] => image[33].IN1
image[34] => image[34].IN1
colune_data[0] <= mux8x1:mux8x1_1.out
colune_data[1] <= mux8x1:mux8x1_1.out
colune_data[2] <= mux8x1:mux8x1_1.out
colune_data[3] <= mux8x1:mux8x1_1.out
colune_data[4] <= mux8x1:mux8x1_1.out
colune_data[5] <= mux8x1:mux8x1_1.out
colune_data[6] <= mux8x1:mux8x1_1.out
colune_activator[0] <= register8bit:register8bit_1.out
colune_activator[1] <= register8bit:register8bit_1.out
colune_activator[2] <= register8bit:register8bit_1.out
colune_activator[3] <= register8bit:register8bit_1.out
colune_activator[4] <= register8bit:register8bit_1.out


|batalha_naval|displayer:matriz_displayer|counter3bit:counter3bit_1
clk => clk.IN1
reset => reset.IN3
down => xor1.IN0
down => xor2.IN0
down => xor3.IN1
down => andLoopStart_2.IN3
down => andLoopStart_1.IN1
mod_value[0] => xorMod1.IN1
mod_value[1] => xorMod2.IN1
mod_value[2] => xorMod3.IN1
loopStart <= orLoopStart_1.DB_MAX_OUTPUT_PORT_TYPE
loopEnd <= andMod1.DB_MAX_OUTPUT_PORT_TYPE
out[0] <= andOut1.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= andOut2.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= andOut3.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:matriz_displayer|counter3bit:counter3bit_1|t_flipflop:t_flipflop_0
t => out~reg0.ENA
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:matriz_displayer|counter3bit:counter3bit_1|t_flipflop:t_flipflop_1
t => out~reg0.ENA
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:matriz_displayer|counter3bit:counter3bit_1|t_flipflop:t_flipflop_2
t => out~reg0.ENA
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:matriz_displayer|register8bit:register8bit_1
in => in.IN1
clk => clk.IN8
reset => reset.IN8
out[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:matriz_displayer|register8bit:register8bit_1|d_flipflop:d_flipflop_0
d => out~reg0.DATAIN
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:matriz_displayer|register8bit:register8bit_1|d_flipflop:d_flipflop_1
d => out~reg0.DATAIN
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:matriz_displayer|register8bit:register8bit_1|d_flipflop:d_flipflop_2
d => out~reg0.DATAIN
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:matriz_displayer|register8bit:register8bit_1|d_flipflop:d_flipflop_3
d => out~reg0.DATAIN
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:matriz_displayer|register8bit:register8bit_1|d_flipflop:d_flipflop_4
d => out~reg0.DATAIN
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:matriz_displayer|register8bit:register8bit_1|d_flipflop:d_flipflop_5
d => out~reg0.DATAIN
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:matriz_displayer|register8bit:register8bit_1|d_flipflop:d_flipflop_6
d => out~reg0.DATAIN
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:matriz_displayer|register8bit:register8bit_1|d_flipflop:d_flipflop_7
d => out~reg0.DATAIN
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:matriz_displayer|mux8x1:mux8x1_1
in_a[0] => in_a[0].IN1
in_a[1] => in_a[1].IN1
in_a[2] => in_a[2].IN1
in_a[3] => in_a[3].IN1
in_a[4] => in_a[4].IN1
in_a[5] => in_a[5].IN1
in_a[6] => in_a[6].IN1
in_b[0] => in_b[0].IN1
in_b[1] => in_b[1].IN1
in_b[2] => in_b[2].IN1
in_b[3] => in_b[3].IN1
in_b[4] => in_b[4].IN1
in_b[5] => in_b[5].IN1
in_b[6] => in_b[6].IN1
in_c[0] => in_c[0].IN1
in_c[1] => in_c[1].IN1
in_c[2] => in_c[2].IN1
in_c[3] => in_c[3].IN1
in_c[4] => in_c[4].IN1
in_c[5] => in_c[5].IN1
in_c[6] => in_c[6].IN1
in_d[0] => in_d[0].IN1
in_d[1] => in_d[1].IN1
in_d[2] => in_d[2].IN1
in_d[3] => in_d[3].IN1
in_d[4] => in_d[4].IN1
in_d[5] => in_d[5].IN1
in_d[6] => in_d[6].IN1
in_e[0] => in_e[0].IN1
in_e[1] => in_e[1].IN1
in_e[2] => in_e[2].IN1
in_e[3] => in_e[3].IN1
in_e[4] => in_e[4].IN1
in_e[5] => in_e[5].IN1
in_e[6] => in_e[6].IN1
in_f[0] => in_f[0].IN1
in_f[1] => in_f[1].IN1
in_f[2] => in_f[2].IN1
in_f[3] => in_f[3].IN1
in_f[4] => in_f[4].IN1
in_f[5] => in_f[5].IN1
in_f[6] => in_f[6].IN1
in_g[0] => in_g[0].IN1
in_g[1] => in_g[1].IN1
in_g[2] => in_g[2].IN1
in_g[3] => in_g[3].IN1
in_g[4] => in_g[4].IN1
in_g[5] => in_g[5].IN1
in_g[6] => in_g[6].IN1
in_h[0] => in_h[0].IN1
in_h[1] => in_h[1].IN1
in_h[2] => in_h[2].IN1
in_h[3] => in_h[3].IN1
in_h[4] => in_h[4].IN1
in_h[5] => in_h[5].IN1
in_h[6] => in_h[6].IN1
select[0] => select[0].IN2
select[1] => select[1].IN2
select[2] => and2[0].IN1
select[2] => and2[1].IN1
select[2] => and2[2].IN1
select[2] => and2[3].IN1
select[2] => and2[4].IN1
select[2] => and2[5].IN1
select[2] => and2[6].IN1
select[2] => and1[0].IN1
select[2] => and1[1].IN1
select[2] => and1[2].IN1
select[2] => and1[3].IN1
select[2] => and1[4].IN1
select[2] => and1[5].IN1
select[2] => and1[6].IN1
out[0] <= or1[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= or1[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= or1[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= or1[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= or1[4].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= or1[5].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= or1[6].DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:matriz_displayer|mux8x1:mux8x1_1|mux4x1:mux4x1_1
in_a[0] => and1[0].IN0
in_a[1] => and1[1].IN0
in_a[2] => and1[2].IN0
in_a[3] => and1[3].IN0
in_a[4] => and1[4].IN0
in_a[5] => and1[5].IN0
in_a[6] => and1[6].IN0
in_b[0] => and2[0].IN0
in_b[1] => and2[1].IN0
in_b[2] => and2[2].IN0
in_b[3] => and2[3].IN0
in_b[4] => and2[4].IN0
in_b[5] => and2[5].IN0
in_b[6] => and2[6].IN0
in_c[0] => and3[0].IN0
in_c[1] => and3[1].IN0
in_c[2] => and3[2].IN0
in_c[3] => and3[3].IN0
in_c[4] => and3[4].IN0
in_c[5] => and3[5].IN0
in_c[6] => and3[6].IN0
in_d[0] => and4[0].IN0
in_d[1] => and4[1].IN0
in_d[2] => and4[2].IN0
in_d[3] => and4[3].IN0
in_d[4] => and4[4].IN0
in_d[5] => and4[5].IN0
in_d[6] => and4[6].IN0
select[0] => and2[0].IN1
select[0] => and2[1].IN1
select[0] => and2[2].IN1
select[0] => and2[3].IN1
select[0] => and2[4].IN1
select[0] => and2[5].IN1
select[0] => and2[6].IN1
select[0] => and4[0].IN1
select[0] => and4[1].IN1
select[0] => and4[2].IN1
select[0] => and4[3].IN1
select[0] => and4[4].IN1
select[0] => and4[5].IN1
select[0] => and4[6].IN1
select[0] => and1[0].IN1
select[0] => and1[1].IN1
select[0] => and1[2].IN1
select[0] => and1[3].IN1
select[0] => and1[4].IN1
select[0] => and1[5].IN1
select[0] => and1[6].IN1
select[0] => and3[0].IN1
select[0] => and3[1].IN1
select[0] => and3[2].IN1
select[0] => and3[3].IN1
select[0] => and3[4].IN1
select[0] => and3[5].IN1
select[0] => and3[6].IN1
select[1] => and3[0].IN2
select[1] => and3[1].IN2
select[1] => and3[2].IN2
select[1] => and3[3].IN2
select[1] => and3[4].IN2
select[1] => and3[5].IN2
select[1] => and3[6].IN2
select[1] => and4[0].IN2
select[1] => and4[1].IN2
select[1] => and4[2].IN2
select[1] => and4[3].IN2
select[1] => and4[4].IN2
select[1] => and4[5].IN2
select[1] => and4[6].IN2
select[1] => and1[0].IN2
select[1] => and1[1].IN2
select[1] => and1[2].IN2
select[1] => and1[3].IN2
select[1] => and1[4].IN2
select[1] => and1[5].IN2
select[1] => and1[6].IN2
select[1] => and2[0].IN2
select[1] => and2[1].IN2
select[1] => and2[2].IN2
select[1] => and2[3].IN2
select[1] => and2[4].IN2
select[1] => and2[5].IN2
select[1] => and2[6].IN2
out[0] <= or1[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= or1[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= or1[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= or1[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= or1[4].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= or1[5].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= or1[6].DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:matriz_displayer|mux8x1:mux8x1_1|mux4x1:mux4x1_2
in_a[0] => and1[0].IN0
in_a[1] => and1[1].IN0
in_a[2] => and1[2].IN0
in_a[3] => and1[3].IN0
in_a[4] => and1[4].IN0
in_a[5] => and1[5].IN0
in_a[6] => and1[6].IN0
in_b[0] => and2[0].IN0
in_b[1] => and2[1].IN0
in_b[2] => and2[2].IN0
in_b[3] => and2[3].IN0
in_b[4] => and2[4].IN0
in_b[5] => and2[5].IN0
in_b[6] => and2[6].IN0
in_c[0] => and3[0].IN0
in_c[1] => and3[1].IN0
in_c[2] => and3[2].IN0
in_c[3] => and3[3].IN0
in_c[4] => and3[4].IN0
in_c[5] => and3[5].IN0
in_c[6] => and3[6].IN0
in_d[0] => and4[0].IN0
in_d[1] => and4[1].IN0
in_d[2] => and4[2].IN0
in_d[3] => and4[3].IN0
in_d[4] => and4[4].IN0
in_d[5] => and4[5].IN0
in_d[6] => and4[6].IN0
select[0] => and2[0].IN1
select[0] => and2[1].IN1
select[0] => and2[2].IN1
select[0] => and2[3].IN1
select[0] => and2[4].IN1
select[0] => and2[5].IN1
select[0] => and2[6].IN1
select[0] => and4[0].IN1
select[0] => and4[1].IN1
select[0] => and4[2].IN1
select[0] => and4[3].IN1
select[0] => and4[4].IN1
select[0] => and4[5].IN1
select[0] => and4[6].IN1
select[0] => and1[0].IN1
select[0] => and1[1].IN1
select[0] => and1[2].IN1
select[0] => and1[3].IN1
select[0] => and1[4].IN1
select[0] => and1[5].IN1
select[0] => and1[6].IN1
select[0] => and3[0].IN1
select[0] => and3[1].IN1
select[0] => and3[2].IN1
select[0] => and3[3].IN1
select[0] => and3[4].IN1
select[0] => and3[5].IN1
select[0] => and3[6].IN1
select[1] => and3[0].IN2
select[1] => and3[1].IN2
select[1] => and3[2].IN2
select[1] => and3[3].IN2
select[1] => and3[4].IN2
select[1] => and3[5].IN2
select[1] => and3[6].IN2
select[1] => and4[0].IN2
select[1] => and4[1].IN2
select[1] => and4[2].IN2
select[1] => and4[3].IN2
select[1] => and4[4].IN2
select[1] => and4[5].IN2
select[1] => and4[6].IN2
select[1] => and1[0].IN2
select[1] => and1[1].IN2
select[1] => and1[2].IN2
select[1] => and1[3].IN2
select[1] => and1[4].IN2
select[1] => and1[5].IN2
select[1] => and1[6].IN2
select[1] => and2[0].IN2
select[1] => and2[1].IN2
select[1] => and2[2].IN2
select[1] => and2[3].IN2
select[1] => and2[4].IN2
select[1] => and2[5].IN2
select[1] => and2[6].IN2
out[0] <= or1[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= or1[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= or1[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= or1[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= or1[4].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= or1[5].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= or1[6].DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:segment_display
clk => clk.IN2
image[0] => image[0].IN1
image[1] => image[1].IN1
image[2] => image[2].IN1
image[3] => image[3].IN1
image[4] => image[4].IN1
image[5] => image[5].IN1
image[6] => image[6].IN1
image[7] => image[7].IN1
image[8] => image[8].IN1
image[9] => image[9].IN1
image[10] => image[10].IN1
image[11] => image[11].IN1
image[12] => image[12].IN1
image[13] => image[13].IN1
image[14] => image[14].IN1
image[15] => image[15].IN1
image[16] => image[16].IN1
image[17] => image[17].IN1
image[18] => image[18].IN1
image[19] => image[19].IN1
image[20] => image[20].IN1
image[21] => image[21].IN1
image[22] => image[22].IN1
image[23] => image[23].IN1
image[24] => image[24].IN1
image[25] => image[25].IN1
image[26] => image[26].IN1
image[27] => image[27].IN1
image[28] => image[28].IN1
image[29] => image[29].IN1
image[30] => image[30].IN1
image[31] => image[31].IN1
image[32] => image[32].IN1
image[33] => image[33].IN1
image[34] => image[34].IN1
colune_data[0] <= mux8x1:mux8x1_1.out
colune_data[1] <= mux8x1:mux8x1_1.out
colune_data[2] <= mux8x1:mux8x1_1.out
colune_data[3] <= mux8x1:mux8x1_1.out
colune_data[4] <= mux8x1:mux8x1_1.out
colune_data[5] <= mux8x1:mux8x1_1.out
colune_data[6] <= mux8x1:mux8x1_1.out
colune_activator[0] <= register8bit:register8bit_1.out
colune_activator[1] <= register8bit:register8bit_1.out
colune_activator[2] <= register8bit:register8bit_1.out
colune_activator[3] <= register8bit:register8bit_1.out
colune_activator[4] <= register8bit:register8bit_1.out


|batalha_naval|displayer:segment_display|counter3bit:counter3bit_1
clk => clk.IN1
reset => reset.IN3
down => xor1.IN0
down => xor2.IN0
down => xor3.IN1
down => andLoopStart_2.IN3
down => andLoopStart_1.IN1
mod_value[0] => xorMod1.IN1
mod_value[1] => xorMod2.IN1
mod_value[2] => xorMod3.IN1
loopStart <= orLoopStart_1.DB_MAX_OUTPUT_PORT_TYPE
loopEnd <= andMod1.DB_MAX_OUTPUT_PORT_TYPE
out[0] <= andOut1.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= andOut2.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= andOut3.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:segment_display|counter3bit:counter3bit_1|t_flipflop:t_flipflop_0
t => out~reg0.ENA
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:segment_display|counter3bit:counter3bit_1|t_flipflop:t_flipflop_1
t => out~reg0.ENA
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:segment_display|counter3bit:counter3bit_1|t_flipflop:t_flipflop_2
t => out~reg0.ENA
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:segment_display|register8bit:register8bit_1
in => in.IN1
clk => clk.IN8
reset => reset.IN8
out[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:segment_display|register8bit:register8bit_1|d_flipflop:d_flipflop_0
d => out~reg0.DATAIN
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:segment_display|register8bit:register8bit_1|d_flipflop:d_flipflop_1
d => out~reg0.DATAIN
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:segment_display|register8bit:register8bit_1|d_flipflop:d_flipflop_2
d => out~reg0.DATAIN
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:segment_display|register8bit:register8bit_1|d_flipflop:d_flipflop_3
d => out~reg0.DATAIN
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:segment_display|register8bit:register8bit_1|d_flipflop:d_flipflop_4
d => out~reg0.DATAIN
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:segment_display|register8bit:register8bit_1|d_flipflop:d_flipflop_5
d => out~reg0.DATAIN
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:segment_display|register8bit:register8bit_1|d_flipflop:d_flipflop_6
d => out~reg0.DATAIN
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:segment_display|register8bit:register8bit_1|d_flipflop:d_flipflop_7
d => out~reg0.DATAIN
clk => out~reg0.CLK
reset => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:segment_display|mux8x1:mux8x1_1
in_a[0] => in_a[0].IN1
in_a[1] => in_a[1].IN1
in_a[2] => in_a[2].IN1
in_a[3] => in_a[3].IN1
in_a[4] => in_a[4].IN1
in_a[5] => in_a[5].IN1
in_a[6] => in_a[6].IN1
in_b[0] => in_b[0].IN1
in_b[1] => in_b[1].IN1
in_b[2] => in_b[2].IN1
in_b[3] => in_b[3].IN1
in_b[4] => in_b[4].IN1
in_b[5] => in_b[5].IN1
in_b[6] => in_b[6].IN1
in_c[0] => in_c[0].IN1
in_c[1] => in_c[1].IN1
in_c[2] => in_c[2].IN1
in_c[3] => in_c[3].IN1
in_c[4] => in_c[4].IN1
in_c[5] => in_c[5].IN1
in_c[6] => in_c[6].IN1
in_d[0] => in_d[0].IN1
in_d[1] => in_d[1].IN1
in_d[2] => in_d[2].IN1
in_d[3] => in_d[3].IN1
in_d[4] => in_d[4].IN1
in_d[5] => in_d[5].IN1
in_d[6] => in_d[6].IN1
in_e[0] => in_e[0].IN1
in_e[1] => in_e[1].IN1
in_e[2] => in_e[2].IN1
in_e[3] => in_e[3].IN1
in_e[4] => in_e[4].IN1
in_e[5] => in_e[5].IN1
in_e[6] => in_e[6].IN1
in_f[0] => in_f[0].IN1
in_f[1] => in_f[1].IN1
in_f[2] => in_f[2].IN1
in_f[3] => in_f[3].IN1
in_f[4] => in_f[4].IN1
in_f[5] => in_f[5].IN1
in_f[6] => in_f[6].IN1
in_g[0] => in_g[0].IN1
in_g[1] => in_g[1].IN1
in_g[2] => in_g[2].IN1
in_g[3] => in_g[3].IN1
in_g[4] => in_g[4].IN1
in_g[5] => in_g[5].IN1
in_g[6] => in_g[6].IN1
in_h[0] => in_h[0].IN1
in_h[1] => in_h[1].IN1
in_h[2] => in_h[2].IN1
in_h[3] => in_h[3].IN1
in_h[4] => in_h[4].IN1
in_h[5] => in_h[5].IN1
in_h[6] => in_h[6].IN1
select[0] => select[0].IN2
select[1] => select[1].IN2
select[2] => and2[0].IN1
select[2] => and2[1].IN1
select[2] => and2[2].IN1
select[2] => and2[3].IN1
select[2] => and2[4].IN1
select[2] => and2[5].IN1
select[2] => and2[6].IN1
select[2] => and1[0].IN1
select[2] => and1[1].IN1
select[2] => and1[2].IN1
select[2] => and1[3].IN1
select[2] => and1[4].IN1
select[2] => and1[5].IN1
select[2] => and1[6].IN1
out[0] <= or1[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= or1[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= or1[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= or1[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= or1[4].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= or1[5].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= or1[6].DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:segment_display|mux8x1:mux8x1_1|mux4x1:mux4x1_1
in_a[0] => and1[0].IN0
in_a[1] => and1[1].IN0
in_a[2] => and1[2].IN0
in_a[3] => and1[3].IN0
in_a[4] => and1[4].IN0
in_a[5] => and1[5].IN0
in_a[6] => and1[6].IN0
in_b[0] => and2[0].IN0
in_b[1] => and2[1].IN0
in_b[2] => and2[2].IN0
in_b[3] => and2[3].IN0
in_b[4] => and2[4].IN0
in_b[5] => and2[5].IN0
in_b[6] => and2[6].IN0
in_c[0] => and3[0].IN0
in_c[1] => and3[1].IN0
in_c[2] => and3[2].IN0
in_c[3] => and3[3].IN0
in_c[4] => and3[4].IN0
in_c[5] => and3[5].IN0
in_c[6] => and3[6].IN0
in_d[0] => and4[0].IN0
in_d[1] => and4[1].IN0
in_d[2] => and4[2].IN0
in_d[3] => and4[3].IN0
in_d[4] => and4[4].IN0
in_d[5] => and4[5].IN0
in_d[6] => and4[6].IN0
select[0] => and2[0].IN1
select[0] => and2[1].IN1
select[0] => and2[2].IN1
select[0] => and2[3].IN1
select[0] => and2[4].IN1
select[0] => and2[5].IN1
select[0] => and2[6].IN1
select[0] => and4[0].IN1
select[0] => and4[1].IN1
select[0] => and4[2].IN1
select[0] => and4[3].IN1
select[0] => and4[4].IN1
select[0] => and4[5].IN1
select[0] => and4[6].IN1
select[0] => and1[0].IN1
select[0] => and1[1].IN1
select[0] => and1[2].IN1
select[0] => and1[3].IN1
select[0] => and1[4].IN1
select[0] => and1[5].IN1
select[0] => and1[6].IN1
select[0] => and3[0].IN1
select[0] => and3[1].IN1
select[0] => and3[2].IN1
select[0] => and3[3].IN1
select[0] => and3[4].IN1
select[0] => and3[5].IN1
select[0] => and3[6].IN1
select[1] => and3[0].IN2
select[1] => and3[1].IN2
select[1] => and3[2].IN2
select[1] => and3[3].IN2
select[1] => and3[4].IN2
select[1] => and3[5].IN2
select[1] => and3[6].IN2
select[1] => and4[0].IN2
select[1] => and4[1].IN2
select[1] => and4[2].IN2
select[1] => and4[3].IN2
select[1] => and4[4].IN2
select[1] => and4[5].IN2
select[1] => and4[6].IN2
select[1] => and1[0].IN2
select[1] => and1[1].IN2
select[1] => and1[2].IN2
select[1] => and1[3].IN2
select[1] => and1[4].IN2
select[1] => and1[5].IN2
select[1] => and1[6].IN2
select[1] => and2[0].IN2
select[1] => and2[1].IN2
select[1] => and2[2].IN2
select[1] => and2[3].IN2
select[1] => and2[4].IN2
select[1] => and2[5].IN2
select[1] => and2[6].IN2
out[0] <= or1[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= or1[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= or1[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= or1[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= or1[4].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= or1[5].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= or1[6].DB_MAX_OUTPUT_PORT_TYPE


|batalha_naval|displayer:segment_display|mux8x1:mux8x1_1|mux4x1:mux4x1_2
in_a[0] => and1[0].IN0
in_a[1] => and1[1].IN0
in_a[2] => and1[2].IN0
in_a[3] => and1[3].IN0
in_a[4] => and1[4].IN0
in_a[5] => and1[5].IN0
in_a[6] => and1[6].IN0
in_b[0] => and2[0].IN0
in_b[1] => and2[1].IN0
in_b[2] => and2[2].IN0
in_b[3] => and2[3].IN0
in_b[4] => and2[4].IN0
in_b[5] => and2[5].IN0
in_b[6] => and2[6].IN0
in_c[0] => and3[0].IN0
in_c[1] => and3[1].IN0
in_c[2] => and3[2].IN0
in_c[3] => and3[3].IN0
in_c[4] => and3[4].IN0
in_c[5] => and3[5].IN0
in_c[6] => and3[6].IN0
in_d[0] => and4[0].IN0
in_d[1] => and4[1].IN0
in_d[2] => and4[2].IN0
in_d[3] => and4[3].IN0
in_d[4] => and4[4].IN0
in_d[5] => and4[5].IN0
in_d[6] => and4[6].IN0
select[0] => and2[0].IN1
select[0] => and2[1].IN1
select[0] => and2[2].IN1
select[0] => and2[3].IN1
select[0] => and2[4].IN1
select[0] => and2[5].IN1
select[0] => and2[6].IN1
select[0] => and4[0].IN1
select[0] => and4[1].IN1
select[0] => and4[2].IN1
select[0] => and4[3].IN1
select[0] => and4[4].IN1
select[0] => and4[5].IN1
select[0] => and4[6].IN1
select[0] => and1[0].IN1
select[0] => and1[1].IN1
select[0] => and1[2].IN1
select[0] => and1[3].IN1
select[0] => and1[4].IN1
select[0] => and1[5].IN1
select[0] => and1[6].IN1
select[0] => and3[0].IN1
select[0] => and3[1].IN1
select[0] => and3[2].IN1
select[0] => and3[3].IN1
select[0] => and3[4].IN1
select[0] => and3[5].IN1
select[0] => and3[6].IN1
select[1] => and3[0].IN2
select[1] => and3[1].IN2
select[1] => and3[2].IN2
select[1] => and3[3].IN2
select[1] => and3[4].IN2
select[1] => and3[5].IN2
select[1] => and3[6].IN2
select[1] => and4[0].IN2
select[1] => and4[1].IN2
select[1] => and4[2].IN2
select[1] => and4[3].IN2
select[1] => and4[4].IN2
select[1] => and4[5].IN2
select[1] => and4[6].IN2
select[1] => and1[0].IN2
select[1] => and1[1].IN2
select[1] => and1[2].IN2
select[1] => and1[3].IN2
select[1] => and1[4].IN2
select[1] => and1[5].IN2
select[1] => and1[6].IN2
select[1] => and2[0].IN2
select[1] => and2[1].IN2
select[1] => and2[2].IN2
select[1] => and2[3].IN2
select[1] => and2[4].IN2
select[1] => and2[5].IN2
select[1] => and2[6].IN2
out[0] <= or1[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= or1[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= or1[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= or1[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= or1[4].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= or1[5].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= or1[6].DB_MAX_OUTPUT_PORT_TYPE


