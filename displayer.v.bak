module displayer #(

    parameter DATA_WIDTH = 35 , 
    parameter COLUNE_SIZE = 7 

) (

    input clk ,
    input [DATA_WIDTH-1:0] image ,
    output [COLUNE_SIZE-1:0] colune_activator , colune_data
);

    wire [2:0] counter3bit_out;

    counter3bit counter3bit_1(
        .clk       (clk) , 
        .reset     (reset) ,
        .down      (0),
        .loopStart (counterLoop) ,
        .out       (counter3bit_out)
    );

    register8bit register8bit_1(
        .in    (counterLoop) , 
        .clk   (clk) , 
        .reset (1) , 
        .out   (colune_activator)
    );

    mux8x1 #(.DATA_WIDTH(COLUNE_SIZE)) mux8x1_1 (
        .in_a   (image[COLUNE_SIZE-1:0]) ,
        .in_b   (image[(COLUNE_SIZE*2)-1:COLUNE_SIZE]) ,
        .in_c   (image[(COLUNE_SIZE*3)-1:COLUNE_SIZE*2]) ,
        .in_d   (image[(COLUNE_SIZE*4)-1:COLUNE_SIZE*3]) ,
        .in_e   (image[(COLUNE_SIZE*5)-1:COLUNE_SIZE*4]) ,
        .in_f   (0) ,
        .in_g   (0) ,
        .in_h   (0) , 
        .select (counter3bit_out) ,
        .out    (colune_data)
    );
    
endmodule